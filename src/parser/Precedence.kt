package myte.parser

import myte.lexer.*

val ASSIGNMENT_PRECEDENCE: Int = 1
val LOGICAL_OR_PRECEDENCE: Int = 2
val LOGICAL_AND_PRECEDENCE: Int = 3
val LOGICAL_NOT_PRECEDENCE: Int = 4
val COMPARISON_PRECEDENCE: Int = 5
val ADD_PRECEDENCE: Int = 6
val MULTIPLY_PRECEDENCE: Int = 7
val EXPONENT_PRECEDENCE: Int = 8
val NUMERIC_PREFIX_PRECEDENCE: Int = 9
val CALL_PRECEDENCE: Int = 10

fun getPrecedenceForInfixToken(tokenType: TokenType): Int = when (tokenType) {
	TokenType.EQUALS -> ASSIGNMENT_PRECEDENCE
	TokenType.LOGICAL_OR -> LOGICAL_OR_PRECEDENCE
	TokenType.LOGICAL_AND -> LOGICAL_AND_PRECEDENCE
	TokenType.DOUBLE_EQUALS -> COMPARISON_PRECEDENCE
	TokenType.NOT_EQUALS -> COMPARISON_PRECEDENCE
	TokenType.LESS_THAN -> COMPARISON_PRECEDENCE
	TokenType.LESS_THAN_OR_EQUAL -> COMPARISON_PRECEDENCE
	TokenType.GREATER_THAN -> COMPARISON_PRECEDENCE
	TokenType.GREATER_THAN_OR_EQUAL -> COMPARISON_PRECEDENCE
	TokenType.PLUS -> ADD_PRECEDENCE
	TokenType.MINUS -> ADD_PRECEDENCE
	TokenType.ASTERISK -> MULTIPLY_PRECEDENCE
	TokenType.FORWARD_SLASH -> MULTIPLY_PRECEDENCE
	TokenType.CARET -> EXPONENT_PRECEDENCE
	TokenType.LEFT_PAREN -> CALL_PRECEDENCE
	else -> 0
}
