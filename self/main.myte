module myte.main

import std.io.println
import std.sys.{args, getEnv}
import std.sys.exit

import myte.common.files.stripRoot
import myte.parse.parser.parseFile
import myte.parse.printer.printModule

fun parse(filename: String) {
  match (parseFile(filename)) {
    | Ok (mod) -> {
      println(stripRoot(filename));
      println(printModule(mod));
    }
    | Error (error) -> {
      println(stripRoot(filename));
      println(`${error}`);
    }
  }
}

fun printUsage() {
  println(
`
OVERVIEW: Myte programming language

USAGE: myte [options] file...

OPTIONS:
  --help    Display this list of options
`
  );
  exit(1);
}

fun parseArgs(): Vec<String> {
  val optionsToIgnore = {|
    "--dump-ast",
    "--no-pretty-print",
  |};

  val files: Vec<String> = [];
  for (i in 1.to(args.size)) {
    val arg = args[i];
    if (optionsToIgnore.contains(arg)) {
      continue;
    }

    files.push(arg);
  }

  if (files.size == 0) {
    printUsage();
  }

  return files;
}

fun main() {
  getEnv("PWD");
  val files = parseArgs();
  for (file in files) {
    parse(file);
  }
}