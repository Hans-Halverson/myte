test/parser/ast/type/parens.myte
{
  node: Module,
  loc: 1:0-5:27,
  module: {
    node: Module,
    loc: 1:0-1:11,
    name: {
      node: ScopedIdentifier,
      loc: 1:7-1:11,
      scopes: [],
      name: {
        node: Identifier,
        loc: 1:7-1:11,
        name: "Test",
      },
    },
  },
  imports: [],
  toplevels: [
    {
      node: VariableDeclaration,
      loc: 3:0-3:17,
      kind: Immutable,
      pattern: {
        node: Identifier,
        loc: 3:4-3:5,
        name: "x",
      },
      init: {
        node: IntLiteral,
        loc: 3:15-3:16,
        value: 1,
        raw: "1",
      },
      annot: {
        node: PrimitiveType,
        loc: 3:8-3:11,
        kind: Int,
      },
    },
    {
      node: VariableDeclaration,
      loc: 4:0-4:21,
      kind: Immutable,
      pattern: {
        node: Identifier,
        loc: 4:4-4:5,
        name: "x",
      },
      init: {
        node: IntLiteral,
        loc: 4:19-4:20,
        value: 1,
        raw: "1",
      },
      annot: {
        node: PrimitiveType,
        loc: 4:10-4:13,
        kind: Int,
      },
    },
    {
      node: VariableDeclaration,
      loc: 5:0-5:27,
      kind: Immutable,
      pattern: {
        node: Identifier,
        loc: 5:4-5:5,
        name: "x",
      },
      init: {
        node: IntLiteral,
        loc: 5:25-5:26,
        value: 1,
        raw: "1",
      },
      annot: {
        node: FunctionType,
        loc: 5:8-5:21,
        params: [
          {
            node: PrimitiveType,
            loc: 5:8-5:11,
            kind: Int,
          },
        ],
        return: {
          node: PrimitiveType,
          loc: 5:15-5:21,
          kind: String,
        },
        type_params: [],
      },
    },
  ],
}