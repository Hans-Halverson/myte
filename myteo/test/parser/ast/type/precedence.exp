test/parser/ast/type/precedence.myte
{
  node: Module,
  loc: 1:0-8:0,
  module: {
    node: Module,
    loc: 1:0-1:11,
    name: {
      node: ScopedIdentifier,
      loc: 1:7-1:11,
      scopes: [],
      name: {
        node: Identifier,
        loc: 1:7-1:11,
        name: "Test",
      },
    },
  },
  imports: [],
  toplevels: [
    {
      node: TypeDeclaration,
      loc: 4:0-4:39,
      name: {
        node: Identifier,
        loc: 4:11-4:13,
        name: "t1",
      },
      type_params: [],
      builtin: false,
      alias: {
        node: FunctionType,
        loc: 4:16-4:39,
        params: [
          {
            node: FunctionType,
            loc: 4:17-4:30,
            params: [
              {
                node: PrimitiveType,
                loc: 4:17-4:20,
                kind: Int,
              },
            ],
            return: {
              node: PrimitiveType,
              loc: 4:24-4:30,
              kind: String,
            },
          },
        ],
        return: {
          node: PrimitiveType,
          loc: 4:35-4:39,
          kind: Bool,
        },
      },
    },
    {
      node: TypeDeclaration,
      loc: 5:0-5:39,
      name: {
        node: Identifier,
        loc: 5:11-5:13,
        name: "t2",
      },
      type_params: [],
      builtin: false,
      alias: {
        node: FunctionType,
        loc: 5:16-5:39,
        params: [
          {
            node: PrimitiveType,
            loc: 5:16-5:19,
            kind: Int,
          },
        ],
        return: {
          node: FunctionType,
          loc: 5:24-5:38,
          params: [
            {
              node: PrimitiveType,
              loc: 5:24-5:30,
              kind: String,
            },
          ],
          return: {
            node: PrimitiveType,
            loc: 5:34-5:38,
            kind: Bool,
          },
        },
      },
    },
    {
      node: TypeDeclaration,
      loc: 6:0-6:37,
      name: {
        node: Identifier,
        loc: 6:11-6:13,
        name: "t3",
      },
      type_params: [],
      builtin: false,
      alias: {
        node: FunctionType,
        loc: 6:16-6:37,
        params: [
          {
            node: PrimitiveType,
            loc: 6:16-6:19,
            kind: Int,
          },
        ],
        return: {
          node: FunctionType,
          loc: 6:23-6:37,
          params: [
            {
              node: PrimitiveType,
              loc: 6:23-6:29,
              kind: String,
            },
          ],
          return: {
            node: PrimitiveType,
            loc: 6:33-6:37,
            kind: Bool,
          },
        },
      },
    },
  ],
}