module Test

fun main() {
  // Full precedence
  +a() * b + c < d == e && f || g ? h : i;
  a ? b : c || d && e == f < g + h * i;

  // Group precedence
  a((b)(c));
  (a(b))(c);
  (a.b).c;
  a * (b * c);
  (a * b) * c;
  a + (b + c);
  (a + b) + c;
  a < (b < c);
  (a < b) < c;
  a == (b == c);
  (a == b) == c;
  a && (b && c);
  (a && b) && c;
  a || (b || c);
  (a || b) || c;

  // Call precedence
  +a();
  a().b();
  a * b();
  a + b();
  a < b();
  a == b();
  a && b();
  a || b();
  a ? b : c();

  // Access precedence
  +a.b;
  a.b * c;
  a * b.c;
  a.b + c;
  a + b.c;
  a.b < c;
  a < b.c;
  a.b == c;
  a == b.c;
  a.b && c;
  a && b.c;
  a.b || c;
  a || b.c;
  a.b ? c : d;
  a ? b.c : d;
  a ? b : c.d;

  +a[b];
  a[b] * c;
  a * b[c];
  a[b] + c;
  a + b[c];
  a[b] < c;
  a < b[c];
  a[b] == c;
  a == b[c];
  a[b] && c;
  a && b[c];
  a[b] || c;
  a || b[c];
  a[b] ? c : d;
  a ? b[c] : d;
  a ? b : c[d];

  // Unary precedence
  +(a + b);
  +a * b;
  +a + b;
  +a < b;
  +a == b;
  +a && b;
  +a || b;
  +a ? b : c;

  // Multiplication precedence
  a * b + c;
  a + b * c;
  a * b < c;
  a < b * c;
  a * b == c;
  a == b * c;
  a * b && c;
  a && b * c;
  a * b || c;
  a || b * c;
  a * b ? c : d;
  a ? b : c * d;

  // Addition precedence
  a + b < c;
  a < b + c;
  a + b == c;
  a == b + c;
  a + b && c;
  a && b + c;
  a + b || c;
  a || b + c;
  a + b ? c : d;
  a ? b : c + d;

  // Comparison precedence
  a < b == c;
  a == b < c;
  a < b && c;
  a && b < c;
  a < b || c;
  a || b < c;
  a < b ? c : d;
  a ? b : c < d;

  // Equality precedence
  a == b && c;
  a && b == c;
  a == b || c;
  a || b == c;
  a == b ? c : d;
  a ? b : c == d;

  // Logical and precedence
  a && b || c;
  a || b && c;
  a && b ? c : d;
  a ? b : c && d;

  // Logical or precedence
  a || b ? c : d;
  a ? b : c || d;
}
