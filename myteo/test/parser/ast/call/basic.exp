test/parser/ast/call/basic.myte
{
  node: Program,
  loc: 1:0-7:17,
  statements: [
    {
      node: ExpressionStatement,
      loc: 1:0-1:6,
      expression: {
        node: Call,
        loc: 1:0-1:5,
        func: {
          node: Identifier,
          loc: 1:0-1:3,
          name: "foo",
        },
        args: [],
      },
    },
    {
      node: ExpressionStatement,
      loc: 2:0-2:7,
      expression: {
        node: Call,
        loc: 2:0-2:6,
        func: {
          node: Identifier,
          loc: 2:0-2:3,
          name: "foo",
        },
        args: [
          {
            node: IntLiteral,
            loc: 2:4-2:5,
            value: 1,
            raw: "1",
          },
        ],
      },
    },
    {
      node: ExpressionStatement,
      loc: 3:0-3:13,
      expression: {
        node: Call,
        loc: 3:0-3:12,
        func: {
          node: Identifier,
          loc: 3:0-3:3,
          name: "foo",
        },
        args: [
          {
            node: IntLiteral,
            loc: 3:4-3:5,
            value: 1,
            raw: "1",
          },
          {
            node: IntLiteral,
            loc: 3:7-3:8,
            value: 2,
            raw: "2",
          },
          {
            node: IntLiteral,
            loc: 3:10-3:11,
            value: 3,
            raw: "3",
          },
        ],
      },
    },
    {
      node: ExpressionStatement,
      loc: 4:0-4:14,
      expression: {
        node: Call,
        loc: 4:0-4:13,
        func: {
          node: Identifier,
          loc: 4:0-4:3,
          name: "foo",
        },
        args: [
          {
            node: IntLiteral,
            loc: 4:4-4:5,
            value: 1,
            raw: "1",
          },
          {
            node: IntLiteral,
            loc: 4:7-4:8,
            value: 2,
            raw: "2",
          },
          {
            node: IntLiteral,
            loc: 4:10-4:11,
            value: 3,
            raw: "3",
          },
        ],
      },
    },
    {
      node: ExpressionStatement,
      loc: 6:0-6:8,
      expression: {
        node: Call,
        loc: 6:0-6:7,
        func: {
          node: Identifier,
          loc: 6:1-6:4,
          name: "foo",
        },
        args: [],
      },
    },
    {
      node: ExpressionStatement,
      loc: 7:0-7:17,
      expression: {
        node: Call,
        loc: 7:0-7:16,
        func: {
          node: LogicalOr,
          loc: 7:1-7:13,
          left: {
            node: Identifier,
            loc: 7:1-7:4,
            name: "foo",
          },
          right: {
            node: Identifier,
            loc: 7:9-7:12,
            name: "bar",
          },
        },
        args: [],
      },
    },
  ],
}