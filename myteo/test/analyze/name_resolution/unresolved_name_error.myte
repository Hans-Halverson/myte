module Test

type alias ty1 = int
type alias ty2 = Nonexistent

// Nonexistent type names
fun test0() {
  val x1: Nonexistent = 1;
}

// Separation between value and type namespaces
fun test1<T>() {
  var v = 1;
  // Values do not count as type names
  val x2: (x, test1) = 1;

  // Types do not count as value names
  (ty: int);
  (T: int);
}

// Names cannot be referenced before they are declared
fun test2() {
  // Error
  x;
  y;

  val x: int = 1;
  fun y() {}

  // Succeed
  x;
  y;
}

// Names cannot be referenced outside block scope
fun test3() {
  {
    val x: int = 1;
    fun y() {}

    // Succeed
    x;
    y;
  }

  // Error
  x;
  y;
}

// Names cannot be referenced outside function scope
fun test4() {
  fun inner() {
    val x: int = 1;
    fun y() {}

    // Succeed
    x;
    y;
  }

  // Error
  x;
  y; 
}

// Params cannot be referenced outside function scope
fun test5() {
  fun inner(x: int) {
    // Succeed
    x;
  }

  // Error
  x;
}

// Names cannot be reference in initialize before they are defined
fun test6() {
  val x: int = x;
}

fun main() {}
