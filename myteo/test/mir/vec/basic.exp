type std.vec.Vec<int> {int*, int, int}

type std.vec.Vec<bool> {bool*, int, int}

func int @std.vec.Vec.get<int>(std.vec.Vec<int>* %0, int %1) {
  %2 := Lt int %1, 0
  branch %2, @0, @1
label @0:
  %3 := Mov bool true
  continue @2
label @1:
  %4 := GetPointer int %0.1
  %5 := Load int %4
  %6 := GtEq int %1, %5
  continue @2
label @2:
  %7 := Phi bool @1:%6, @0:%3
  branch %7, @3, @4
label @3:
  %8 := Call unit @std.sys.abort()
  continue @4
label @4:
  %9 := GetPointer int* %0.0
  %10 := Load int* %9
  %11 := GetPointer int %10[int %1]
  %12 := Load int %11
  Ret %12
}

func bool @std.vec.Vec.get<bool>(std.vec.Vec<bool>* %13, int %14) {
  %15 := Lt int %14, 0
  branch %15, @5, @6
label @5:
  %16 := Mov bool true
  continue @7
label @6:
  %17 := GetPointer int %13.1
  %18 := Load int %17
  %19 := GtEq int %14, %18
  continue @7
label @7:
  %20 := Phi bool @6:%19, @5:%16
  branch %20, @8, @9
label @8:
  %21 := Call unit @std.sys.abort()
  continue @9
label @9:
  %22 := GetPointer bool* %13.0
  %23 := Load bool* %22
  %24 := GetPointer bool %23[int %14]
  %25 := Load bool %24
  Ret %25
}

func unit @std.vec.Vec.set<int>(std.vec.Vec<int>* %26, int %27, int %28) {
  %29 := Lt int %27, 0
  branch %29, @10, @11
label @10:
  %30 := Mov bool true
  continue @12
label @11:
  %31 := GetPointer int %26.1
  %32 := Load int %31
  %33 := GtEq int %27, %32
  continue @12
label @12:
  %34 := Phi bool @11:%33, @10:%30
  branch %34, @13, @14
label @13:
  %35 := Call unit @std.sys.abort()
  continue @14
label @14:
  %36 := GetPointer int* %26.0
  %37 := Load int* %36
  %38 := GetPointer int %37[int %27]
  Store int %38, %28
  Ret
}

func unit @std.vec.Vec.set<bool>(std.vec.Vec<bool>* %39, int %40, bool %41) {
  %42 := Lt int %40, 0
  branch %42, @15, @16
label @15:
  %43 := Mov bool true
  continue @17
label @16:
  %44 := GetPointer int %39.1
  %45 := Load int %44
  %46 := GtEq int %40, %45
  continue @17
label @17:
  %47 := Phi bool @16:%46, @15:%43
  branch %47, @18, @19
label @18:
  %48 := Call unit @std.sys.abort()
  continue @19
label @19:
  %49 := GetPointer bool* %39.0
  %50 := Load bool* %49
  %51 := GetPointer bool %50[int %40]
  Store bool %51, %41
  Ret
}

func unit @std.vec.Vec.push<int>(std.vec.Vec<int>* %52, int %53) {
  %54 := GetPointer int %52.1
  %55 := Load int %54
  %56 := GetPointer int %52.2
  %57 := Load int %56
  %58 := Eq int %55, %57
  branch %58, @20, @21
label @20:
  %59 := Call unit @std.vec.Vec.resize<int>(%52)
  continue @21
label @21:
  %60 := GetPointer int* %52.0
  %61 := Load int* %60
  %62 := GetPointer int %52.1
  %63 := Load int %62
  %64 := GetPointer int %61[int %63]
  Store int %64, %53
  %65 := GetPointer int %52.1
  %66 := GetPointer int %52.1
  %67 := Load int %66
  %68 := Add int %67, 1
  Store int %65, %68
  Ret
}

func unit @std.vec.Vec.push<bool>(std.vec.Vec<bool>* %69, bool %70) {
  %71 := GetPointer int %69.1
  %72 := Load int %71
  %73 := GetPointer int %69.2
  %74 := Load int %73
  %75 := Eq int %72, %74
  branch %75, @22, @23
label @22:
  %76 := Call unit @std.vec.Vec.resize<bool>(%69)
  continue @23
label @23:
  %77 := GetPointer bool* %69.0
  %78 := Load bool* %77
  %79 := GetPointer int %69.1
  %80 := Load int %79
  %81 := GetPointer bool %78[int %80]
  Store bool %81, %70
  %82 := GetPointer int %69.1
  %83 := GetPointer int %69.1
  %84 := Load int %83
  %85 := Add int %84, 1
  Store int %82, %85
  Ret
}

func unit @std.vec.Vec.resize<int>(std.vec.Vec<int>* %86) {
  %87 := GetPointer int %86.2
  %88 := Load int %87
  %89 := Mov int %88
  %90 := Eq int %89, 0
  branch %90, @24, @25
label @24:
  %91 := Mov int 1
  continue @26
label @25:
  %92 := Mul int %89, 2
  continue @26
label @26:
  %93 := Phi int @24:%91, @25:%92
  %94 := Mov int %93
  %95 := GetPointer int %86.2
  Store int %95, %94
  %96 := CallBuiltin int* myte_alloc(%94)
  %97 := Mov int* %96
  %98 := GetPointer int* %86.0
  %99 := Load int* %98
  %100 := CallBuiltin unit myte_copy(%97, %99, %89)
  %101 := GetPointer int* %86.0
  Store int* %101, %97
  Ret
}

func unit @std.vec.Vec.resize<bool>(std.vec.Vec<bool>* %102) {
  %103 := GetPointer int %102.2
  %104 := Load int %103
  %105 := Mov int %104
  %106 := Eq int %105, 0
  branch %106, @27, @28
label @27:
  %107 := Mov int 1
  continue @29
label @28:
  %108 := Mul int %105, 2
  continue @29
label @29:
  %109 := Phi int @27:%107, @28:%108
  %110 := Mov int %109
  %111 := GetPointer int %102.2
  Store int %111, %110
  %112 := CallBuiltin bool* myte_alloc(%110)
  %113 := Mov bool* %112
  %114 := GetPointer bool* %102.0
  %115 := Load bool* %114
  %116 := CallBuiltin unit myte_copy(%113, %115, %105)
  %117 := GetPointer bool* %102.0
  Store bool* %117, %113
  Ret
}

func unit @test.testVecGet(std.vec.Vec<int>* %118, std.vec.Vec<bool>* %119) {
  %120 := Call int @std.vec.Vec.get<int>(%118, 7)
  %121 := Call bool @std.vec.Vec.get<bool>(%119, 7)
  Ret
}

func unit @test.testVecSet(std.vec.Vec<int>* %122, std.vec.Vec<bool>* %123) {
  %124 := Call unit @std.vec.Vec.set<int>(%122, 7, 8)
  %125 := Call unit @std.vec.Vec.set<bool>(%123, 7, true)
  Ret
}

func unit @test.testVecPush(std.vec.Vec<int>* %126, std.vec.Vec<bool>* %127) {
  %128 := Call unit @std.vec.Vec.push<int>(%126, 1)
  %129 := Call unit @std.vec.Vec.push<bool>(%127, true)
  Ret
}

func int @test.main() {
  Ret 0
}