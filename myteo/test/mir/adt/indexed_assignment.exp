type test.Rec1 {int}

type test.Rec2 {string, bool, int}

type test.Rec3 {byte, test.Rec2*, long}

type test.Rec4 {int, int, test.Rec3*}

type test.Tup1 {test.Rec3*}

func unit @test.simpleAccesses(test.Rec1* %0, test.Rec2* %1) {
  %2 := GetPointer int %0.0
  Store int %2, 1
  %3 := GetPointer string %1.0
  Store string %3, "string"
  %4 := GetPointer bool %1.1
  Store bool %4, true
  Ret
}

func unit @test.nestedAccesses(test.Rec3* %5, test.Rec4* %6) {
  %7 := GetPointer byte %5.0
  Store byte %7, 1
  %8 := GetPointer test.Rec2* %5.1
  %9 := Load test.Rec2* %8
  %10 := GetPointer int %9.2
  Store int %10, 1
  %11 := GetPointer test.Rec3* %6.2
  %12 := Load test.Rec3* %11
  %13 := GetPointer test.Rec2* %12.1
  %14 := Load test.Rec2* %13
  %15 := GetPointer string %14.0
  Store string %15, "string"
  Ret
}

func unit @test.namedAndIndexedAccess(test.Tup1* %16) {
  %17 := GetPointer test.Rec3* %16.0
  %18 := Load test.Rec3* %17
  %19 := GetPointer test.Rec2* %18.1
  %20 := Load test.Rec2* %19
  %21 := GetPointer string %20.0
  Store string %21, "string"
  Ret
}

func unit @test.main() {
  Ret
}