type Tup1 {int}

type Tup2 {bool, long, int}

type Tup3 {byte, Tup2, byte}

func unit @test.arguments(int %0) {
  %1 := CallBuiltin Tup2* myte.myte_alloc(1)
  %2 := GetOffset bool %1[0].0
  Store %2, true
  %3 := GetOffset long %1[0].1
  Store %3, 3
  %4 := GetOffset int %1[0].2
  Store %4, %0
  %5 := CallBuiltin Tup3* myte.myte_alloc(1)
  %6 := GetOffset byte %5[0].0
  Store %6, 6
  %7 := CallBuiltin Tup2* myte.myte_alloc(1)
  %8 := GetOffset bool %7[0].0
  Store %8, false
  %9 := GetOffset long %7[0].1
  Store %9, 7
  %10 := GetOffset int %7[0].2
  Store %10, 8
  %11 := GetOffset Tup2 %5[0].1
  Store %11, %7
  %12 := GetOffset byte %5[0].2
  Store %12, 9
  Ret
}

func unit @test.tupleConstructor() {
  %13 := CallBuiltin Tup1* myte.myte_alloc(1)
  %14 := GetOffset int %13[0].0
  Store %14, 3
  %15 := CallBuiltin Tup2* myte.myte_alloc(1)
  %16 := GetOffset bool %15[0].0
  Store %16, true
  %17 := GetOffset long %15[0].1
  Store %17, 4
  %18 := GetOffset int %15[0].2
  Store %18, 5
  Ret
}

func unit @test.main() {
  Ret
}