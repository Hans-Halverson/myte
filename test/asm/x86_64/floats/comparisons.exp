  .global _main

  .text
_main:
  movl $0, %eax
  ret
test.testCompareMemoryMemory:
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  jne .L0
  xorl %eax, %eax
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  sete %al
  jmp .L6
.L0:
  xorl %ecx, %ecx
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  sete %cl
  xorl %eax, %eax
  testb %cl, %cl
  sete %al
  testb %al, %al
  je .L1
  xorl %ecx, %ecx
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  sete %cl
  xorl %eax, %eax
  testb %cl, %cl
  sete %al
  jmp .L6
.L1:
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  jae .L2
  xorl %eax, %eax
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  setb %al
  jmp .L6
.L2:
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  ja .L3
  xorl %eax, %eax
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  setbe %al
  jmp .L6
.L3:
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  jbe .L4
  xorl %eax, %eax
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  seta %al
  jmp .L6
.L4:
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  jb .L5
  xorl %eax, %eax
  movq 8(%rsp), %xmm0
  ucomisd 16(%rsp), %xmm0
  setae %al
  jmp .L6
.L5:
  movb $1, %al
.L6:
  ret
test.testCompareMemoryRegister:
  ucomisd 8(%rsp), %xmm0
  jne .L7
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  sete %al
  jmp .L13
.L7:
  xorl %ecx, %ecx
  ucomisd 8(%rsp), %xmm0
  sete %cl
  xorl %eax, %eax
  testb %cl, %cl
  sete %al
  testb %al, %al
  je .L8
  xorl %ecx, %ecx
  ucomisd 8(%rsp), %xmm0
  sete %cl
  xorl %eax, %eax
  testb %cl, %cl
  sete %al
  jmp .L13
.L8:
  ucomisd 8(%rsp), %xmm0
  jbe .L9
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  seta %al
  jmp .L13
.L9:
  ucomisd 8(%rsp), %xmm0
  jb .L10
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  setae %al
  jmp .L13
.L10:
  ucomisd 8(%rsp), %xmm0
  jae .L11
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  setb %al
  jmp .L13
.L11:
  ucomisd 8(%rsp), %xmm0
  ja .L12
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  setbe %al
  jmp .L13
.L12:
  movb $1, %al
.L13:
  ret
test.testCompareRegisterMemory:
  ucomisd 8(%rsp), %xmm0
  jne .L14
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  sete %al
  jmp .L20
.L14:
  xorl %ecx, %ecx
  ucomisd 8(%rsp), %xmm0
  sete %cl
  xorl %eax, %eax
  testb %cl, %cl
  sete %al
  testb %al, %al
  je .L15
  xorl %ecx, %ecx
  ucomisd 8(%rsp), %xmm0
  sete %cl
  xorl %eax, %eax
  testb %cl, %cl
  sete %al
  jmp .L20
.L15:
  ucomisd 8(%rsp), %xmm0
  jae .L16
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  setb %al
  jmp .L20
.L16:
  ucomisd 8(%rsp), %xmm0
  ja .L17
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  setbe %al
  jmp .L20
.L17:
  ucomisd 8(%rsp), %xmm0
  jbe .L18
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  seta %al
  jmp .L20
.L18:
  ucomisd 8(%rsp), %xmm0
  jb .L19
  xorl %eax, %eax
  ucomisd 8(%rsp), %xmm0
  setae %al
  jmp .L20
.L19:
  movb $1, %al
.L20:
  ret
test.testCompareRegisterRegister:
  ucomisd %xmm1, %xmm0
  jne .L21
  xorl %eax, %eax
  ucomisd %xmm1, %xmm0
  sete %al
  jmp .L27
.L21:
  xorl %ecx, %ecx
  ucomisd %xmm1, %xmm0
  sete %cl
  xorl %eax, %eax
  testb %cl, %cl
  sete %al
  testb %al, %al
  je .L22
  xorl %ecx, %ecx
  ucomisd %xmm1, %xmm0
  sete %cl
  xorl %eax, %eax
  testb %cl, %cl
  sete %al
  jmp .L27
.L22:
  ucomisd %xmm1, %xmm0
  jae .L23
  xorl %eax, %eax
  ucomisd %xmm1, %xmm0
  setb %al
  jmp .L27
.L23:
  ucomisd %xmm1, %xmm0
  ja .L24
  xorl %eax, %eax
  ucomisd %xmm1, %xmm0
  setbe %al
  jmp .L27
.L24:
  ucomisd %xmm1, %xmm0
  jbe .L25
  xorl %eax, %eax
  ucomisd %xmm1, %xmm0
  seta %al
  jmp .L27
.L25:
  ucomisd %xmm1, %xmm0
  jb .L26
  xorl %eax, %eax
  ucomisd %xmm1, %xmm0
  setae %al
  jmp .L27
.L26:
  movb $1, %al
.L27:
  ret