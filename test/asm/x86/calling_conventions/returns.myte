module test

fun use<T>(x: T): T = x

fun testReturnsInMain(): Int = 1
fun testReturnsInMain2(x: Int): Int = x

fun testNestedReturnNoReturnRegisterMove(): Int {
  // Reuse return register without move
  return testReturnsInMain();
}

fun testReturnRegisterClobberAcrossCall(): Int {
  val x = testReturnsInMain();
  val y = testReturnsInMain();
  return x + y;
}

fun main() {
  use(testReturnsInMain);
  use(testReturnsInMain2);
  use(testNestedReturnNoReturnRegisterMove);
  use(testReturnRegisterClobberAcrossCall);
}