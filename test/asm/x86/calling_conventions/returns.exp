  .global _main

  .text
_main:
  leaq test.testReturnsInMain(%rip), %rdi
  call test.use$fn$
  leaq test.testReturnsInMain2(%rip), %rdi
  call test.use$fn$
  leaq test.testNestedReturnNoReturnRegisterMove(%rip), %rdi
  call test.use$fn$
  leaq test.testReturnRegisterClobberAcrossCall(%rip), %rdi
  call test.use$fn$
  movl $0, %eax
  ret
test.testNestedReturnNoReturnRegisterMove:
  call test.testReturnsInMain
  ret
test.testReturnRegisterClobberAcrossCall:
  push %rbx
  call test.testReturnsInMain
  movl %eax, %ebx
  call test.testReturnsInMain
  addl %ebx, %eax
  pop %rbx
  ret
test.testReturnsInMain:
  movl $1, %eax
  ret
test.testReturnsInMain2:
  movl %edi, %eax
  ret
test.use$fn$:
  movq %rdi, %rax
  ret