module test

fun use<T>(x: T): T = x

fun zeroArgFunction(): Int = 1
fun testOneArgFunction(p1: Int): Int = p1
fun testTwoArgFunction(p1: Int, p2: Int): Int = p1 + p2
fun testThreeArgFunction(p1: Int, p2: Int, p3: Int): Int = p1 + p2 + p3
fun testFourArgFunction(p1: Int, p2: Int, p3: Int, p4: Int): Int = p1 + p2 + p3 + p4
fun testFiveArgFunction(p1: Int, p2: Int, p3: Int, p4: Int, p5: Int): Int = p1 + p2 + p3 + p4 + p5
fun testSixArgFunction(p1: Int, p2: Int, p3: Int, p4: Int, p5: Int, p6: Int): Int = p1 + p2 + p3 + p4 + p5 + p6
fun testSevenArgFunction(p1: Int, p2: Int, p3: Int, p4: Int, p5: Int, p6: Int, p7: Int): Int = p1 + p2 + p3 + p4 + p5 + p6 + p7
fun testEightArgFunction(p1: Int, p2: Int, p3: Int, p4: Int, p5: Int, p6: Int, p7: Int, p8: Int): Int = p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8
fun testNineArgFunction(p1: Int, p2: Int, p3: Int, p4: Int, p5: Int, p6: Int,  p7: Int, p8: Int, p9: Int): Int = p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8 + p9

fun passedInRegistersAndStack() {
  testNineArgFunction(1, 2, 3, 4, 5, 6, 7, 8, 9);
}

fun testFunctionStackParamsOffsetByPushedCalleeSavedRegisters(p1: Int, p2: Int, p3: Int, p4: Int, p5: Int, p6: Int, p7: Int): Int {
  use(3);
  return p1 + p7;
}

fun testFunctionStackParamsOffsetByStackFrameAndPushedCalleeSavedRegisters(p1: Int, p2: Int, p3: Int, p4: Int, p5: Int, p6: Int, p7: Int, p8: Int): Int {
  // There aren't enough callee saved registers so one parameter must be spilled
  use(3);
  return p1 + p2 + p3 + p4 + p5 + p6 + p7 + p8;
}

fun longArgs(p1: Long, p2: Int, p3: Int, p4: Int, p5: Int, p6: Int, p7: Long): Long = p1 + p7
fun testLongArgs() {
  // Fits in int, so can pass directly in mov or push instruction
  longArgs(1, 2, 3, 4, 5, 6, 7);
  // Does not fit in int. First param is passed directly, but last param is first moved to register
  // then pushed on stack, as push does not take 64 byte imms.
  longArgs(2147483648, 2, 3, 4, 5, 6, 2147483648);
}

fun main() {
  use(zeroArgFunction);
  use(testOneArgFunction);
  use(testTwoArgFunction);
  use(testThreeArgFunction);
  use(testFourArgFunction);
  use(testFiveArgFunction);
  use(testSixArgFunction);
  use(testSevenArgFunction);
  use(testEightArgFunction);
  use(testNineArgFunction);
  use(passedInRegistersAndStack);
  use(testFunctionStackParamsOffsetByPushedCalleeSavedRegisters);
  use(testFunctionStackParamsOffsetByStackFrameAndPushedCalleeSavedRegisters);
  use(testLongArgs);
}