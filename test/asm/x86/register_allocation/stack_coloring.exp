  .global _main

  .text
test.cond:
  movb $1, %al
  ret
_main:
  movl $0, %eax
  ret
test.testMultipleInterferingSpillsInDifferentStackSlots:
  push %rbx
  push %r12
  push %r13
  push %r14
  push %r15
  subq $32, %rsp
  movl %edi, %r15d
  movl %esi, 32(%rsp)
  movl %edx, 24(%rsp)
  movl %ecx, 16(%rsp)
  movl %r8d, 8(%rsp)
  cmpl $1, %r15d
  jne .L0
  movl $101, %r14d
  movl $102, %r13d
  movl $103, %r12d
  movl $104, %ebx
  jmp .L1
.L0:
  movl $1, %r14d
  movl $2, %r13d
  movl $3, %r12d
  movl $4, %ebx
.L1:
  movl $3, %edi
  call test.use
  addl %r14d, %r13d
  addl %r13d, %r12d
  addl %r12d, %ebx
  addl %ebx, %r15d
  movl 32(%rsp), %eax
  addl %r15d, %eax
  movl 24(%rsp), %ebx
  addl %eax, %ebx
  movl 16(%rsp), %ecx
  addl %ebx, %ecx
  movl 8(%rsp), %eax
  addl %ecx, %eax
  addq $32, %rsp
  pop %r15
  pop %r14
  pop %r13
  pop %r12
  pop %rbx
  ret
test.testNonInterferingSpillsReuseStackSlots:
  push %rbx
  push %r12
  push %r13
  push %r14
  push %r15
  subq $8, %rsp
  call test.cond
  testb %al, %al
  je .L2
  movl $101, %r15d
  movl $102, %r14d
  movl $103, %r13d
  movl $104, 8(%rsp)
  movl $105, %r12d
  movl $106, %r11d
  movl $107, %r10d
  movl $108, %r9d
  movl $109, %r8d
  movl $110, %edi
  movl $111, %esi
  movl $112, %edx
  movl $113, %ecx
  movl $114, %ebx
  movl $115, %eax
  jmp .L3
.L2:
  movl $1, %r15d
  movl $2, %r14d
  movl $3, %r13d
  movl $4, 8(%rsp)
  movl $5, %r12d
  movl $6, %r11d
  movl $7, %r10d
  movl $8, %r9d
  movl $9, %r8d
  movl $10, %edi
  movl $11, %esi
  movl $12, %edx
  movl $13, %ecx
  movl $14, %ebx
  movl $15, %eax
.L3:
  addl %r15d, %r14d
  addl %r14d, %r13d
  movl 8(%rsp), %r14d
  addl %r13d, %r14d
  addl %r14d, %r12d
  addl %r12d, %r11d
  addl %r11d, %r10d
  addl %r10d, %r9d
  addl %r9d, %r8d
  addl %r8d, %edi
  addl %edi, %esi
  addl %esi, %edx
  addl %edx, %ecx
  addl %ecx, %ebx
  addl %ebx, %eax
  call test.cond
  testb %al, %al
  je .L4
  movl $101, %r15d
  movl $102, %r14d
  movl $103, %r13d
  movl $104, 8(%rsp)
  movl $105, %r12d
  movl $106, %r11d
  movl $107, %r10d
  movl $108, %r9d
  movl $109, %r8d
  movl $110, %edi
  movl $111, %esi
  movl $112, %edx
  movl $113, %ecx
  movl $114, %ebx
  movl $115, %eax
  jmp .L5
.L4:
  movl $1, %r15d
  movl $2, %r14d
  movl $3, %r13d
  movl $4, 8(%rsp)
  movl $5, %r12d
  movl $6, %r11d
  movl $7, %r10d
  movl $8, %r9d
  movl $9, %r8d
  movl $10, %edi
  movl $11, %esi
  movl $12, %edx
  movl $13, %ecx
  movl $14, %ebx
  movl $15, %eax
.L5:
  addl %r15d, %r14d
  addl %r14d, %r13d
  movl 8(%rsp), %r14d
  addl %r13d, %r14d
  addl %r14d, %r12d
  addl %r12d, %r11d
  addl %r11d, %r10d
  addl %r10d, %r9d
  addl %r9d, %r8d
  addl %r8d, %edi
  addl %edi, %esi
  addl %esi, %edx
  addl %edx, %ecx
  addl %ecx, %ebx
  addl %ebx, %eax
  call test.cond
  testb %al, %al
  je .L6
  movl $101, %r15d
  movl $102, %r14d
  movl $103, %r13d
  movl $104, 8(%rsp)
  movl $105, %r12d
  movl $106, %r11d
  movl $107, %r10d
  movl $108, %r9d
  movl $109, %r8d
  movl $110, %edi
  movl $111, %esi
  movl $112, %edx
  movl $113, %ecx
  movl $114, %ebx
  movl $115, %eax
  jmp .L7
.L6:
  movl $1, %r15d
  movl $2, %r14d
  movl $3, %r13d
  movl $4, 8(%rsp)
  movl $5, %r12d
  movl $6, %r11d
  movl $7, %r10d
  movl $8, %r9d
  movl $9, %r8d
  movl $10, %edi
  movl $11, %esi
  movl $12, %edx
  movl $13, %ecx
  movl $14, %ebx
  movl $15, %eax
.L7:
  addl %r15d, %r14d
  addl %r14d, %r13d
  movl 8(%rsp), %r14d
  addl %r13d, %r14d
  addl %r14d, %r12d
  addl %r12d, %r11d
  addl %r11d, %r10d
  addl %r10d, %r9d
  addl %r9d, %r8d
  addl %r8d, %edi
  addl %edi, %esi
  addl %esi, %edx
  addl %edx, %ecx
  addl %ecx, %ebx
  addl %ebx, %eax
  movl $77, %eax
  addq $8, %rsp
  pop %r15
  pop %r14
  pop %r13
  pop %r12
  pop %rbx
  ret
test.testPartialReuseStackSlots:
  push %rbx
  push %r12
  push %r13
  push %r14
  push %r15
  subq $16, %rsp
  call test.cond
  testb %al, %al
  je .L8
  movl $101, %r15d
  movl $102, %r14d
  movl $103, %r13d
  movl $104, 16(%rsp)
  movl $105, 8(%rsp)
  movl $106, %r12d
  movl $107, %r11d
  movl $108, %r10d
  movl $109, %r9d
  movl $110, %r8d
  movl $111, %edi
  movl $112, %esi
  movl $113, %edx
  movl $114, %ecx
  movl $115, %ebx
  movl $116, %eax
  jmp .L9
.L8:
  movl $1, %r15d
  movl $2, %r14d
  movl $3, %r13d
  movl $4, 16(%rsp)
  movl $5, 8(%rsp)
  movl $6, %r12d
  movl $7, %r11d
  movl $8, %r10d
  movl $9, %r9d
  movl $10, %r8d
  movl $11, %edi
  movl $12, %esi
  movl $13, %edx
  movl $14, %ecx
  movl $15, %ebx
  movl $16, %eax
.L9:
  addl %r15d, %r14d
  addl %r14d, %r13d
  movl 16(%rsp), %r14d
  addl %r13d, %r14d
  movl 8(%rsp), %r13d
  addl %r14d, %r13d
  addl %r13d, %r12d
  addl %r12d, %r11d
  addl %r11d, %r10d
  addl %r10d, %r9d
  addl %r9d, %r8d
  addl %r8d, %edi
  addl %edi, %esi
  addl %esi, %edx
  addl %edx, %ecx
  addl %ecx, %ebx
  addl %ebx, %eax
  call test.cond
  testb %al, %al
  je .L10
  movl $101, %r15d
  movl $102, %r14d
  movl $103, %r13d
  movl $104, 16(%rsp)
  movl $105, %r12d
  movl $106, %r11d
  movl $107, %r10d
  movl $108, %r9d
  movl $109, %r8d
  movl $110, %edi
  movl $111, %esi
  movl $112, %edx
  movl $113, %ecx
  movl $114, %ebx
  movl $115, %eax
  jmp .L11
.L10:
  movl $1, %r15d
  movl $2, %r14d
  movl $3, %r13d
  movl $4, 16(%rsp)
  movl $5, %r12d
  movl $6, %r11d
  movl $7, %r10d
  movl $8, %r9d
  movl $9, %r8d
  movl $10, %edi
  movl $11, %esi
  movl $12, %edx
  movl $13, %ecx
  movl $14, %ebx
  movl $15, %eax
.L11:
  addl %r15d, %r14d
  addl %r14d, %r13d
  movl 16(%rsp), %r14d
  addl %r13d, %r14d
  addl %r14d, %r12d
  addl %r12d, %r11d
  addl %r11d, %r10d
  addl %r10d, %r9d
  addl %r9d, %r8d
  addl %r8d, %edi
  addl %edi, %esi
  addl %esi, %edx
  addl %edx, %ecx
  addl %ecx, %ebx
  addl %ebx, %eax
  call test.cond
  testb %al, %al
  je .L12
  movl $101, %r15d
  movl $102, %r14d
  movl $103, %r13d
  movl $104, 16(%rsp)
  movl $105, 8(%rsp)
  movl $106, %r12d
  movl $107, %r11d
  movl $108, %r10d
  movl $109, %r9d
  movl $110, %r8d
  movl $111, %edi
  movl $112, %esi
  movl $113, %edx
  movl $114, %ecx
  movl $115, %ebx
  movl $116, %eax
  jmp .L13
.L12:
  movl $1, %r15d
  movl $2, %r14d
  movl $3, %r13d
  movl $4, 16(%rsp)
  movl $5, 8(%rsp)
  movl $6, %r12d
  movl $7, %r11d
  movl $8, %r10d
  movl $9, %r9d
  movl $10, %r8d
  movl $11, %edi
  movl $12, %esi
  movl $13, %edx
  movl $14, %ecx
  movl $15, %ebx
  movl $16, %eax
.L13:
  addl %r15d, %r14d
  addl %r14d, %r13d
  movl 16(%rsp), %r14d
  addl %r13d, %r14d
  movl 8(%rsp), %r13d
  addl %r14d, %r13d
  addl %r13d, %r12d
  addl %r12d, %r11d
  addl %r11d, %r10d
  addl %r10d, %r9d
  addl %r9d, %r8d
  addl %r8d, %edi
  addl %edi, %esi
  addl %esi, %edx
  addl %edx, %ecx
  addl %ecx, %ebx
  addl %ebx, %eax
  movl $77, %eax
  addq $16, %rsp
  pop %r15
  pop %r14
  pop %r13
  pop %r12
  pop %rbx
  ret
test.use:
  movl %edi, %eax
  ret