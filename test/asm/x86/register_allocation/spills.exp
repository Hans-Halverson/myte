  .global _main

  .text
test.cond:
  movb $1, %al
  ret
_main:
  push $16
  movl $1, %edi
  movl $2, %esi
  movl $3, %edx
  movl $4, %ecx
  movl $5, %r8d
  movl $6, %r9d
  call test.testSingleSpillUsingAllRegisters
  addq $8, %rsp
  movl %eax, %edi
  call std.int.Int.toString
  movq %rax, %rdi
  call std.io.println
  movl $0, %eax
  ret
test.testCallerSavedRegistersSpilledAcrossFunctionCalls:
  push %rbx
  push %r12
  push %r13
  push %r14
  push %r15
  subq $8, %rsp
  movl %edi, 8(%rsp)
  movl %esi, %r15d
  movl %edx, %r14d
  movl %ecx, %r13d
  movl %r8d, %r12d
  movl %r9d, %ebx
  movl $3, %edi
  call test.use
  addl 8(%rsp), %r15d
  addl %r15d, %r14d
  addl %r14d, %r13d
  addl %r13d, %r12d
  movl %ebx, %eax
  addl %r12d, %eax
  addq $8, %rsp
  pop %r15
  pop %r14
  pop %r13
  pop %r12
  pop %rbx
  ret
test.testSingleSpillUsingAllRegisters:
  push %rbx
  push %r12
  push %r13
  push %r14
  push %r15
  subq $8, %rsp
  movl %edx, 8(%rsp)
  movl %ecx, %r15d
  movl %esi, %r14d
  addl %edi, %r14d
  movl 8(%rsp), %r13d
  addl %edi, %r13d
  movl %r15d, %r12d
  addl %edi, %r12d
  movl %r8d, %r11d
  addl %edi, %r11d
  movl %r9d, %r10d
  addl %edi, %r10d
  movl 8(%rsp), %edx
  addl %esi, %edx
  movl %r15d, %ecx
  addl %esi, %ecx
  movl %r8d, %ebx
  addl %esi, %ebx
  movl %r9d, %eax
  addl %esi, %eax
  addl %edi, %esi
  movl 8(%rsp), %edi
  addl %esi, %edi
  addl %edi, %r15d
  addl %r15d, %r8d
  addl %r8d, %r9d
  addl %r9d, %r14d
  addl %r14d, %r13d
  addl %r13d, %r12d
  addl %r12d, %r11d
  addl %r11d, %r10d
  addl %r10d, %edx
  addl %edx, %ecx
  addl %ecx, %ebx
  addl %ebx, %eax
  addl 56(%rsp), %eax
  addq $8, %rsp
  pop %r15
  pop %r14
  pop %r13
  pop %r12
  pop %rbx
  ret
test.testSingleSpillUsingAllRegistersFromLocals:
  push %rbx
  push %r12
  push %r13
  push %r14
  push %r15
  subq $8, %rsp
  call test.cond
  testb %al, %al
  je .L0
  movl $101, %r15d
  movl $102, %r14d
  movl $103, %r13d
  movl $104, 8(%rsp)
  movl $105, %r12d
  movl $106, %r11d
  movl $107, %r10d
  movl $108, %r9d
  movl $109, %r8d
  movl $110, %edi
  movl $111, %esi
  movl $112, %edx
  movl $113, %ecx
  movl $114, %ebx
  movl $115, %eax
  jmp .L1
.L0:
  movl $1, %r15d
  movl $2, %r14d
  movl $3, %r13d
  movl $4, 8(%rsp)
  movl $5, %r12d
  movl $6, %r11d
  movl $7, %r10d
  movl $8, %r9d
  movl $9, %r8d
  movl $10, %edi
  movl $11, %esi
  movl $12, %edx
  movl $13, %ecx
  movl $14, %ebx
  movl $15, %eax
.L1:
  addl %r15d, %r14d
  addl %r14d, %r13d
  movl 8(%rsp), %r14d
  addl %r13d, %r14d
  addl %r14d, %r12d
  addl %r12d, %r11d
  addl %r11d, %r10d
  addl %r10d, %r9d
  addl %r9d, %r8d
  addl %r8d, %edi
  addl %edi, %esi
  addl %esi, %edx
  addl %edx, %ecx
  addl %ecx, %ebx
  addl %ebx, %eax
  addq $8, %rsp
  pop %r15
  pop %r14
  pop %r13
  pop %r12
  pop %rbx
  ret
test.use:
  movl %edi, %eax
  ret
88