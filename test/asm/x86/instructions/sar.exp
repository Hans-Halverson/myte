  .global _main

  .text
_main:
  leaq test.sarByteRegs(%rip), %rdi
  call test.use$fn$
  leaq test.sarByteImmReg(%rip), %rdi
  call test.use$fn$
  leaq test.sarByteRegImm(%rip), %rdi
  call test.use$fn$
  leaq test.sarIntRegs(%rip), %rdi
  call test.use$fn$
  leaq test.sarIntRegImm(%rip), %rdi
  call test.use$fn$
  leaq test.sarIntImmReg(%rip), %rdi
  call test.use$fn$
  leaq test.sarLongRegs(%rip), %rdi
  call test.use$fn$
  leaq test.sarLongRegImm(%rip), %rdi
  call test.use$fn$
  leaq test.sarLongImmReg(%rip), %rdi
  call test.use$fn$
  movl $0, %eax
  ret
test.sarByteImmReg:
  movl %edi, %ecx
  movb $6, %al
  sarb %cl, %al
  ret
test.sarByteRegImm:
  sarb $6, %dil
  movl %edi, %eax
  ret
test.sarByteRegs:
  movl %esi, %ecx
  sarb %cl, %dil
  movl %edi, %eax
  ret
test.sarIntImmReg:
  movl %edi, %ecx
  movl $257, %eax
  sarl %cl, %eax
  ret
test.sarIntRegImm:
  sarl $6, %edi
  movl %edi, %eax
  ret
test.sarIntRegs:
  movl %esi, %ecx
  sarl %cl, %edi
  movl %edi, %eax
  ret
test.sarLongImmReg:
  movq $2147483648, %rax
  movl %edi, %ecx
  sarq %cl, %rax
  ret
test.sarLongRegImm:
  sarq $6, %rdi
  movq %rdi, %rax
  ret
test.sarLongRegs:
  movl %esi, %ecx
  sarq %cl, %rdi
  movq %rdi, %rax
  ret
test.use$fn$:
  movq %rdi, %rax
  ret