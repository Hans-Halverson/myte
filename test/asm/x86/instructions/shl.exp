  .global _main

  .text
_main:
  leaq test.shlByteRegs(%rip), %rdi
  call test.use$Function$
  leaq test.shlByteImmReg(%rip), %rdi
  call test.use$Function$
  leaq test.shlByteRegImm(%rip), %rdi
  call test.use$Function$
  leaq test.shlIntRegs(%rip), %rdi
  call test.use$Function$
  leaq test.shlIntRegImm(%rip), %rdi
  call test.use$Function$
  leaq test.shlIntImmReg(%rip), %rdi
  call test.use$Function$
  leaq test.shlIntRegByteImm(%rip), %rdi
  call test.use$Function$
  leaq test.shlIntByteImmReg(%rip), %rdi
  call test.use$Function$
  leaq test.shlLongRegs(%rip), %rdi
  call test.use$Function$
  leaq test.shlLongRegImm(%rip), %rdi
  call test.use$Function$
  leaq test.shlLongImmReg(%rip), %rdi
  call test.use$Function$
  leaq test.shlTruncIntImm(%rip), %rdi
  call test.use$Function$
  leaq test.shlTruncLongImm(%rip), %rdi
  call test.use$Function$
  movl $0, %eax
  ret
test.shlByteImmReg:
  movl %edi, %ecx
  movb $6, %al
  shlb %cl, %al
  ret
test.shlByteRegImm:
  shlb $6, %dil
  movl %edi, %eax
  ret
test.shlByteRegs:
  movl %esi, %ecx
  shlb %cl, %dil
  movl %edi, %eax
  ret
test.shlIntByteImmReg:
  movl %edi, %ecx
  movl $6, %eax
  shll %cl, %eax
  ret
test.shlIntImmReg:
  movl %edi, %ecx
  movl $257, %eax
  shll %cl, %eax
  ret
test.shlIntRegByteImm:
  shll $6, %edi
  movl %edi, %eax
  ret
test.shlIntRegImm:
  shll $6, %edi
  movl %edi, %eax
  ret
test.shlIntRegs:
  movl %esi, %ecx
  shll %cl, %edi
  movl %edi, %eax
  ret
test.shlLongImmReg:
  movq $2147483648, %rax
  movl %edi, %ecx
  shlq %cl, %rax
  ret
test.shlLongRegImm:
  shlq $6, %rdi
  movq %rdi, %rax
  ret
test.shlLongRegs:
  movl %esi, %ecx
  shlq %cl, %rdi
  movq %rdi, %rax
  ret
test.shlTruncIntImm:
  shll $1, %edi
  movl %edi, %eax
  ret
test.shlTruncLongImm:
  shll $2, %edi
  movl %edi, %eax
  ret
test.use$Function$:
  movq %rdi, %rax
  ret