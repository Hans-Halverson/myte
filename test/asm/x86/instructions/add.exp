  .global _main

  .text
test.addByteImm:
  addb $60, %dil
  movl %edi, %eax
  ret
test.addByteImm2:
  addb $60, %dil
  movl %edi, %eax
  ret
test.addByteRegs:
  addb %dil, %sil
  movl %esi, %eax
  ret
test.addIntByteImm:
  addl $60, %edi
  movl %edi, %eax
  ret
test.addIntIntImm:
  addl $257, %edi
  movl %edi, %eax
  ret
test.addIntRegs:
  addl %edi, %esi
  movl %esi, %eax
  ret
test.addLongByteImm:
  addq $60, %rdi
  movq %rdi, %rax
  ret
test.addLongIntImm:
  addq $257, %rdi
  movq %rdi, %rax
  ret
test.addLongLongImm:
  movq $2147483648, %rax
  addq %rdi, %rax
  ret
test.addLongLongImm2:
  movq $2147483648, %rax
  addq %rax, %rdi
  movq %rdi, %rax
  ret
test.addLongRegs:
  addq %rdi, %rsi
  movq %rsi, %rax
  ret
_main:
  leaq test.addByteRegs(%rip), %rdi
  call test.use$Function$
  leaq test.addByteImm(%rip), %rdi
  call test.use$Function$
  leaq test.addIntRegs(%rip), %rdi
  call test.use$Function$
  leaq test.addIntByteImm(%rip), %rdi
  call test.use$Function$
  leaq test.addIntIntImm(%rip), %rdi
  call test.use$Function$
  leaq test.addLongRegs(%rip), %rdi
  call test.use$Function$
  leaq test.addLongByteImm(%rip), %rdi
  call test.use$Function$
  leaq test.addLongIntImm(%rip), %rdi
  call test.use$Function$
  leaq test.addLongLongImm(%rip), %rdi
  call test.use$Function$
  leaq test.addByteImm2(%rip), %rdi
  call test.use$Function$
  leaq test.addLongLongImm2(%rip), %rdi
  call test.use$Function$
  movl $0, %eax
  ret
test.use$Function$:
  movq %rdi, %rax
  ret