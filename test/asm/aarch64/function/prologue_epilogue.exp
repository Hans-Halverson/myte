  .global _main

  .text
test.isLeaf:
  add w0, w0, w1
  ret
_main:
  mov w0, wzr
  ret
test.nonLeaf:
  str x30, [sp, #-16]!
  bl test.use$Int$
  ldr x30, [sp], #16
  ret
test.spilledCalleeSavedEven:
  stp x20, x30, [sp, #-32]!
  str x19, [sp, #16]
  mov w19, w0
  mov w20, w1
  mov w0, w19
  bl test.use$Int$
  add w0, w19, w20
  ldr x19, [sp, #16]
  ldp x20, x30, [sp], #32
  ret
test.spilledCalleeSavedMany:
  stp x26, x30, [sp, #-80]!
  stp x24, x25, [sp, #16]
  stp x22, x23, [sp, #32]
  stp x20, x21, [sp, #48]
  str x19, [sp, #64]
  mov w19, w0
  mov w26, w1
  mov w25, w2
  mov w24, w3
  mov w23, w4
  mov w22, w5
  mov w21, w6
  mov w20, w7
  mov w0, w19
  bl test.use$Int$
  add w0, w19, w26
  add w0, w0, w25
  add w0, w0, w24
  add w0, w0, w23
  add w0, w0, w22
  add w0, w0, w21
  add w0, w0, w20
  ldr x19, [sp, #64]
  ldp x20, x21, [sp, #48]
  ldp x22, x23, [sp, #32]
  ldp x24, x25, [sp, #16]
  ldp x26, x30, [sp], #80
  ret
test.spilledCalleeSavedOdd:
  stp x19, x30, [sp, #-16]!
  mov w19, w0
  mov w0, w19
  bl test.use$Int$
  mov w0, w19
  ldp x19, x30, [sp], #16
  ret
test.use$Int$:
  ret