  .global _main

  .data
.S0:
  .ascii "Failed 1\n"
.S1:
  .ascii "Passed 1\n"
.S2:
  .ascii "Passed 2\n"
.S3:
  .ascii "Failed 2\n"

  .text
test.Trait1.foo:
  cmp w0, #7
  cset w0, eq
  ret
_main:
  str x30, [sp, #-16]!
  movz w0, #5
  bl test.Trait1.foo
  cbz w0, .L0
  movz w0, #16
  bl mytec_alloc
  adrp x2, .S0
  add x2, x2, :lo12:.S0
  add x1, x0, #8
  str x2, [x1]
  movz w1, #9
  str w1, [x0]
  add x1, x0, #4
  movz w2, #9
  str w2, [x1]
  bl std.io.print
  b .L1
.L0:
  movz w0, #16
  bl mytec_alloc
  adrp x2, .S1
  add x2, x2, :lo12:.S1
  add x1, x0, #8
  str x2, [x1]
  movz w1, #9
  str w1, [x0]
  add x1, x0, #4
  movz w2, #9
  str w2, [x1]
  bl std.io.print
.L1:
  movz w0, #7
  bl test.Trait1.foo
  cbz w0, .L2
  movz w0, #16
  bl mytec_alloc
  adrp x2, .S2
  add x2, x2, :lo12:.S2
  add x1, x0, #8
  str x2, [x1]
  movz w1, #9
  str w1, [x0]
  add x1, x0, #4
  movz w2, #9
  str w2, [x1]
  bl std.io.print
  b .L3
.L2:
  movz w0, #16
  bl mytec_alloc
  adrp x2, .S3
  add x2, x2, :lo12:.S3
  add x1, x0, #8
  str x2, [x1]
  movz w1, #9
  str w1, [x0]
  add x1, x0, #4
  movz w2, #9
  str w2, [x1]
  bl std.io.print
.L3:
  mov w0, wzr
  ldr x30, [sp], #16
  ret