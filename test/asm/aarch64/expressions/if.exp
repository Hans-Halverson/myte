  .global _main

  .text
test.bool:
  movz w0, #1
  ret
_main:
  mov w0, wzr
  ret
test.testConditionReused:
  stp x19, x30, [sp, #-16]!
  cmp w0, #10
  cset w19, lt
  b.ge .L0
  movz w0, #1
  bl test.use$Int$
  b .L1
.L0:
  movz w0, #2
  bl test.use$Int$
.L1:
  mov w0, w19
  bl test.use$Bool$
  ldp x19, x30, [sp], #16
  ret
test.testIfWithExpressions:
  stp x20, x30, [sp, #-32]!
  str x19, [sp, #16]
  mov w19, w0
  mov w20, w1
  bl test.bool
  cbz w0, .L2
  add w0, w19, w20
  b .L3
.L2:
  mul w0, w19, w20
  add w0, w0, w19
.L3:
  ldr x19, [sp, #16]
  ldp x20, x30, [sp], #32
  ret
test.testNestedIfStatementInExpressionPosition:
  str x30, [sp, #-16]!
  bl test.bool
  cbz w0, .L5
  bl test.bool
  cbz w0, .L4
  movz w0, #1
  b .L7
.L4:
  movz w0, #2
  b .L7
.L5:
  bl test.bool
  cbz w0, .L6
  movz w0, #3
  b .L7
.L6:
  movz w0, #4
.L7:
  ldr x30, [sp], #16
  ret
test.testSimpleIf:
  str x30, [sp, #-16]!
  bl test.bool
  cbz w0, .L8
  movz w0, #1
  b .L9
.L8:
  movz w0, #2
.L9:
  ldr x30, [sp], #16
  ret
test.use$Bool$:
  ret
test.use$Int$:
  ret