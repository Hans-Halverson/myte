  .global _main

  .text
_main:
  mov w0, wzr
  ret
test.mulByteImmReg:
  movz w1, #60
  mul w0, w0, w1
  ret
test.mulByteRegImm:
  movz w1, #60
  mul w0, w0, w1
  ret
test.mulByteRegs:
  mul w0, w0, w1
  ret
test.mulDoubleImmReg:
  fmov d1, #5.
  fmul d0, d1, d0
  ret
test.mulDoubleRegImm:
  fmov d1, #5.
  fmul d0, d0, d1
  ret
test.mulDoubleRegs:
  fmul d0, d0, d1
  ret
test.mulIntImmReg:
  movz w1, #257
  mul w0, w0, w1
  ret
test.mulIntRegImm:
  movz w1, #257
  mul w0, w0, w1
  ret
test.mulIntRegs:
  mul w0, w0, w1
  ret
test.mulLongImmReg:
  movz x1, #52428
  movk x1, #3276, lsl #16
  mul x0, x0, x1
  ret
test.mulLongRegImm:
  movz x1, #52428
  movk x1, #3276, lsl #16
  mul x0, x0, x1
  ret
test.mulLongRegs:
  mul x0, x0, x1
  ret
test.mulPowerOfTwo1:
  lsl w0, w0, #1
  ret
test.mulPowerOfTwo2:
  lsl w0, w0, #2
  ret
test.mulPowerOfTwo3:
  lsl w0, w0, #3
  ret
test.mulPowerOfTwo4:
  lsl w0, w0, #4
  ret
test.mulPowerOfTwo5:
  lsl w0, w0, #7
  ret
test.mulPowerOfTwo6:
  lsl w0, w0, #12
  ret