module test

type Rec { field1: (Int, Int), field2: Int, field3: Int }

fun testAssignmentPatterns() {
  val x = 1;
  val (x, x) = 1;
  val (x, x, x, x) = 1;
  val (x, y, z, x) = 1;
  val Rec { field1: (x, field2), field2, field3: x } = 1;

  var y = 1;
  (y, y) = 1;
  (y, (y, y)) = 1;

  // Does not error
  (_, _) = 1;
}

// Error on duplicate names bound in match case patterns
fun testMatchCasePatterns() {
  match (1, 1) {
    | (x, x) -> ()
  }

  match (1, (1, (1, 1))) {
    | (1, (x, (1, x))) -> ()
    | (x, (1, (1, 1))) -> ()
  }
}

fun main() {}