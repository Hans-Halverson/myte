module test

import a

// Static methods can be resolved successfully
trait Trait1 {
  static fun foo() {}
}

type Type1 { x: Int }
methods Type1 {
  static fun foo() {}
}

type Type2 = Type2A | Type2B
methods Type2 {
  static fun foo() {}
}

fun test1() {
  Trait1.foo.errors;
  Type1.foo.errors;
  Type2.foo.errors;
}

// Static methods can be resolved when qualified by modules
fun test2() {
  a.b.c.Trait.foo.errors;
  a.b.c.Type1.foo.errors;
  a.b.c.Type2.foo.errors;
}

// Static methods can have same name as in super trait
trait Trait2 {
  static fun foo() {}
}

trait Trait3 {
  extends Trait2
  static fun foo() {}
}

fun test3() {
  Trait2.foo.errors;
  Trait3.foo.errors;
}

// Static methods from stdlib type traits
fun test4() {
  String.new();
}

fun main() {}