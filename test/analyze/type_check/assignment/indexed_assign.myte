module test

import std.map.Map
import std.vec.Vec

type Tup1 (Int, String)

fun testTuples() {
  // Anonymous tuple
  val x = (1, "");

  x[0] = 2;
  x[1] = 2;

  // Named tuple
  val y = Tup1 (1, "");

  y[0] = 2;
  y[1] = 2;
}

fun testVecs(x: Vec<Bool>) {
  // Vecs allow indexed assignment
  x[0] = true;
  x[0] = 1;
}

fun testMaps(x: Map<String, Bool>) {
  // Maps allow indexed assignment
  x["a"] = true;
  x["a"] = 1;
}

type Rec1 { foo: Int }
type Variant1 =
  | Tup2 (Int)
  | Tup3 (Int)

fun testNonIndexableAdts(r: Rec1, v: Variant1) {
  r[0];
  v[0];
}

fun main() {}