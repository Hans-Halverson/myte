module test

type Option<T> =
  | None
  | Some (T)

fun useInt(x: Option<Int>) {}
fun useBool(x: Option<Bool>) {}

fun enumVariants() {
  // Enum constructor can be used locally for different types
  useInt(None);
  useBool(None);

  // Errors
  None is 1;
}

fun returnIntOption(): Option<Int> {
  return None;
}

fun makeOption<T>(x: T): Option<T> = Some (x)

fun test() {
  makeOption(true);
  makeOption(1);
  (makeOption(1): Int);
  (makeOption(true): Int);
}

fun main() {}