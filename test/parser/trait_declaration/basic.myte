module test

methods Foo {}

methods Foo<T, U> {}

methods Foo<T, U,> {}

methods Foo {
  fun test1() {}

  fun test2() = 1

  fun test3() {}
}

methods Foo<T> {
  static fun staticTest1() {}
  
  fun nonStaticTest2() {}

  static fun staticTest3<U>() {}
}

methods Foo {
  builtin fun builtinFun()

  pub builtin fun builtinFun()

  override fun overrideFun() {}

  pub override fun overrideFun() {}

  static fun staticFun() {}

  pub static fun staticFun() {}

  builtin static fun builtinStaticFun()

  pub builtin static fun builtinStaticFun()

  builtin override fun builtinOverrideFun()

  pub builtin override fun builtinOverrideFun()

  builtin override static fun builtinOverrideStaticFun()

  pub builtin override static fun builtinOverrideStaticFun()

  override static fun staticOverrideFun() {}

  pub override static fun staticOverrideFun() {}
}

methods Foo {
  implements ToString
  implements a.b.Trait<T, (V, X),>
}

methods Foo {
  implements ToString

  fun foo() {}
}