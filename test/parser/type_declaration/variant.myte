module test

type t1 = Foo | Bar

type t2 = | Foo | Bar

type t3 =
  | Foo (Int)
  | Bar (Int,)
  | Baz (String, Bool, Unit)

type t4 =
  | Foo { k1: Int }
  | Bar { k2: Int, }
  | Baz { k3: String, k4: Bool, k5: Unit }

type t5 = Foo | Bar (Int) | Baz { k: Bool }

type t6 =
 | Foo ((Int, String))
 | Bar ((Int, String) -> Bool)
 | Baz { k: OtherType }

type t7<T> = None | Some (T)

type t8<T, U, V> = TVariant (T) | UVariant (U) | VVariant (V)

type t9

type t10<T, U, V>