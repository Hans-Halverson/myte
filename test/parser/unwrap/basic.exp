test/parser/unwrap/basic.myte
{
  node: Module,
  loc: 1:0-7:1,
  name: {
    node: ModuleName,
    loc: 1:0-1:11,
    name: {
      node: ScopedIdentifier,
      loc: 1:7-1:11,
      scopes: [],
      name: {
        node: Identifier,
        loc: 1:7-1:11,
        name: "test",
      },
    },
  },
  imports: [],
  toplevels: [
    {
      node: Function,
      loc: 3:0-7:1,
      name: {
        node: Identifier,
        loc: 3:4-3:8,
        name: "test",
      },
      params: [],
      body: {
        node: Block,
        loc: 3:11-7:1,
        statements: [
          {
            node: ExpressionStatement,
            loc: 4:2-4:5,
            expression: {
              node: Unwrap,
              loc: 4:2-4:4,
              operand: {
                node: Identifier,
                loc: 4:2-4:3,
                name: "a",
              },
            },
          },
          {
            node: ExpressionStatement,
            loc: 5:2-5:6,
            expression: {
              node: Unwrap,
              loc: 5:2-5:5,
              operand: {
                node: Unwrap,
                loc: 5:2-5:4,
                operand: {
                  node: Identifier,
                  loc: 5:2-5:3,
                  name: "a",
                },
              },
            },
          },
          {
            node: ExpressionStatement,
            loc: 6:2-6:7,
            expression: {
              node: Unwrap,
              loc: 6:2-6:6,
              operand: {
                node: Unwrap,
                loc: 6:2-6:5,
                operand: {
                  node: Unwrap,
                  loc: 6:2-6:4,
                  operand: {
                    node: Identifier,
                    loc: 6:2-6:3,
                    name: "a",
                  },
                },
              },
            },
          },
        ],
      },
      return: None,
      type_params: [],
      is_public: false,
      is_builtin: false,
      is_static: false,
      is_override: false,
    },
  ],
}