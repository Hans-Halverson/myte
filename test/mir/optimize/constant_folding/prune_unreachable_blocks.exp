func unit @t.func(int %0) {
  Ret
}

func bool @t.rand() {
  Ret true
}

func unit @t.ifStatement() {
  %1 := Call unit @t.func(3)
  %2 := Call unit @t.func(4)
  %3 := Call unit @t.func(5)
  Ret
}

func int @t.nestedIfStatements() {
  Ret 2
}

func unit @t.whileTrue() {
  %4 := Call unit @t.func(1)
  continue @t.whileTrue
}

func unit @t.whileFalse() {
  %5 := Call unit @t.func(3)
  Ret
}

func unit @t.whileTrueWithReturn() {
  %6 := Call unit @t.func(1)
  Ret
}

func unit @t.whileTrueWithBreak() {
  %7 := Call unit @t.func(1)
  %8 := Call unit @t.func(2)
  Ret
}

func unit @t.whileTrueWithContinue() {
  %9 := Call unit @t.func(1)
  continue @t.whileTrueWithContinue
}

func fn @t.use<Function>(fn %10) {
  Ret %10
}

func int @t.main() {
  %11 := Call fn @t.use<Function>(@t.ifStatement)
  %12 := Call fn @t.use<Function>(@t.nestedIfStatements)
  %13 := Call fn @t.use<Function>(@t.whileTrue)
  %14 := Call fn @t.use<Function>(@t.whileFalse)
  %15 := Call fn @t.use<Function>(@t.whileTrueWithReturn)
  %16 := Call fn @t.use<Function>(@t.whileTrueWithBreak)
  %17 := Call fn @t.use<Function>(@t.whileTrueWithContinue)
  Ret 0
}