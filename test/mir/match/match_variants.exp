type test.V1 {byte, byte[11]}

type test.V1::Tuple1 {byte, bool, byte[2], int, byte[4]}

type test.V1::Record1 {byte, byte[3], int, byte, byte[3]}

type test.V2 {byte, byte[23]}

type test.V2::Tuple2 {byte, bool, byte[6], test.V1*, byte[8]}

type test.V2::Record2 {byte, byte[7], test.V2*, bool, byte[7]}

func int @test.test1(test.V1* %0) {
  %1 := Load byte %0
  %2 := Eq byte %1, 0
  branch %2, @0, @1
label @0:
  %3 := Mov int 2
  continue @4
label @1:
  %4 := Eq byte %1, 2
  branch %4, @2, @3
label @2:
  %5 := Mov int 3
  continue @4
label @3:
  %6 := Mov int 1
  continue @4
label @4:
  %7 := Phi int @0:%3, @2:%5, @3:%6
  Ret %7
}

func int @test.test2(test.V1* %8) {
  %9 := Load byte %8
  %10 := Eq byte %9, 2
  branch %10, @5, @9
label @5:
  %11 := GetPointer int, test.V1::Record1* %8.2
  %12 := Load int %11
  %13 := Eq int %12, 2
  branch %13, @6, @7
label @6:
  %14 := Mov int 1
  continue @15
label @7:
  %15 := GetPointer byte, test.V1::Record1* %8.3
  %16 := Load byte %15
  %17 := Eq byte %16, 2
  branch %17, @8, @14
label @8:
  %18 := Mov int 3
  continue @15
label @9:
  %19 := Eq byte %9, 1
  branch %19, @10, @14
label @10:
  %20 := GetPointer int, test.V1::Tuple1* %8.3
  %21 := Load int %20
  %22 := Eq int %21, 4
  branch %22, @11, @12
label @11:
  %23 := Mov int 2
  continue @15
label @12:
  %24 := GetPointer bool, test.V1::Tuple1* %8.1
  %25 := Load bool %24
  %26 := Eq bool %25, true
  branch %26, @13, @14
label @13:
  %27 := Mov int 4
  continue @15
label @14:
  %28 := Mov int 5
  continue @15
label @15:
  %29 := Phi int @6:%14, @8:%18, @14:%28, @11:%23, @13:%27
  Ret %29
}

func int @test.test3(test.V2* %30) {
  %31 := Load byte %30
  %32 := Eq byte %31, 2
  branch %32, @16, @19
label @16:
  %33 := GetPointer test.V2*, test.V2::Record2* %30.2
  %34 := Load test.V2* %33
  %35 := Load byte %34
  %36 := Eq byte %35, 2
  branch %36, @17, @23
label @17:
  %37 := GetPointer test.V2*, test.V2::Record2* %34.2
  %38 := Load test.V2* %37
  %39 := Load byte %38
  %40 := Eq byte %39, 1
  branch %40, @18, @23
label @18:
  %41 := Mov int 2
  continue @24
label @19:
  %42 := Eq byte %31, 0
  branch %42, @20, @23
label @20:
  %43 := GetPointer test.V1*, test.V2::Tuple2* %30.3
  %44 := Load test.V1* %43
  %45 := Load byte %44
  %46 := Eq byte %45, 1
  branch %46, @21, @23
label @21:
  %47 := GetPointer bool, test.V1::Tuple1* %44.1
  %48 := Load bool %47
  %49 := Eq bool %48, true
  branch %49, @22, @23
label @22:
  %50 := Mov int 1
  continue @24
label @23:
  %51 := Mov int 3
  continue @24
label @24:
  %52 := Phi int @23:%51, @18:%41, @22:%50
  Ret %52
}

func int @test.test4(test.V2* %53) {
  %54 := Load byte %53
  %55 := Eq byte %54, 2
  branch %55, @25, @35
label @25:
  %56 := GetPointer test.V2*, test.V2::Record2* %53.2
  %57 := Load test.V2* %56
  %58 := Load byte %57
  %59 := Eq byte %58, 2
  branch %59, @26, @35
label @26:
  %60 := GetPointer test.V2*, test.V2::Record2* %57.2
  %61 := Load test.V2* %60
  %62 := Load byte %61
  %63 := Eq byte %62, 2
  branch %63, @27, @35
label @27:
  %64 := GetPointer test.V2*, test.V2::Record2* %61.2
  %65 := Load test.V2* %64
  %66 := Load byte %65
  %67 := Eq byte %66, 0
  branch %67, @28, @34
label @28:
  %68 := GetPointer test.V1*, test.V2::Tuple2* %65.3
  %69 := Load test.V1* %68
  %70 := Load byte %69
  %71 := Eq byte %70, 1
  branch %71, @29, @34
label @29:
  %72 := GetPointer bool, test.V1::Tuple1* %69.1
  %73 := Load bool %72
  %74 := Eq bool %73, true
  branch %74, @30, @34
label @30:
  %75 := GetPointer int, test.V1::Tuple1* %69.3
  %76 := Load int %75
  %77 := Eq int %76, 1
  branch %77, @33, @31
label @31:
  %78 := Eq int %76, 2
  branch %78, @33, @32
label @32:
  %79 := Eq int %76, 3
  branch %79, @33, @34
label @33:
  %80 := Mov int 1
  continue @36
label @34:
  %81 := Mov int 2
  continue @36
label @35:
  %82 := Mov int 3
  continue @36
label @36:
  %83 := Phi int @35:%82, @34:%81, @33:%80
  Ret %83
}

func int @test.main() {
  Ret 0
}