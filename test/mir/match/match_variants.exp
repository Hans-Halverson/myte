type test.V1 {byte, byte[11]}

type test.V1::Tuple1 {byte, bool, byte[2], int, byte[4]}

type test.V1::Record1 {byte, byte[3], int, byte, byte[3]}

type test.V2 {byte, byte[23]}

type test.V2::Tuple2 {byte, bool, byte[6], test.V1*, byte[8]}

type test.V2::Record2 {byte, byte[7], test.V2*, bool, byte[7]}

func int @test.test1(test.V1* %0) {
  %1 := Load byte %0
  %2 := Eq byte %1, 0
  branch %2, @0, @1
label @0:
  continue @4
label @1:
  %3 := Eq byte %1, 2
  branch %3, @2, @3
label @2:
  continue @4
label @3:
  continue @4
label @4:
  %4 := Phi int @0:2, @2:3, @3:1
  Ret %4
}

func int @test.test2(test.V1* %5) {
  %6 := Load byte %5
  %7 := Eq byte %6, 2
  branch %7, @5, @9
label @5:
  %8 := GetPointer int, test.V1::Record1* %5.2
  %9 := Load int %8
  %10 := Eq int %9, 2
  branch %10, @6, @7
label @6:
  continue @15
label @7:
  %11 := GetPointer byte, test.V1::Record1* %5.3
  %12 := Load byte %11
  %13 := Eq byte %12, 2
  branch %13, @8, @14
label @8:
  continue @15
label @9:
  %14 := Eq byte %6, 1
  branch %14, @10, @14
label @10:
  %15 := GetPointer int, test.V1::Tuple1* %5.3
  %16 := Load int %15
  %17 := Eq int %16, 4
  branch %17, @11, @12
label @11:
  continue @15
label @12:
  %18 := GetPointer bool, test.V1::Tuple1* %5.1
  %19 := Load bool %18
  %20 := Eq bool %19, true
  branch %20, @13, @14
label @13:
  continue @15
label @14:
  continue @15
label @15:
  %21 := Phi int @6:1, @8:3, @14:5, @11:2, @13:4
  Ret %21
}

func int @test.test3(test.V2* %22) {
  %23 := Load byte %22
  %24 := Eq byte %23, 2
  branch %24, @16, @19
label @16:
  %25 := GetPointer test.V2*, test.V2::Record2* %22.2
  %26 := Load test.V2* %25
  %27 := Load byte %26
  %28 := Eq byte %27, 2
  branch %28, @17, @23
label @17:
  %29 := GetPointer test.V2*, test.V2::Record2* %26.2
  %30 := Load test.V2* %29
  %31 := Load byte %30
  %32 := Eq byte %31, 1
  branch %32, @18, @23
label @18:
  continue @24
label @19:
  %33 := Eq byte %23, 0
  branch %33, @20, @23
label @20:
  %34 := GetPointer test.V1*, test.V2::Tuple2* %22.3
  %35 := Load test.V1* %34
  %36 := Load byte %35
  %37 := Eq byte %36, 1
  branch %37, @21, @23
label @21:
  %38 := GetPointer bool, test.V1::Tuple1* %35.1
  %39 := Load bool %38
  %40 := Eq bool %39, true
  branch %40, @22, @23
label @22:
  continue @24
label @23:
  continue @24
label @24:
  %41 := Phi int @23:3, @18:2, @22:1
  Ret %41
}

func int @test.test4(test.V2* %42) {
  %43 := Load byte %42
  %44 := Eq byte %43, 2
  branch %44, @25, @35
label @25:
  %45 := GetPointer test.V2*, test.V2::Record2* %42.2
  %46 := Load test.V2* %45
  %47 := Load byte %46
  %48 := Eq byte %47, 2
  branch %48, @26, @35
label @26:
  %49 := GetPointer test.V2*, test.V2::Record2* %46.2
  %50 := Load test.V2* %49
  %51 := Load byte %50
  %52 := Eq byte %51, 2
  branch %52, @27, @35
label @27:
  %53 := GetPointer test.V2*, test.V2::Record2* %50.2
  %54 := Load test.V2* %53
  %55 := Load byte %54
  %56 := Eq byte %55, 0
  branch %56, @28, @34
label @28:
  %57 := GetPointer test.V1*, test.V2::Tuple2* %54.3
  %58 := Load test.V1* %57
  %59 := Load byte %58
  %60 := Eq byte %59, 1
  branch %60, @29, @34
label @29:
  %61 := GetPointer bool, test.V1::Tuple1* %58.1
  %62 := Load bool %61
  %63 := Eq bool %62, true
  branch %63, @30, @34
label @30:
  %64 := GetPointer int, test.V1::Tuple1* %58.3
  %65 := Load int %64
  %66 := Eq int %65, 1
  branch %66, @33, @31
label @31:
  %67 := Eq int %65, 2
  branch %67, @33, @32
label @32:
  %68 := Eq int %65, 3
  branch %68, @33, @34
label @33:
  continue @36
label @34:
  continue @36
label @35:
  continue @36
label @36:
  %69 := Phi int @35:3, @34:2, @33:1
  Ret %69
}

func int @test.main() {
  Ret 0
}