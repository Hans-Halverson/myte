type test.V1 {byte, byte[7]}

type test.V1::Tuple1 {byte, bool, byte[2], int}

type test.V1::Record1 {byte, byte, byte[2], int}

type test.V2 {byte, byte[7], byte*}

type test.V2::Tuple2 {byte, bool, byte[6], test.V1*}

type test.V2::Record2 {byte, bool, byte[6], test.V2*}

func int @test.test1(test.V1* %0) {
  %1 := Cast test.V1* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @2, @0
label @0:
  %4 := Eq byte %2, 2
  branch %4, @2, @1
label @1:
  continue @2
label @2:
  %5 := Phi int @test.test1:2, @0:3, @1:1
  Ret %5
}

func int @test.test2(test.V1* %0) {
  %1 := Cast test.V1* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 2
  branch %3, @0, @2
label @0:
  %4 := Cast test.V1* %0 to test.V1::Record1*
  %5 := GetPointer int, test.V1::Record1* %4.3
  %6 := Load int %5
  %7 := Eq int %6, 2
  branch %7, @6, @1
label @1:
  %8 := Cast test.V1* %0 to test.V1::Record1*
  %9 := GetPointer byte, test.V1::Record1* %8.1
  %10 := Load byte %9
  %11 := Eq byte %10, 2
  branch %11, @6, @5
label @2:
  %12 := Eq byte %2, 1
  branch %12, @3, @5
label @3:
  %13 := Cast test.V1* %0 to test.V1::Tuple1*
  %14 := GetPointer int, test.V1::Tuple1* %13.3
  %15 := Load int %14
  %16 := Eq int %15, 4
  branch %16, @6, @4
label @4:
  %17 := Cast test.V1* %0 to test.V1::Tuple1*
  %18 := GetPointer bool, test.V1::Tuple1* %17.1
  %19 := Load bool %18
  %20 := Eq bool %19, true
  branch %20, @6, @5
label @5:
  continue @6
label @6:
  %21 := Phi int @0:1, @1:3, @5:5, @3:2, @4:4
  Ret %21
}

func int @test.test3(test.V2* %0) {
  %1 := Cast test.V2* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 2
  branch %3, @0, @2
label @0:
  %4 := Cast test.V2* %0 to test.V2::Record2*
  %5 := GetPointer test.V2*, test.V2::Record2* %4.3
  %6 := Load test.V2* %5
  %7 := Cast test.V2* %6 to byte*
  %8 := Load byte %7
  %9 := Eq byte %8, 2
  branch %9, @1, @5
label @1:
  %10 := Cast test.V2* %6 to test.V2::Record2*
  %11 := GetPointer test.V2*, test.V2::Record2* %10.3
  %12 := Load test.V2* %11
  %13 := Cast test.V2* %12 to byte*
  %14 := Load byte %13
  %15 := Eq byte %14, 1
  branch %15, @6, @5
label @2:
  %16 := Eq byte %2, 0
  branch %16, @3, @5
label @3:
  %17 := Cast test.V2* %0 to test.V2::Tuple2*
  %18 := GetPointer test.V1*, test.V2::Tuple2* %17.3
  %19 := Load test.V1* %18
  %20 := Cast test.V1* %19 to byte*
  %21 := Load byte %20
  %22 := Eq byte %21, 1
  branch %22, @4, @5
label @4:
  %23 := Cast test.V1* %19 to test.V1::Tuple1*
  %24 := GetPointer bool, test.V1::Tuple1* %23.1
  %25 := Load bool %24
  %26 := Eq bool %25, true
  branch %26, @6, @5
label @5:
  continue @6
label @6:
  %27 := Phi int @1:2, @5:3, @4:1
  Ret %27
}

func int @test.test4(test.V2* %0) {
  %1 := Cast test.V2* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 2
  branch %3, @0, @9
label @0:
  %4 := Cast test.V2* %0 to test.V2::Record2*
  %5 := GetPointer test.V2*, test.V2::Record2* %4.3
  %6 := Load test.V2* %5
  %7 := Cast test.V2* %6 to byte*
  %8 := Load byte %7
  %9 := Eq byte %8, 2
  branch %9, @1, @9
label @1:
  %10 := Cast test.V2* %6 to test.V2::Record2*
  %11 := GetPointer test.V2*, test.V2::Record2* %10.3
  %12 := Load test.V2* %11
  %13 := Cast test.V2* %12 to byte*
  %14 := Load byte %13
  %15 := Eq byte %14, 2
  branch %15, @2, @9
label @2:
  %16 := Cast test.V2* %12 to test.V2::Record2*
  %17 := GetPointer test.V2*, test.V2::Record2* %16.3
  %18 := Load test.V2* %17
  %19 := Cast test.V2* %18 to byte*
  %20 := Load byte %19
  %21 := Eq byte %20, 0
  branch %21, @3, @8
label @3:
  %22 := Cast test.V2* %18 to test.V2::Tuple2*
  %23 := GetPointer test.V1*, test.V2::Tuple2* %22.3
  %24 := Load test.V1* %23
  %25 := Cast test.V1* %24 to byte*
  %26 := Load byte %25
  %27 := Eq byte %26, 1
  branch %27, @4, @8
label @4:
  %28 := Cast test.V1* %24 to test.V1::Tuple1*
  %29 := GetPointer bool, test.V1::Tuple1* %28.1
  %30 := Load bool %29
  %31 := Eq bool %30, true
  branch %31, @5, @8
label @5:
  %32 := Cast test.V1* %24 to test.V1::Tuple1*
  %33 := GetPointer int, test.V1::Tuple1* %32.3
  %34 := Load int %33
  %35 := Eq int %34, 1
  branch %35, @9, @6
label @6:
  %36 := Eq int %34, 2
  branch %36, @9, @7
label @7:
  %37 := Eq int %34, 3
  branch %37, @9, @8
label @8:
  continue @9
label @9:
  %38 := Phi int @test.test4:3, @0:3, @1:3, @5:1, @6:1, @7:1, @8:2
  Ret %38
}

func int @test.test5(test.V1* %0) {
  %1 := Cast test.V1* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @7, @0
label @0:
  %4 := Eq byte %2, 2
  branch %4, @1, @4
label @1:
  %5 := Cast test.V1* %0 to test.V1::Record1*
  %6 := GetPointer int, test.V1::Record1* %5.3
  %7 := Load int %6
  %8 := Cast test.V1* %0 to test.V1::Record1*
  %9 := GetPointer byte, test.V1::Record1* %8.1
  %10 := Load byte %9
  %11 := Eq byte %10, 1
  branch %11, @3, @2
label @2:
  %12 := SExt byte %10 to int
  continue @3
label @3:
  %13 := Phi int @1:%7, @2:%12
  continue @7
label @4:
  %14 := Cast test.V1* %0 to test.V1::Tuple1*
  %15 := GetPointer bool, test.V1::Tuple1* %14.1
  %16 := Load bool %15
  %17 := Cast test.V1* %0 to test.V1::Tuple1*
  %18 := GetPointer int, test.V1::Tuple1* %17.3
  %19 := Load int %18
  branch %16, @6, @5
label @5:
  continue @6
label @6:
  %20 := Phi int @4:%19, @5:2
  continue @7
label @7:
  %21 := Phi int @test.test5:3, @3:%13, @6:%20
  Ret %21
}

func test.V2* @test.test6(test.V2* %0) {
  %1 := Cast test.V2* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 2
  branch %3, @0, @6
label @0:
  %4 := Cast test.V2* %0 to test.V2::Record2*
  %5 := GetPointer test.V2*, test.V2::Record2* %4.3
  %6 := Load test.V2* %5
  %7 := Cast test.V2* %6 to byte*
  %8 := Load byte %7
  %9 := Eq byte %8, 2
  branch %9, @1, @6
label @1:
  %10 := Cast test.V2* %6 to test.V2::Record2*
  %11 := GetPointer test.V2*, test.V2::Record2* %10.3
  %12 := Load test.V2* %11
  %13 := Cast test.V2* %12 to byte*
  %14 := Load byte %13
  %15 := Eq byte %14, 1
  branch %15, @6, @2
label @2:
  %16 := Eq byte %14, 2
  branch %16, @3, @6
label @3:
  %17 := Cast test.V2* %12 to test.V2::Record2*
  %18 := GetPointer test.V2*, test.V2::Record2* %17.3
  %19 := Load test.V2* %18
  %20 := Cast test.V2* %19 to byte*
  %21 := Load byte %20
  %22 := Eq byte %21, 2
  branch %22, @4, @6
label @4:
  %23 := Cast test.V2* %19 to test.V2::Record2*
  %24 := GetPointer bool, test.V2::Record2* %23.1
  %25 := Load bool %24
  %26 := Eq bool %25, false
  branch %26, @6, @5
label @5:
  %27 := Cast test.V2* %19 to test.V2::Record2*
  %28 := GetPointer test.V2*, test.V2::Record2* %27.3
  %29 := Load test.V2* %28
  continue @6
label @6:
  %30 := Phi test.V2* @test.test6:%0, @0:%0, @1:%12, @2:%0, @3:%0, @4:%6, @5:%29
  Ret %30
}

func int @test.test7(byte %0) {
  %1 := Eq byte %0, 0
  branch %1, @2, @0
label @0:
  %2 := Eq byte %0, 1
  branch %2, @2, @1
label @1:
  continue @2
label @2:
  %3 := Phi int @test.test7:5, @0:6, @1:7
  Ret %3
}

func int @test.main() {
  Ret 0
}