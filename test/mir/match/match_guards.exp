type test.V1 {byte, byte[11]}

type test.V1::Tuple1 {byte, byte[3], int, int}

type test.V1::Record1 {byte, byte[3], int, int}

func int @test.test1(bool %0, int %1) {
  %2 := Eq int %1, 0
  branch %2, @8, @0
label @0:
  %3 := Eq int %1, 1
  branch %3, @1, @3
label @1:
  branch %0, @8, @2
label @2:
  continue @8
label @3:
  %4 := Eq int %1, 2
  branch %4, @4, @8
label @4:
  branch %0, @8, @5
label @5:
  %5 := Not bool %0
  branch %5, @8, @6
label @6:
  %6 := Not bool %0
  %7 := Not bool %6
  branch %7, @8, @7
label @7:
  continue @8
label @8:
  %8 := Phi int @test.test1:0, @1:1, @3:7, @2:2, @4:3, @5:4, @6:5, @7:6
  Ret %8
}

func int @test.test2(bool %0, int %1) {
  %2 := Eq int %1, 1
  branch %2, @0, @2
label @0:
  branch %0, @7, @1
label @1:
  continue @7
label @2:
  %3 := Eq int %1, 3
  branch %3, @3, @6
label @3:
  %4 := Eq int %1, 2
  branch %4, @4, @6
label @4:
  branch %0, @7, @5
label @5:
  %5 := Not bool %0
  branch %5, @7, @6
label @6:
  continue @7
label @7:
  %6 := Phi int @0:1, @1:2, @4:3, @5:4, @6:5
  Ret %6
}

func int @test.test3(test.V1* %0) {
  %1 := Cast test.V1* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @6
label @0:
  %4 := Cast test.V1* %0 to test.V1::Tuple1*
  %5 := GetPointer int, test.V1::Tuple1* %4.2
  %6 := Load int %5
  %7 := Eq int %6, 2
  branch %7, @1, @4
label @1:
  %8 := Cast test.V1* %0 to test.V1::Tuple1*
  %9 := GetPointer int, test.V1::Tuple1* %8.3
  %10 := Load int %9
  %11 := Eq int %10, 4
  branch %11, @7, @2
label @2:
  %12 := Cast test.V1* %0 to test.V1::Tuple1*
  %13 := GetPointer int, test.V1::Tuple1* %12.3
  %14 := Load int %13
  %15 := Eq int %14, 3
  branch %15, @3, @6
label @3:
  %16 := Eq int %6, 4
  branch %16, @7, @6
label @4:
  %17 := Cast test.V1* %0 to test.V1::Tuple1*
  %18 := GetPointer int, test.V1::Tuple1* %17.3
  %19 := Load int %18
  %20 := Eq int %19, 3
  branch %20, @5, @6
label @5:
  %21 := Eq int %6, 4
  branch %21, @7, @6
label @6:
  continue @7
label @7:
  %22 := Phi int @1:1, @3:1, @6:2, @5:1
  Ret %22
}

func int @test.main() {
  Ret 0
}