func int @test.test1(long %0, int %1) {
  %2 := Eq int %1, 0
  branch %2, @8, @0
label @0:
  %3 := Eq int %1, 1
  branch %3, @1, @3
label @1:
  %4 := Eq long %0, 3
  branch %4, @8, @2
label @2:
  continue @8
label @3:
  %5 := Eq int %1, 2
  branch %5, @4, @8
label @4:
  %6 := Eq long %0, 3
  branch %6, @8, @5
label @5:
  %7 := BitXor long, %0 2
  %8 := Eq long %7, 3
  branch %8, @8, @6
label @6:
  %9 := BitXor long, %0 2
  %10 := BitXor long, %9 2
  %11 := Eq long %10, 3
  branch %11, @8, @7
label @7:
  continue @8
label @8:
  %12 := Phi int @test.test1:0, @1:1, @3:7, @2:2, @4:3, @5:4, @6:5, @7:6
  Ret %12
}

func int @test.test2(long %0, int %1) {
  %2 := Eq int %1, 1
  branch %2, @0, @2
label @0:
  %3 := Eq long %0, 3
  branch %3, @7, @1
label @1:
  continue @7
label @2:
  %4 := Eq int %1, 3
  branch %4, @3, @6
label @3:
  %5 := Eq int %1, 2
  branch %5, @4, @6
label @4:
  %6 := Eq long %0, 3
  branch %6, @7, @5
label @5:
  %7 := BitXor long, %0 2
  %8 := Eq long %7, 3
  branch %8, @7, @6
label @6:
  continue @7
label @7:
  %9 := Phi int @0:1, @1:2, @4:3, @5:4, @6:5
  Ret %9
}

func void @test.use<Function>(fn %0) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.test1)
  Call void @test.use<Function>(@test.test2)
  Ret 0
}