type $tuple<Int,Bool,(Int,Bool)> {int, long, $tuple<Int,Bool>*}

type $tuple<Int,Bool,String> {int, long, std.string.String*}

type $tuple<Int,Bool> {int, long}

func int @test.test1($tuple<Int,Bool,String>* %0) {
  Ret 1
}

func int @test.test2($tuple<Int,Bool,String>* %0) {
  %1 := GetPointer int, $tuple<Int,Bool,String>* %0.0
  %2 := Load int %1
  %3 := Eq int %2, 1
  branch %3, @0, @2
label @0:
  %4 := GetPointer long, $tuple<Int,Bool,String>* %0.1
  %5 := Load long %4
  %6 := Eq long %5, 1
  branch %6, @5, @1
label @1:
  continue @5
label @2:
  %7 := Eq int %2, 2
  branch %7, @5, @3
label @3:
  %8 := GetPointer long, $tuple<Int,Bool,String>* %0.1
  %9 := Load long %8
  %10 := Eq long %9, 1
  branch %10, @5, @4
label @4:
  continue @5
label @5:
  %11 := Phi int @0:6, @2:2, @1:1, @3:6, @4:3
  Ret %11
}

func int @test.test3($tuple<Int,Bool,(Int,Bool)>* %0) {
  %1 := GetPointer int, $tuple<Int,Bool,(Int,Bool)>* %0.0
  %2 := Load int %1
  %3 := Eq int %2, 1
  branch %3, @4, @0
label @0:
  %4 := GetPointer long, $tuple<Int,Bool,(Int,Bool)>* %0.1
  %5 := Load long %4
  %6 := Eq long %5, 3
  branch %6, @4, @1
label @1:
  %7 := GetPointer $tuple<Int,Bool>*, $tuple<Int,Bool,(Int,Bool)>* %0.2
  %8 := Load $tuple<Int,Bool>* %7
  %9 := GetPointer int, $tuple<Int,Bool>* %8.0
  %10 := Load int %9
  %11 := Eq int %10, 2
  branch %11, @4, @2
label @2:
  %12 := GetPointer long, $tuple<Int,Bool>* %8.1
  %13 := Load long %12
  %14 := Eq long %13, 1
  branch %14, @4, @3
label @3:
  continue @4
label @4:
  %15 := Phi int @test.test3:1, @0:2, @1:3, @2:4, @3:5
  Ret %15
}

func int @test.test4($tuple<Int,Bool,(Int,Bool)>* %0) {
  %1 := GetPointer int, $tuple<Int,Bool,(Int,Bool)>* %0.0
  %2 := Load int %1
  %3 := Eq int %2, 1
  branch %3, @0, @3
label @0:
  %4 := GetPointer long, $tuple<Int,Bool,(Int,Bool)>* %0.1
  %5 := Load long %4
  %6 := Eq long %5, 3
  branch %6, @2, @1
label @1:
  continue @2
label @2:
  %7 := Phi int @0:1, @1:2
  continue @10
label @3:
  %8 := GetPointer long, $tuple<Int,Bool,(Int,Bool)>* %0.1
  %9 := Load long %8
  %10 := Eq long %9, 3
  branch %10, @4, @7
label @4:
  %11 := GetPointer $tuple<Int,Bool>*, $tuple<Int,Bool,(Int,Bool)>* %0.2
  %12 := Load $tuple<Int,Bool>* %11
  %13 := GetPointer long, $tuple<Int,Bool>* %12.1
  %14 := Load long %13
  %15 := Eq long %14, 1
  branch %15, @5, @6
label @5:
  %16 := GetPointer int, $tuple<Int,Bool>* %12.0
  %17 := Load int %16
  %18 := Add int %17, 3
  continue @10
label @6:
  %19 := GetPointer int, $tuple<Int,Bool>* %12.0
  %20 := Load int %19
  %21 := Add int %2, %20
  %22 := Add int %21, 4
  continue @10
label @7:
  %23 := GetPointer $tuple<Int,Bool>*, $tuple<Int,Bool,(Int,Bool)>* %0.2
  %24 := Load $tuple<Int,Bool>* %23
  %25 := GetPointer int, $tuple<Int,Bool>* %24.0
  %26 := Load int %25
  %27 := GetPointer long, $tuple<Int,Bool>* %24.1
  %28 := Load long %27
  %29 := Eq long %28, 3
  branch %29, @9, @8
label @8:
  %30 := Add int %26, 5
  continue @9
label @9:
  %31 := Phi int @7:%26, @8:%30
  continue @10
label @10:
  %32 := Phi int @2:%7, @5:%18, @6:%22, @9:%31
  Ret %32
}

func $tuple<Int,Bool>* @test.test5($tuple<Int,Bool,(Int,Bool)>* %0) {
  %1 := GetPointer long, $tuple<Int,Bool,(Int,Bool)>* %0.1
  %2 := Load long %1
  %3 := Eq long %2, 1
  branch %3, @0, @2
label @0:
  %4 := GetPointer $tuple<Int,Bool>*, $tuple<Int,Bool,(Int,Bool)>* %0.2
  %5 := Load $tuple<Int,Bool>* %4
  %6 := GetPointer int, $tuple<Int,Bool>* %5.0
  %7 := Load int %6
  %8 := Eq int %7, 1
  branch %8, @5, @1
label @1:
  %9 := CallBuiltin $tuple<Int,Bool>* myte_alloc(1)
  %10 := GetPointer int, $tuple<Int,Bool>* %5.0
  %11 := Load int %10
  %12 := GetPointer int, $tuple<Int,Bool>* %9.0
  Store int %12, %11
  %13 := GetPointer long, $tuple<Int,Bool>* %5.1
  %14 := Load long %13
  %15 := GetPointer long, $tuple<Int,Bool>* %9.1
  Store long %15, %14
  continue @5
label @2:
  %16 := GetPointer int, $tuple<Int,Bool,(Int,Bool)>* %0.0
  %17 := Load int %16
  %18 := Eq int %17, 1
  branch %18, @3, @4
label @3:
  %19 := GetPointer $tuple<Int,Bool>*, $tuple<Int,Bool,(Int,Bool)>* %0.2
  %20 := Load $tuple<Int,Bool>* %19
  continue @5
label @4:
  %21 := GetPointer $tuple<Int,Bool>*, $tuple<Int,Bool,(Int,Bool)>* %0.2
  %22 := Load $tuple<Int,Bool>* %21
  continue @5
label @5:
  %23 := Phi $tuple<Int,Bool>* @0:%5, @1:%9, @3:%20, @4:%22
  Ret %23
}

func void @test.use<Function>(fn %0) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.test1)
  Call void @test.use<Function>(@test.test2)
  Call void @test.use<Function>(@test.test3)
  Call void @test.use<Function>(@test.test4)
  Call void @test.use<Function>(@test.test5)
  Ret 0
}