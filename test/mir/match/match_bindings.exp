type $tuple<Int,(Int,Bool)> {int, $tuple<Int,Bool>*}

type $tuple<Int,Bool,(Int,(Int,Bool))> {int, bool, $tuple<Int,(Int,Bool)>*}

type $tuple<Int,Bool> {int, bool}

func int @test.test1(int %0) {
  Ret %0
}

func int @test.test2(int %1, bool %2) {
  %3 := Eq bool %2, true
  branch %3, @3, @0
label @0:
  branch %2, @2, @1
label @1:
  continue @2
label @2:
  %4 := Phi int @0:1, @1:2
  continue @3
label @3:
  %5 := Phi int @test.test2:%1, @2:%4
  Ret %5
}

func int @test.test3(int %6) {
  %7 := Eq int %6, 1
  branch %7, @6, @4
label @4:
  %8 := Eq int %6, 2
  branch %8, @6, @5
label @5:
  %9 := Add int %6, %6
  %10 := Add int %9, %6
  continue @6
label @6:
  %11 := Phi int @test.test3:1, @4:%6, @5:%10
  Ret %11
}

func int @test.test4(int %12, int %13, int %14) {
  %15 := Eq int %12, 1
  branch %15, @7, @10
label @7:
  %16 := Lt int %13, 4
  branch %16, @13, @8
label @8:
  %17 := Eq int %13, 1
  branch %17, @9, @12
label @9:
  %18 := Add int %12, %14
  %19 := Lt int %18, 5
  branch %19, @13, @12
label @10:
  %20 := Eq int %13, 1
  branch %20, @11, @12
label @11:
  %21 := Add int %12, %14
  %22 := Lt int %21, 5
  branch %22, @13, @12
label @12:
  continue @13
label @13:
  %23 := Phi int @7:1, @9:2, @12:3, @11:2
  Ret %23
}

func int @test.test5(int %24, int %25) {
  %26 := Eq int %25, 1
  branch %26, @15, @14
label @14:
  %27 := Eq int %24, 1
  branch %27, @15, @16
label @15:
  %28 := Phi int @test.test5:%24, @14:%25
  %29 := Add int %28, 2
  continue @16
label @16:
  %30 := Phi int @14:3, @15:%29
  Ret %30
}

func int @test.test6(int %31, int %32) {
  %33 := Eq int %31, 1
  branch %33, @19, @17
label @17:
  %34 := Eq int %32, 1
  branch %34, @19, @18
label @18:
  continue @19
label @19:
  %35 := Phi int @test.test6:1, @17:1, @18:2
  Ret %35
}

func int @test.test7($tuple<Int,Bool,(Int,(Int,Bool))>* %36) {
  %37 := GetPointer int, $tuple<Int,Bool,(Int,(Int,Bool))>* %36.0
  %38 := Load int %37
  %39 := Eq int %38, 1
  branch %39, @20, @21
label @20:
  %40 := GetPointer $tuple<Int,(Int,Bool)>*, $tuple<Int,Bool,(Int,(Int,Bool))>* %36.2
  %41 := Load $tuple<Int,(Int,Bool)>* %40
  %42 := GetPointer int, $tuple<Int,(Int,Bool)>* %41.0
  %43 := Load int %42
  continue @24
label @21:
  %44 := Eq int %38, 2
  branch %44, @22, @23
label @22:
  %45 := GetPointer $tuple<Int,(Int,Bool)>*, $tuple<Int,Bool,(Int,(Int,Bool))>* %36.2
  %46 := Load $tuple<Int,(Int,Bool)>* %45
  %47 := GetPointer int, $tuple<Int,(Int,Bool)>* %46.0
  %48 := Load int %47
  %49 := Add int %48, %48
  %50 := Add int %49, %48
  continue @24
label @23:
  %51 := GetPointer $tuple<Int,(Int,Bool)>*, $tuple<Int,Bool,(Int,(Int,Bool))>* %36.2
  %52 := Load $tuple<Int,(Int,Bool)>* %51
  %53 := GetPointer int, $tuple<Int,(Int,Bool)>* %52.0
  %54 := Load int %53
  %55 := GetPointer $tuple<Int,Bool>*, $tuple<Int,(Int,Bool)>* %52.1
  %56 := Load $tuple<Int,Bool>* %55
  %57 := GetPointer int, $tuple<Int,Bool>* %56.0
  %58 := Load int %57
  %59 := Add int %54, %58
  continue @24
label @24:
  %60 := Phi int @20:%43, @22:%50, @23:%59
  Ret %60
}

func int @test.test8(int %61) {
  %62 := Eq int %61, 1
  branch %62, @26, @25
label @25:
  %63 := Eq int %61, 2
  branch %63, @26, @27
label @26:
  continue @31
label @27:
  %64 := Eq int %61, 4
  branch %64, @30, @28
label @28:
  %65 := Eq int %61, 5
  branch %65, @30, @29
label @29:
  %66 := Eq int %61, 6
  branch %66, @30, @31
label @30:
  %67 := Add int %61, %61
  continue @31
label @31:
  %68 := Phi int @26:%61, @30:%67, @29:3
  Ret %68
}

func int @test.test9($tuple<Int,(Int,Bool)>* %69) {
  %70 := GetPointer $tuple<Int,Bool>*, $tuple<Int,(Int,Bool)>* %69.1
  %71 := Load $tuple<Int,Bool>* %70
  %72 := GetPointer int, $tuple<Int,Bool>* %71.0
  %73 := Load int %72
  %74 := Eq int %73, 1
  branch %74, @33, @32
label @32:
  %75 := Eq int %73, 2
  branch %75, @33, @34
label @33:
  continue @37
label @34:
  %76 := Eq int %73, 3
  branch %76, @36, @35
label @35:
  %77 := Eq int %73, 4
  branch %77, @36, @37
label @36:
  %78 := Add int %73, %73
  continue @37
label @37:
  %79 := Phi int @33:%73, @35:7, @36:%78
  Ret %79
}

func int @test.test10($tuple<Int,(Int,Bool)>* %80) {
  %81 := GetPointer $tuple<Int,Bool>*, $tuple<Int,(Int,Bool)>* %80.1
  %82 := Load $tuple<Int,Bool>* %81
  %83 := GetPointer int, $tuple<Int,Bool>* %82.0
  %84 := Load int %83
  %85 := Eq int %84, 1
  branch %85, @39, @38
label @38:
  %86 := Eq int %84, 2
  branch %86, @39, @40
label @39:
  continue @40
label @40:
  %87 := Phi int @38:7, @39:%84
  Ret %87
}

func int @test.test11(int %88) {
  %89 := Eq int %88, 1
  branch %89, @42, @41
label @41:
  %90 := Eq int %88, 2
  branch %90, @42, @43
label @42:
  continue @43
label @43:
  %91 := Phi int @41:7, @42:%88
  Ret %91
}

func void @test.use<Function>(fn %92) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.test1)
  Call void @test.use<Function>(@test.test2)
  Call void @test.use<Function>(@test.test3)
  Call void @test.use<Function>(@test.test4)
  Call void @test.use<Function>(@test.test5)
  Call void @test.use<Function>(@test.test6)
  Call void @test.use<Function>(@test.test7)
  Call void @test.use<Function>(@test.test8)
  Call void @test.use<Function>(@test.test9)
  Call void @test.use<Function>(@test.test10)
  Call void @test.use<Function>(@test.test11)
  Ret 0
}