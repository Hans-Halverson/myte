global byte[3] @.IS0 = "foo"

global int @.IS0Size = 3

global byte[3] @.IS1 = "bar"

global int @.IS1Size = 3

func std.string.String* @test.testSingleStringPart() {
  %0 := Call std.string.String* myte.builtin.alloc(1)
  %1 := Cast byte[3]* @.S2 to byte*
  %2 := GetPointer byte*, std.string.String* %0.2
  Store byte* %2, %1
  %3 := GetPointer int, std.string.String* %0.0
  Store int %3, 3
  %4 := GetPointer int, std.string.String* %0.1
  Store int %4, 3
  Ret %0
}

global byte[3] @.S2 = "foo"

func std.string.String* @test.testSingleExpressionPart() {
  %0 := Call std.string.String* myte.builtin.alloc(1)
  %1 := GetPointer byte*, std.string.String* %0.2
  Store byte* %1, null
  %2 := GetPointer int, std.string.String* %0.0
  Store int %2, 0
  %3 := GetPointer int, std.string.String* %0.1
  Store int %3, 0
  %4 := Call std.string.String* @std.int.Int.toString(1)
  Call void @std.string.String.append(%0, %4)
  Ret %0
}

func std.string.String* @test.testMultipleParts1() {
  %0 := Call std.string.String* myte.builtin.alloc(1)
  %1 := GetPointer byte*, std.string.String* %0.2
  Store byte* %1, null
  %2 := GetPointer int, std.string.String* %0.0
  Store int %2, 0
  %3 := GetPointer int, std.string.String* %0.1
  Store int %3, 0
  %4 := Call std.string.String* @std.int.Int.toString(1)
  Call void @std.string.String.append(%0, %4)
  %5 := Load int @.IS0Size
  Call void @std.string.String.appendImmutable(%0, @.IS0, %5)
  %6 := Call std.string.String* @std.int.Int.toString(2)
  Call void @std.string.String.append(%0, %6)
  Ret %0
}

func std.string.String* @test.testMultipleParts2() {
  %0 := Call std.string.String* myte.builtin.alloc(1)
  %1 := Cast byte[3]* @.S0 to byte*
  %2 := GetPointer byte*, std.string.String* %0.2
  Store byte* %2, %1
  %3 := GetPointer int, std.string.String* %0.0
  Store int %3, 3
  %4 := GetPointer int, std.string.String* %0.1
  Store int %4, 3
  %5 := Call std.string.String* @std.int.Int.toString(1)
  Call void @std.string.String.append(%0, %5)
  %6 := Call std.string.String* @std.int.Int.toString(2)
  Call void @std.string.String.append(%0, %6)
  %7 := Load int @.IS1Size
  Call void @std.string.String.appendImmutable(%0, @.IS1, %7)
  Ret %0
}

global byte[3] @.S0 = "foo"

func std.string.String* @test.testRepeatedParts() {
  %0 := Call std.string.String* myte.builtin.alloc(1)
  %1 := Cast byte[3]* @.S1 to byte*
  %2 := GetPointer byte*, std.string.String* %0.2
  Store byte* %2, %1
  %3 := GetPointer int, std.string.String* %0.0
  Store int %3, 3
  %4 := GetPointer int, std.string.String* %0.1
  Store int %4, 3
  %5 := Call std.string.String* @std.int.Int.toString(1)
  Call void @std.string.String.append(%0, %5)
  %6 := Load int @.IS1Size
  Call void @std.string.String.appendImmutable(%0, @.IS1, %6)
  %7 := Call std.string.String* @std.int.Int.toString(2)
  Call void @std.string.String.append(%0, %7)
  %8 := Load int @.IS0Size
  Call void @std.string.String.appendImmutable(%0, @.IS0, %8)
  %9 := Call std.string.String* @std.int.Int.toString(3)
  Call void @std.string.String.append(%0, %9)
  %10 := Load int @.IS1Size
  Call void @std.string.String.appendImmutable(%0, @.IS1, %10)
  Ret %0
}

global byte[3] @.S1 = "foo"

func int @test.main() {
  Ret 0
}