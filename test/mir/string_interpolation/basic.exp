func std.string.String* @test.testSingleStringPart() {
  %0 := CallBuiltin std.string.String* myte_alloc(1)
  %1 := GetPointer byte*, std.string.String* %0.0
  Store byte* %1, @.S4
  %2 := GetPointer int, std.string.String* %0.1
  Store int %2, 3
  %3 := GetPointer int, std.string.String* %0.2
  Store int %3, 3
  Ret %0
}

global byte[3] @.S4 = "foo"

func std.string.String* @test.testSingleExpressionPart() {
  %4 := Call std.string.String* @std.int.Int.toString(1)
  Ret %4
}

func std.string.String* @test.testMultipleParts1() {
  %5 := Call std.string.String* @std.int.Int.toString(1)
  %6 := CallBuiltin std.string.String* myte_alloc(1)
  %7 := GetPointer byte*, std.string.String* %6.0
  Store byte* %7, @.S1
  %8 := GetPointer int, std.string.String* %6.1
  Store int %8, 3
  %9 := GetPointer int, std.string.String* %6.2
  Store int %9, 3
  %10 := Call unit @std.string.String.append(%5, %6)
  %11 := Call std.string.String* @std.int.Int.toString(2)
  %12 := Call unit @std.string.String.append(%5, %11)
  Ret %5
}

global byte[3] @.S1 = "foo"

func std.string.String* @test.testMultipleParts2() {
  %13 := CallBuiltin std.string.String* myte_alloc(1)
  %14 := GetPointer byte*, std.string.String* %13.0
  Store byte* %14, @.S2
  %15 := GetPointer int, std.string.String* %13.1
  Store int %15, 3
  %16 := GetPointer int, std.string.String* %13.2
  Store int %16, 3
  %17 := Call std.string.String* @std.int.Int.toString(1)
  %18 := Call unit @std.string.String.append(%13, %17)
  %19 := Call std.string.String* @std.int.Int.toString(2)
  %20 := Call unit @std.string.String.append(%13, %19)
  %21 := CallBuiltin std.string.String* myte_alloc(1)
  %22 := GetPointer byte*, std.string.String* %21.0
  Store byte* %22, @.S3
  %23 := GetPointer int, std.string.String* %21.1
  Store int %23, 3
  %24 := GetPointer int, std.string.String* %21.2
  Store int %24, 3
  %25 := Call unit @std.string.String.append(%13, %21)
  Ret %13
}

global byte[3] @.S2 = "foo"

global byte[3] @.S3 = "bar"

func unit @test.use<fn>(fn %26) {
  Ret
}

func int @test.main() {
  %27 := Call unit @test.use<fn>(@test.testSingleStringPart)
  %28 := Call unit @test.use<fn>(@test.testSingleExpressionPart)
  %29 := Call unit @test.use<fn>(@test.testMultipleParts1)
  %30 := Call unit @test.use<fn>(@test.testMultipleParts2)
  Ret 0
}