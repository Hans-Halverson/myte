type _ZeroSize {}

func void @test.use<Bool>(long %0) {
  Ret
}

func void @test.use<Byte>(byte %0) {
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func void @test.use<Int>(int %0) {
  Ret
}

func void @test.use<Unit>() {
  Ret
}

func void @test.testIterators(std.vec.Vec<Int>* %0, std.vec.Vec<Bool>* %1) {
  %2 := Call std.vec.VecIterator<Int>* @std.vec.Vec.toIterator<Int>(%0)
  continue @0
label @0:
  %3 := Call std.option.Option<Int>* @std.vec.VecIterator.next<Int>(%2)
  %4 := Load byte %3
  %5 := Eq byte %4, 1
  branch %5, @1, @2
label @1:
  %6 := GetPointer int, std.option.Option<Int>::Some* %3.2
  %7 := Load int %6
  Call void @test.use<Int>(%7)
  continue @0
label @2:
  %8 := Call std.vec.VecIterator<Bool>* @std.vec.Vec.toIterator<Bool>(%1)
  continue @3
label @3:
  %10 := Phi long @2:1, @4:%9
  %11 := Call std.option.Option<Bool>* @std.vec.VecIterator.next<Bool>(%8)
  %12 := Load byte %11
  %13 := Eq byte %12, 1
  branch %13, @4, @5
label @4:
  %14 := GetPointer long, std.option.Option<Bool>::Some* %11.2
  %9 := Load long %14
  Call void @test.use<Bool>(%9)
  continue @3
label @5:
  Call void @test.use<Bool>(%10)
  Ret
}

func void @test.testBreak(std.vec.Vec<Bool>* %0) {
  %1 := Call std.vec.VecIterator<Bool>* @std.vec.Vec.toIterator<Bool>(%0)
  continue @0
label @0:
  %2 := Phi int @test.testBreak:0, @2:2
  %3 := Call std.option.Option<Bool>* @std.vec.VecIterator.next<Bool>(%1)
  %4 := Load byte %3
  %5 := Eq byte %4, 1
  branch %5, @1, @4
label @1:
  %6 := GetPointer long, std.option.Option<Bool>::Some* %3.2
  %7 := Load long %6
  %8 := BitXor long, %7 2
  %9 := Eq long %8, 3
  branch %9, @3, @2
label @2:
  Call void @test.use<Int>(2)
  continue @0
label @3:
  Call void @test.use<Int>(1)
  continue @4
label @4:
  %10 := Phi int @0:%2, @3:1
  Call void @test.use<Int>(%10)
  Ret
}

func void @test.testContinue(std.vec.Vec<Bool>* %0) {
  %1 := Call std.vec.VecIterator<Bool>* @std.vec.Vec.toIterator<Bool>(%0)
  continue @0
label @0:
  %2 := Phi int @test.testContinue:0, @2:1, @3:2
  %3 := Call std.option.Option<Bool>* @std.vec.VecIterator.next<Bool>(%1)
  %4 := Load byte %3
  %5 := Eq byte %4, 1
  branch %5, @1, @4
label @1:
  %6 := GetPointer long, std.option.Option<Bool>::Some* %3.2
  %7 := Load long %6
  %8 := BitXor long, %7 2
  %9 := Eq long %8, 3
  branch %9, @2, @3
label @2:
  Call void @test.use<Int>(1)
  continue @0
label @3:
  Call void @test.use<Int>(2)
  continue @0
label @4:
  Call void @test.use<Int>(%2)
  Ret
}

func void @test.testStringIterator(std.string.String* %0) {
  %1 := Call std.string.StringByteIterator* @std.string.String.bytes(%0)
  %2 := Call std.string.StringByteIterator* @std.iterator.Iterator.toIterator<std.string.StringByteIterator,Byte>(%1)
  continue @0
label @0:
  %3 := Call std.option.Option<Byte>* @std.string.StringByteIterator.next(%2)
  %4 := Load byte %3
  %5 := Eq byte %4, 1
  branch %5, @1, @2
label @1:
  %6 := GetPointer byte, std.option.Option<Byte>::Some* %3.1
  %7 := Load byte %6
  Call void @test.use<Byte>(%7)
  continue @0
label @2:
  Ret
}

func void @test.testDestructureZeroSizeType(std.vec.Vec<test.ZeroSize>* %0) {
  %1 := Call std.vec.VecIterator<test.ZeroSize>* @std.vec.Vec.toIterator<test.ZeroSize>(%0)
  continue @0
label @0:
  %2 := Call std.option.Option<test.ZeroSize>* @std.vec.VecIterator.next<test.ZeroSize>(%1)
  %3 := Load byte %2
  %4 := Eq byte %3, 1
  branch %4, @1, @2
label @1:
  Call void @test.use<Unit>()
  Call void @test.use<Unit>()
  Call void @test.use<Unit>()
  continue @0
label @2:
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.testIterators)
  Call void @test.use<Function>(@test.testBreak)
  Call void @test.use<Function>(@test.testContinue)
  Call void @test.use<Function>(@test.testStringIterator)
  Call void @test.use<Function>(@test.testDestructureZeroSizeType)
  Ret 0
}