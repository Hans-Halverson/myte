type $tuple<Bool,Bool> {bool, bool}

type $tuple<Bool,Int> {bool, int}

type $tuple<Int,Bool> {int, bool}

type $tuple<Int,Int> {int, int}

type test.NonGenericType1 {int}

func int @test.NonGenericType1.nongeneric(test.NonGenericType1* %0, int %1) {
  Ret %1
}

func bool @test.NonGenericType1.generic<Bool>(test.NonGenericType1* %2, bool %3) {
  Ret %3
}

func int @test.NonGenericType1.generic<Int>(test.NonGenericType1* %4, int %5) {
  Ret %5
}

func unit @test.testDirectNonGenericType(test.NonGenericType1* %6) {
  %7 := Call int @test.NonGenericType1.nongeneric(%6, 2)
  %8 := Call int @test.NonGenericType1.generic<Int>(%6, 1)
  %9 := Call bool @test.NonGenericType1.generic<Bool>(%6, false)
  Ret
}

type test.GenericType1<Bool> {bool}

type test.GenericType1<Int> {int}

func bool @test.GenericType1.nongeneric<Bool>(test.GenericType1<Bool>* %10, bool %11) {
  Ret %11
}

func int @test.GenericType1.nongeneric<Int>(test.GenericType1<Int>* %12, int %13) {
  Ret %13
}

func $tuple<Bool,Bool>* @test.GenericType1.generic<Bool,Bool>(test.GenericType1<Bool>* %14, bool %15, bool %16) {
  %17 := CallBuiltin $tuple<Bool,Bool>* myte_alloc(1)
  %18 := GetPointer bool, $tuple<Bool,Bool>* %17.0
  Store bool %18, %15
  %19 := GetPointer bool, $tuple<Bool,Bool>* %17.1
  Store bool %19, %16
  Ret %17
}

func $tuple<Bool,Int>* @test.GenericType1.generic<Bool,Int>(test.GenericType1<Bool>* %20, bool %21, int %22) {
  %23 := CallBuiltin $tuple<Bool,Int>* myte_alloc(1)
  %24 := GetPointer bool, $tuple<Bool,Int>* %23.0
  Store bool %24, %21
  %25 := GetPointer int, $tuple<Bool,Int>* %23.1
  Store int %25, %22
  Ret %23
}

func $tuple<Int,Bool>* @test.GenericType1.generic<Int,Bool>(test.GenericType1<Int>* %26, int %27, bool %28) {
  %29 := CallBuiltin $tuple<Int,Bool>* myte_alloc(1)
  %30 := GetPointer int, $tuple<Int,Bool>* %29.0
  Store int %30, %27
  %31 := GetPointer bool, $tuple<Int,Bool>* %29.1
  Store bool %31, %28
  Ret %29
}

func $tuple<Int,Int>* @test.GenericType1.generic<Int,Int>(test.GenericType1<Int>* %32, int %33, int %34) {
  %35 := CallBuiltin $tuple<Int,Int>* myte_alloc(1)
  %36 := GetPointer int, $tuple<Int,Int>* %35.0
  Store int %36, %33
  %37 := GetPointer int, $tuple<Int,Int>* %35.1
  Store int %37, %34
  Ret %35
}

func unit @test.testDirectGenericType(test.GenericType1<Int>* %38, test.GenericType1<Bool>* %39) {
  %40 := Call int @test.GenericType1.nongeneric<Int>(%38, 1)
  %41 := Call bool @test.GenericType1.nongeneric<Bool>(%39, true)
  %42 := Call $tuple<Int,Int>* @test.GenericType1.generic<Int,Int>(%38, 1, 1)
  %43 := Call $tuple<Int,Bool>* @test.GenericType1.generic<Int,Bool>(%38, 1, true)
  %44 := Call $tuple<Bool,Int>* @test.GenericType1.generic<Bool,Int>(%39, true, 1)
  %45 := Call $tuple<Bool,Bool>* @test.GenericType1.generic<Bool,Bool>(%39, true, true)
  Ret
}

func int @test.NonGenericTrait.nongeneric<test.NonGenericType2>(test.NonGenericType2* %46, int %47) {
  Ret %47
}

func int @test.NonGenericTrait.generic<test.NonGenericType2,Int>(test.NonGenericType2* %48, int %49) {
  Ret %49
}

type test.NonGenericType2 {int}

func unit @test.testInheritedNonGenericTrait(test.NonGenericType2* %50) {
  %51 := Call int @test.NonGenericTrait.nongeneric<test.NonGenericType2>(%50, 1)
  %52 := Call int @test.NonGenericTrait.generic<test.NonGenericType2,Int>(%50, 1)
  %53 := Call int @test.NonGenericTrait.generic<test.NonGenericType2,Int>(%50, 2)
  Ret
}

func bool @test.GenericTrait.nongeneric<test.GenericType2<Bool>,Bool>(test.GenericType2<Bool>* %54, bool %55) {
  Ret %55
}

func int @test.GenericTrait.nongeneric<test.GenericType2<Int>,Int>(test.GenericType2<Int>* %56, int %57) {
  Ret %57
}

func $tuple<Bool,Bool>* @test.GenericTrait.generic<test.GenericType2<Bool>,Bool,Bool>(test.GenericType2<Bool>* %58, bool %59, bool %60) {
  %61 := CallBuiltin $tuple<Bool,Bool>* myte_alloc(1)
  %62 := GetPointer bool, $tuple<Bool,Bool>* %61.0
  Store bool %62, %59
  %63 := GetPointer bool, $tuple<Bool,Bool>* %61.1
  Store bool %63, %60
  Ret %61
}

func $tuple<Bool,Int>* @test.GenericTrait.generic<test.GenericType2<Bool>,Bool,Int>(test.GenericType2<Bool>* %64, bool %65, int %66) {
  %67 := CallBuiltin $tuple<Bool,Int>* myte_alloc(1)
  %68 := GetPointer bool, $tuple<Bool,Int>* %67.0
  Store bool %68, %65
  %69 := GetPointer int, $tuple<Bool,Int>* %67.1
  Store int %69, %66
  Ret %67
}

func $tuple<Int,Bool>* @test.GenericTrait.generic<test.GenericType2<Int>,Int,Bool>(test.GenericType2<Int>* %70, int %71, bool %72) {
  %73 := CallBuiltin $tuple<Int,Bool>* myte_alloc(1)
  %74 := GetPointer int, $tuple<Int,Bool>* %73.0
  Store int %74, %71
  %75 := GetPointer bool, $tuple<Int,Bool>* %73.1
  Store bool %75, %72
  Ret %73
}

func $tuple<Int,Int>* @test.GenericTrait.generic<test.GenericType2<Int>,Int,Int>(test.GenericType2<Int>* %76, int %77, int %78) {
  %79 := CallBuiltin $tuple<Int,Int>* myte_alloc(1)
  %80 := GetPointer int, $tuple<Int,Int>* %79.0
  Store int %80, %77
  %81 := GetPointer int, $tuple<Int,Int>* %79.1
  Store int %81, %78
  Ret %79
}

type test.GenericType2<Bool> {bool}

type test.GenericType2<Int> {int}

func unit @test.testInheritedGenericTrait(test.GenericType2<Int>* %82, test.GenericType2<Bool>* %83) {
  %84 := Call int @test.GenericTrait.nongeneric<test.GenericType2<Int>,Int>(%82, 1)
  %85 := Call bool @test.GenericTrait.nongeneric<test.GenericType2<Bool>,Bool>(%83, true)
  %86 := Call $tuple<Int,Int>* @test.GenericTrait.generic<test.GenericType2<Int>,Int,Int>(%82, 1, 1)
  %87 := Call $tuple<Int,Bool>* @test.GenericTrait.generic<test.GenericType2<Int>,Int,Bool>(%82, 1, true)
  %88 := Call $tuple<Bool,Int>* @test.GenericTrait.generic<test.GenericType2<Bool>,Bool,Int>(%83, true, 1)
  %89 := Call $tuple<Bool,Bool>* @test.GenericTrait.generic<test.GenericType2<Bool>,Bool,Bool>(%83, true, true)
  Ret
}

func unit @test.use<Function>(fn %90) {
  Ret
}

func int @test.main() {
  %91 := Call unit @test.use<Function>(@test.testDirectNonGenericType)
  %92 := Call unit @test.use<Function>(@test.testDirectGenericType)
  %93 := Call unit @test.use<Function>(@test.testInheritedNonGenericTrait)
  %94 := Call unit @test.use<Function>(@test.testInheritedGenericTrait)
  Ret 0
}