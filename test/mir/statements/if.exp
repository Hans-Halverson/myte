func void @test.testWithoutAltern() {
  Call void @test.use<Int>(1)
  branch true, @0, @1
label @0:
  Call void @test.use<Int>(2)
  continue @1
label @1:
  Call void @test.use<Int>(3)
  Ret
}

func void @test.testWithAltern() {
  Call void @test.use<Int>(1)
  branch true, @2, @3
label @2:
  Call void @test.use<Int>(2)
  continue @4
label @3:
  Call void @test.use<Int>(3)
  continue @4
label @4:
  Call void @test.use<Int>(4)
  Ret
}

func void @test.nested() {
  Call void @test.use<Int>(1)
  branch true, @5, @9
label @5:
  Call void @test.use<Int>(2)
  branch false, @6, @7
label @6:
  Call void @test.use<Int>(3)
  continue @8
label @7:
  Call void @test.use<Int>(4)
  continue @8
label @8:
  Call void @test.use<Int>(5)
  continue @13
label @9:
  Call void @test.use<Int>(6)
  branch false, @10, @11
label @10:
  Call void @test.use<Int>(7)
  continue @12
label @11:
  Call void @test.use<Int>(8)
  continue @12
label @12:
  Call void @test.use<Int>(9)
  continue @13
label @13:
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func void @test.use<Int>(int %1) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.testWithoutAltern)
  Call void @test.use<Function>(@test.testWithAltern)
  Call void @test.use<Function>(@test.nested)
  Ret 0
}