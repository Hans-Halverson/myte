type $tuple<test.ByteEnum,test.ByteEnum> {byte, byte}

func void @test.useByteEnum(byte %0) {
  Ret
}

func $tuple<test.ByteEnum,test.ByteEnum>* @test.testPureEnum1Values() {
  Call void @test.useByteEnum(0)
  Call void @test.useByteEnum(1)
  %1 := CallBuiltin $tuple<test.ByteEnum,test.ByteEnum>* myte_alloc(1)
  %2 := GetPointer byte, $tuple<test.ByteEnum,test.ByteEnum>* %1.0
  Store byte %2, 3
  %3 := GetPointer byte, $tuple<test.ByteEnum,test.ByteEnum>* %1.1
  Store byte %3, 2
  Ret %1
}

func void @test.useFullByteEnum(byte %4) {
  Ret
}

func void @test.testFullByteEnum() {
  Call void @test.useFullByteEnum(0)
  Call void @test.useFullByteEnum(1)
  Call void @test.useFullByteEnum(127)
  Call void @test.useFullByteEnum(-1)
  Call void @test.useFullByteEnum(-127)
  Call void @test.useFullByteEnum(-128)
  Ret
}

func void @test.useIntEnum(int %5) {
  Ret
}

func void @test.testIntEnum() {
  Call void @test.useIntEnum(0)
  Call void @test.useIntEnum(1)
  Call void @test.useIntEnum(254)
  Call void @test.useIntEnum(255)
  Call void @test.useIntEnum(256)
  Ret
}

func void @test.use<Function>(fn %6) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.testPureEnum1Values)
  Call void @test.use<Function>(@test.testFullByteEnum)
  Call void @test.use<Function>(@test.testIntEnum)
  Ret 0
}