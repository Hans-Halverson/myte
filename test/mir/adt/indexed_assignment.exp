type test.Rec1 {int}

type test.Rec2 {std.string.String*, bool, int}

type test.Rec3 {byte, test.Rec2*, long}

type test.Rec4 {int, int, test.Rec3*}

type test.Tup1 {test.Rec3*}

func int @test.getInt() {
  Ret 1
}

func unit @test.simpleAccesses(test.Rec1* %0, test.Rec2* %1) {
  %2 := GetPointer int, test.Rec1* %0.0
  Store int %2, 1
  %3 := GetPointer std.string.String*, test.Rec2* %1.0
  %4 := CallBuiltin std.string.String* myte_alloc(1)
  %5 := GetPointer byte*, std.string.String* %4.0
  Store byte* %5, @.S0
  %6 := GetPointer int, std.string.String* %4.1
  Store int %6, 6
  %7 := GetPointer int, std.string.String* %4.2
  Store int %7, 6
  Store std.string.String* %3, %4
  %8 := GetPointer bool, test.Rec2* %1.1
  Store bool %8, true
  Ret
}

global byte[6] @.S0 = "string"

func unit @test.nestedAccesses(test.Rec3* %9, test.Rec4* %10) {
  %11 := GetPointer byte, test.Rec3* %9.0
  Store byte %11, 1
  %12 := GetPointer test.Rec2*, test.Rec3* %9.1
  %13 := Load test.Rec2* %12
  %14 := GetPointer int, test.Rec2* %13.2
  Store int %14, 1
  %15 := GetPointer test.Rec3*, test.Rec4* %10.2
  %16 := Load test.Rec3* %15
  %17 := GetPointer test.Rec2*, test.Rec3* %16.1
  %18 := Load test.Rec2* %17
  %19 := GetPointer std.string.String*, test.Rec2* %18.0
  %20 := CallBuiltin std.string.String* myte_alloc(1)
  %21 := GetPointer byte*, std.string.String* %20.0
  Store byte* %21, @.S1
  %22 := GetPointer int, std.string.String* %20.1
  Store int %22, 6
  %23 := GetPointer int, std.string.String* %20.2
  Store int %23, 6
  Store std.string.String* %19, %20
  Ret
}

global byte[6] @.S1 = "string"

func unit @test.namedAndIndexedAccess(test.Tup1* %24) {
  %25 := GetPointer test.Rec3*, test.Tup1* %24.0
  %26 := Load test.Rec3* %25
  %27 := GetPointer test.Rec2*, test.Rec3* %26.1
  %28 := Load test.Rec2* %27
  %29 := GetPointer std.string.String*, test.Rec2* %28.0
  %30 := CallBuiltin std.string.String* myte_alloc(1)
  %31 := GetPointer byte*, std.string.String* %30.0
  Store byte* %31, @.S2
  %32 := GetPointer int, std.string.String* %30.1
  Store int %32, 6
  %33 := GetPointer int, std.string.String* %30.2
  Store int %33, 6
  Store std.string.String* %29, %30
  Ret
}

global byte[6] @.S2 = "string"

func unit @test.accessOperatorAssign(test.Rec1* %34, test.Rec3* %35, test.Tup1* %36) {
  %37 := GetPointer int, test.Rec1* %34.0
  %38 := Load int %37
  %39 := Add int %38, 1
  Store int %37, %39
  %40 := GetPointer int, test.Rec1* %34.0
  %41 := Load int %40
  %42 := Call int @test.getInt()
  %43 := Add int %41, %42
  Store int %40, %43
  %44 := GetPointer test.Rec2*, test.Rec3* %35.1
  %45 := Load test.Rec2* %44
  %46 := GetPointer int, test.Rec2* %45.2
  %47 := Load int %46
  %48 := Add int %47, 1
  Store int %46, %48
  %49 := GetPointer test.Rec3*, test.Tup1* %36.0
  %50 := Load test.Rec3* %49
  %51 := GetPointer long, test.Rec3* %50.2
  %52 := Load long %51
  %53 := Add long %52, 1
  Store long %51, %53
  Ret
}

func int @test.main() {
  Ret 0
}