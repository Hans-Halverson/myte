type test.Rec1 {int}

type test.Rec2 {std.string.String*, bool, int}

type test.Rec3 {byte, test.Rec2*, long}

type test.Rec4 {int, int, test.Rec3*}

type test.Tup1 {test.Rec3*}

func int @test.getInt() {
  Ret 1
}

func void @test.simpleAccesses(test.Rec1* %0, test.Rec2* %1) {
  %2 := GetPointer int, test.Rec1* %0.0
  Store int %2, 1
  %3 := CallBuiltin std.string.String* myte_alloc(1)
  %4 := GetPointer byte*, std.string.String* %3.0
  Store byte* %4, @.S2
  %5 := GetPointer int, std.string.String* %3.1
  Store int %5, 6
  %6 := GetPointer int, std.string.String* %3.2
  Store int %6, 6
  %7 := GetPointer std.string.String*, test.Rec2* %1.0
  Store std.string.String* %7, %3
  %8 := GetPointer bool, test.Rec2* %1.1
  Store bool %8, true
  Ret
}

global byte[6] @.S2 = "string"

func void @test.nestedAccesses(test.Rec3* %0, test.Rec4* %1) {
  %2 := GetPointer byte, test.Rec3* %0.0
  Store byte %2, 1
  %3 := GetPointer test.Rec2*, test.Rec3* %0.1
  %4 := Load test.Rec2* %3
  %5 := GetPointer int, test.Rec2* %4.2
  Store int %5, 1
  %6 := CallBuiltin std.string.String* myte_alloc(1)
  %7 := GetPointer byte*, std.string.String* %6.0
  Store byte* %7, @.S1
  %8 := GetPointer int, std.string.String* %6.1
  Store int %8, 6
  %9 := GetPointer int, std.string.String* %6.2
  Store int %9, 6
  %10 := GetPointer test.Rec3*, test.Rec4* %1.2
  %11 := Load test.Rec3* %10
  %12 := GetPointer test.Rec2*, test.Rec3* %11.1
  %13 := Load test.Rec2* %12
  %14 := GetPointer std.string.String*, test.Rec2* %13.0
  Store std.string.String* %14, %6
  Ret
}

global byte[6] @.S1 = "string"

func void @test.namedAndIndexedAccess(test.Tup1* %0) {
  %1 := CallBuiltin std.string.String* myte_alloc(1)
  %2 := GetPointer byte*, std.string.String* %1.0
  Store byte* %2, @.S0
  %3 := GetPointer int, std.string.String* %1.1
  Store int %3, 6
  %4 := GetPointer int, std.string.String* %1.2
  Store int %4, 6
  %5 := GetPointer test.Rec3*, test.Tup1* %0.0
  %6 := Load test.Rec3* %5
  %7 := GetPointer test.Rec2*, test.Rec3* %6.1
  %8 := Load test.Rec2* %7
  %9 := GetPointer std.string.String*, test.Rec2* %8.0
  Store std.string.String* %9, %1
  Ret
}

global byte[6] @.S0 = "string"

func void @test.accessOperatorAssign(test.Rec1* %0, test.Rec3* %1, test.Tup1* %2) {
  %3 := GetPointer int, test.Rec1* %0.0
  %4 := Load int %3
  %5 := Add int %4, 1
  %6 := GetPointer int, test.Rec1* %0.0
  Store int %6, %5
  %7 := GetPointer int, test.Rec1* %0.0
  %8 := Load int %7
  %9 := Call int @test.getInt()
  %10 := Add int %8, %9
  %11 := GetPointer int, test.Rec1* %0.0
  Store int %11, %10
  %12 := GetPointer test.Rec2*, test.Rec3* %1.1
  %13 := Load test.Rec2* %12
  %14 := GetPointer int, test.Rec2* %13.2
  %15 := Load int %14
  %16 := Add int %15, 1
  %17 := GetPointer test.Rec2*, test.Rec3* %1.1
  %18 := Load test.Rec2* %17
  %19 := GetPointer int, test.Rec2* %18.2
  Store int %19, %16
  %20 := GetPointer test.Rec3*, test.Tup1* %2.0
  %21 := Load test.Rec3* %20
  %22 := GetPointer long, test.Rec3* %21.2
  %23 := Load long %22
  %24 := Add long %23, 1
  %25 := GetPointer test.Rec3*, test.Tup1* %2.0
  %26 := Load test.Rec3* %25
  %27 := GetPointer long, test.Rec3* %26.2
  Store long %27, %24
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.simpleAccesses)
  Call void @test.use<Function>(@test.nestedAccesses)
  Call void @test.use<Function>(@test.namedAndIndexedAccess)
  Call void @test.use<Function>(@test.accessOperatorAssign)
  Ret 0
}