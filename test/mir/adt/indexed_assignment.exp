type test.Rec1 {int}

type test.Rec2 {bool, int, std.string.String*}

type test.Rec3 {byte, test.Rec2*, long}

type test.Rec4 {int, int, test.Rec3*}

type test.Tup1 {test.Rec3*}

func int @test.getInt() {
  Ret 1
}

func void @test.simpleAccesses(test.Rec1* %0, test.Rec2* %1) {
  %2 := GetPointer int, test.Rec1* %0.0
  Store int %2, 1
  %3 := Call std.string.String* myte.builtin.alloc(1)
  %4 := Cast byte[6]* @.S2 to byte*
  %5 := GetPointer byte*, std.string.String* %3.2
  Store byte* %5, %4
  %6 := GetPointer int, std.string.String* %3.0
  Store int %6, 6
  %7 := GetPointer int, std.string.String* %3.1
  Store int %7, 6
  %8 := GetPointer std.string.String*, test.Rec2* %1.2
  Store std.string.String* %8, %3
  %9 := GetPointer bool, test.Rec2* %1.0
  Store bool %9, true
  Ret
}

global byte[6] @.S2 = "string"

func void @test.nestedAccesses(test.Rec3* %0, test.Rec4* %1) {
  %2 := GetPointer byte, test.Rec3* %0.0
  Store byte %2, 1
  %3 := GetPointer test.Rec2*, test.Rec3* %0.1
  %4 := Load test.Rec2* %3
  %5 := GetPointer int, test.Rec2* %4.1
  Store int %5, 1
  %6 := Call std.string.String* myte.builtin.alloc(1)
  %7 := Cast byte[6]* @.S1 to byte*
  %8 := GetPointer byte*, std.string.String* %6.2
  Store byte* %8, %7
  %9 := GetPointer int, std.string.String* %6.0
  Store int %9, 6
  %10 := GetPointer int, std.string.String* %6.1
  Store int %10, 6
  %11 := GetPointer test.Rec3*, test.Rec4* %1.2
  %12 := Load test.Rec3* %11
  %13 := GetPointer test.Rec2*, test.Rec3* %12.1
  %14 := Load test.Rec2* %13
  %15 := GetPointer std.string.String*, test.Rec2* %14.2
  Store std.string.String* %15, %6
  Ret
}

global byte[6] @.S1 = "string"

func void @test.namedAndIndexedAccess(test.Tup1* %0) {
  %1 := Call std.string.String* myte.builtin.alloc(1)
  %2 := Cast byte[6]* @.S0 to byte*
  %3 := GetPointer byte*, std.string.String* %1.2
  Store byte* %3, %2
  %4 := GetPointer int, std.string.String* %1.0
  Store int %4, 6
  %5 := GetPointer int, std.string.String* %1.1
  Store int %5, 6
  %6 := GetPointer test.Rec3*, test.Tup1* %0.0
  %7 := Load test.Rec3* %6
  %8 := GetPointer test.Rec2*, test.Rec3* %7.1
  %9 := Load test.Rec2* %8
  %10 := GetPointer std.string.String*, test.Rec2* %9.2
  Store std.string.String* %10, %1
  Ret
}

global byte[6] @.S0 = "string"

func void @test.accessOperatorAssign(test.Rec1* %0, test.Rec3* %1, test.Tup1* %2) {
  %3 := GetPointer int, test.Rec1* %0.0
  %4 := Load int %3
  %5 := Add int %4, 1
  %6 := GetPointer int, test.Rec1* %0.0
  Store int %6, %5
  %7 := GetPointer int, test.Rec1* %0.0
  %8 := Load int %7
  %9 := Call int @test.getInt()
  %10 := Add int %8, %9
  %11 := GetPointer int, test.Rec1* %0.0
  Store int %11, %10
  %12 := GetPointer test.Rec2*, test.Rec3* %1.1
  %13 := Load test.Rec2* %12
  %14 := GetPointer int, test.Rec2* %13.1
  %15 := Load int %14
  %16 := Add int %15, 1
  %17 := GetPointer test.Rec2*, test.Rec3* %1.1
  %18 := Load test.Rec2* %17
  %19 := GetPointer int, test.Rec2* %18.1
  Store int %19, %16
  %20 := GetPointer test.Rec3*, test.Tup1* %2.0
  %21 := Load test.Rec3* %20
  %22 := GetPointer long, test.Rec3* %21.2
  %23 := Load long %22
  %24 := Add long %23, 1
  %25 := GetPointer test.Rec3*, test.Tup1* %2.0
  %26 := Load test.Rec3* %25
  %27 := GetPointer long, test.Rec3* %26.2
  Store long %27, %24
  Ret
}

func int @test.main() {
  Ret 0
}