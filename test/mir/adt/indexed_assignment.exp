type test.Rec1 {int}

type test.Rec2 {bool, byte[3], int, std.string.String*}

type test.Rec3 {byte, byte[7], test.Rec2*, long}

type test.Rec4 {int, int, test.Rec3*}

type test.Tup1 {test.Rec3*}

func int @test.getInt() {
  Ret 1
}

func void @test.simpleAccesses(test.Rec1* %0, test.Rec2* %1) {
  %2 := GetPointer int, test.Rec1* %0.0
  Store int %2, 1
  %3 := Call std.string.String* myte.builtin.alloc(1)
  %4 := Cast byte[6]* @.S2 to byte*
  %5 := GetPointer byte*, std.string.String* %3.2
  Store byte* %5, %4
  %6 := GetPointer int, std.string.String* %3.0
  Store int %6, 6
  %7 := GetPointer int, std.string.String* %3.1
  Store int %7, 6
  %8 := GetPointer std.string.String*, test.Rec2* %1.3
  Store std.string.String* %8, %3
  %9 := GetPointer bool, test.Rec2* %1.0
  Store bool %9, true
  Ret
}

global byte[6] @.S2 = "string"

func void @test.nestedAccesses(test.Rec3* %0, test.Rec4* %1) {
  %2 := GetPointer byte, test.Rec3* %0.0
  Store byte %2, 1
  %3 := GetPointer test.Rec2*, test.Rec3* %0.2
  %4 := Load test.Rec2* %3
  %5 := GetPointer int, test.Rec2* %4.2
  Store int %5, 1
  %6 := Call std.string.String* myte.builtin.alloc(1)
  %7 := Cast byte[6]* @.S1 to byte*
  %8 := GetPointer byte*, std.string.String* %6.2
  Store byte* %8, %7
  %9 := GetPointer int, std.string.String* %6.0
  Store int %9, 6
  %10 := GetPointer int, std.string.String* %6.1
  Store int %10, 6
  %11 := GetPointer test.Rec3*, test.Rec4* %1.2
  %12 := Load test.Rec3* %11
  %13 := GetPointer test.Rec2*, test.Rec3* %12.2
  %14 := Load test.Rec2* %13
  %15 := GetPointer std.string.String*, test.Rec2* %14.3
  Store std.string.String* %15, %6
  Ret
}

global byte[6] @.S1 = "string"

func void @test.namedAndIndexedAccess(test.Tup1* %0) {
  %1 := Call std.string.String* myte.builtin.alloc(1)
  %2 := Cast byte[6]* @.S0 to byte*
  %3 := GetPointer byte*, std.string.String* %1.2
  Store byte* %3, %2
  %4 := GetPointer int, std.string.String* %1.0
  Store int %4, 6
  %5 := GetPointer int, std.string.String* %1.1
  Store int %5, 6
  %6 := GetPointer test.Rec3*, test.Tup1* %0.0
  %7 := Load test.Rec3* %6
  %8 := GetPointer test.Rec2*, test.Rec3* %7.2
  %9 := Load test.Rec2* %8
  %10 := GetPointer std.string.String*, test.Rec2* %9.3
  Store std.string.String* %10, %1
  Ret
}

global byte[6] @.S0 = "string"

func void @test.accessOperatorAssign(test.Rec1* %0, test.Rec3* %1, test.Tup1* %2) {
  %3 := GetPointer int, test.Rec1* %0.0
  %4 := Load int %3
  %5 := Add int %4, 1
  Store int %3, %5
  %6 := GetPointer int, test.Rec1* %0.0
  %7 := Load int %6
  %8 := Call int @test.getInt()
  %9 := Add int %7, %8
  Store int %6, %9
  %10 := GetPointer test.Rec2*, test.Rec3* %1.2
  %11 := Load test.Rec2* %10
  %12 := GetPointer int, test.Rec2* %11.2
  %13 := Load int %12
  %14 := Add int %13, 1
  Store int %12, %14
  %15 := GetPointer test.Rec3*, test.Tup1* %2.0
  %16 := Load test.Rec3* %15
  %17 := GetPointer long, test.Rec3* %16.3
  %18 := Load long %17
  %19 := Add long %18, 1
  Store long %17, %19
  Ret
}

func int @test.main() {
  Ret 0
}