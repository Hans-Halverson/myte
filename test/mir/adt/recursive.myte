module test

// Self recursive types
type Rec1 (Int, Rec1)

type Rec2<T> (Int, Rec2<T>)

fun useSelfRecursive(r1: Rec1, r2: Rec2<Int>) {}

// Mutually recursive types
type Rec3 (Int, Rec4)
type Rec4 (String, Rec5)
type Rec5 (Bool, Rec3)

fun useMutuallyRecursive(r: Rec4) {}

// Self recursive variants
type VRec1<T> =
  | Node
  | Tree { node: T, left: VRec1<T>, right: VRec1<T> }

fun useSelfRecursiveVariant(v1: VRec1<Bool>, v2: VRec1<Int>) {}

// Mutually recursive variants
type VRec2 =
  | E1
  | T1 (Int, VRec3)

type VRec3 =
  | E2
  | T2 (Byte, VRec2)

fun useMutuallyRecursiveVariants(v: VRec2) {}

fun use<T>(x: T) {}

fun main() {
  use(useSelfRecursive);
  use(useMutuallyRecursive);
  use(useSelfRecursiveVariant);
  use(useMutuallyRecursiveVariants);
}