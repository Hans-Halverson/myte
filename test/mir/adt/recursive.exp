type test.Rec1 {int, test.Rec1*}

type test.Rec2<int> {int, test.Rec2<int>*}

func unit @test.useSelfRecursive(test.Rec1* %0, test.Rec2<int>* %1) {
  Ret
}

type test.Rec3 {int, test.Rec4*}

type test.Rec4 {std.string.String*, test.Rec5*}

type test.Rec5 {bool, test.Rec3*}

func unit @test.useMutuallyRecursive(test.Rec4* %2) {
  Ret
}

type test.VRec1<bool> {byte, byte[23]}

type test.VRec1<int> {byte, byte[23]}

type test.VRec1<bool>::Tree {byte, bool, byte[6], test.VRec1<bool>*, test.VRec1<bool>*}

type test.VRec1<int>::Tree {byte, byte[3], int, test.VRec1<int>*, test.VRec1<int>*}

func unit @test.useSelfRecursiveVariant(test.VRec1<bool>* %3, test.VRec1<int>* %4) {
  Ret
}

type test.VRec2 {byte, byte[15]}

type test.VRec2::T1 {byte, byte[3], int, test.VRec3*}

type test.VRec3 {byte, byte[15]}

type test.VRec3::T2 {byte, byte, byte[6], test.VRec2*}

func unit @test.useMutuallyRecursiveVariants(test.VRec2* %5) {
  Ret
}

func unit @test.use<fn>(fn %6) {
  Ret
}

func int @test.main() {
  %7 := Call unit @test.use<fn>(@test.useSelfRecursive)
  %8 := Call unit @test.use<fn>(@test.useMutuallyRecursive)
  %9 := Call unit @test.use<fn>(@test.useSelfRecursiveVariant)
  %10 := Call unit @test.use<fn>(@test.useMutuallyRecursiveVariants)
  Ret 0
}