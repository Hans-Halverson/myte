module test

type Tup1 (Int)
type Tup2 (Bool, Long, Int)
type Tup3 (Byte, Tup2, Byte)

type Rec1 { foo: Int }
type Rec2 { foo: Bool, bar: Long, baz: Int }
type Rec3 { foo: Byte, bar: Tup2, baz: Byte }

fun arguments(x: Int) {
  // Passing variables as arguments
  Tup2 (true, 3, x);

  // Passing aggregate literal as argument
  Tup3 (6, Tup2 (false, 7, 8), 9);
  Rec3 { foo: 6, bar: Tup2 (false, 7, 8), baz: 9 };
}

fun tupleConstructor() {
  Tup1 (3);
  Tup2 (true, 4, 5);
}

fun recordConstructor() {
  Rec1 { foo: 3 };
  Rec2 { foo: true, bar: 4, baz: 5 };

  // Reordered fields
  Rec2 { baz: 6, foo: true, bar: 7 };
}

fun main() {}