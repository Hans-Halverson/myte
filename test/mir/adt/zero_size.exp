func void @test.testZeroSizeADT() {
  Call void @test.getUnit()
  Call void @test.id<Unit>()
  Call void @test.use<test.Tup1>()
  Call void @test.use<Unit>()
  Call void @test.use<Unit>()
  Call void @test.getUnit()
  Call void @test.id<Unit>()
  Call void @test.use<test.Rec1>()
  Call void @test.use<Unit>()
  Call void @test.use<Unit>()
  Ret
}

type test.Tup2 {byte, byte[3], int}

type test.Rec2 {byte, byte[3], int}

func void @test.testAggregateWithZeroSizeFields() {
  %0 := Call test.Tup2* myte.builtin.alloc(1)
  %1 := GetPointer int, test.Tup2* %0.2
  Store int %1, 6
  Call void @test.getUnit()
  Call void @test.id<Unit>()
  %2 := GetPointer byte, test.Tup2* %0.0
  Store byte %2, 5
  Call void @test.use<Unit>()
  %3 := GetPointer int, test.Tup2* %0.2
  %4 := Load int %3
  Call void @test.use<Int>(%4)
  Call void @test.use<Unit>()
  Call void @test.use<Unit>()
  %5 := GetPointer byte, test.Tup2* %0.0
  %6 := Load byte %5
  Call void @test.use<Byte>(%6)
  %7 := Call test.Rec2* myte.builtin.alloc(1)
  Call void @test.getUnit()
  %8 := GetPointer int, test.Rec2* %7.2
  Store int %8, 6
  Call void @test.id<Unit>()
  %9 := GetPointer byte, test.Rec2* %7.0
  Store byte %9, 5
  Call void @test.use<Unit>()
  %10 := GetPointer int, test.Rec2* %7.2
  %11 := Load int %10
  Call void @test.use<Int>(%11)
  Call void @test.use<Unit>()
  %12 := GetPointer byte, test.Rec2* %7.0
  %13 := Load byte %12
  Call void @test.use<Byte>(%13)
  Ret
}

type test.Variant1 {byte, byte[7]}

type test.Variant1::Tup3 {byte, byte, byte[2], int}

type test.Variant1::Rec3 {byte, byte, byte[2], int}

type test.Variant1::Tup4 {byte, byte[7]}

type test.Variant1::Rec4 {byte, byte[7]}

func void @test.testVariantWithZeroSizeFields() {
  %0 := Call test.Variant1* myte.builtin.alloc(1)
  %1 := Cast test.Variant1* %0 to test.Variant1::Tup3*
  %2 := Cast test.Variant1::Tup3* %1 to byte*
  Store byte %2, 0
  %3 := GetPointer int, test.Variant1::Tup3* %1.3
  Store int %3, 1
  Call void @test.getUnit()
  %4 := GetPointer byte, test.Variant1::Tup3* %1.1
  Store byte %4, 2
  Call void @test.use<test.Variant1>(%0)
  %5 := Call test.Variant1* myte.builtin.alloc(1)
  %6 := Cast test.Variant1* %5 to test.Variant1::Rec3*
  %7 := Cast test.Variant1::Rec3* %6 to byte*
  Store byte %7, 1
  %8 := GetPointer byte, test.Variant1::Rec3* %6.1
  Store byte %8, 3
  Call void @test.id<Unit>()
  %9 := GetPointer int, test.Variant1::Rec3* %6.3
  Store int %9, 4
  Call void @test.use<test.Variant1>(%5)
  %10 := Call test.Variant1* myte.builtin.alloc(1)
  %11 := Cast test.Variant1* %10 to test.Variant1::Tup4*
  %12 := Cast test.Variant1::Tup4* %11 to byte*
  Store byte %12, 2
  Call void @test.id<Unit>()
  Call void @test.use<test.Variant1>(%10)
  %13 := Call test.Variant1* myte.builtin.alloc(1)
  %14 := Cast test.Variant1* %13 to test.Variant1::Rec4*
  %15 := Cast test.Variant1::Rec4* %14 to byte*
  Store byte %15, 3
  Call void @test.getUnit()
  Call void @test.id<Unit>()
  Call void @test.use<test.Variant1>(%13)
  Ret
}

func void @test.getUnit() {
  Ret
}

func void @test.id<Unit>() {
  Ret
}

func void @test.use<Byte>(byte %0) {
  Ret
}

func void @test.use<Int>(int %0) {
  Ret
}

func void @test.use<Unit>() {
  Ret
}

func void @test.use<test.Rec1>() {
  Ret
}

func void @test.use<test.Tup1>() {
  Ret
}

func void @test.use<test.Variant1>(test.Variant1* %0) {
  Ret
}

func int @test.main() {
  Ret 0
}