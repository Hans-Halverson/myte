type test.V1<Bool> {byte, byte[1]}

type test.V1<Int> {byte, byte[7]}

type test.V1<Bool>::Tuple1 {byte, bool}

type test.V1<Int>::Tuple1 {byte, byte[3], int}

type test.V1<Bool>::Record1 {byte, bool}

type test.V1<Int>::Record1 {byte, byte[3], int}

func void @test.useV1Bool(test.V1<Bool>* %0) {
  Ret
}

func void @test.useV1Int(test.V1<Int>* %1) {
  Ret
}

func void @test.testEnumConstructors() {
  %2 := CallBuiltin test.V1<Bool>* myte_alloc(1)
  Store byte %2, 0
  Call void @test.useV1Bool(%2)
  %3 := CallBuiltin test.V1<Bool>* myte_alloc(1)
  Store byte %3, 1
  Call void @test.useV1Bool(%3)
  %4 := CallBuiltin test.V1<Int>* myte_alloc(1)
  Store byte %4, 0
  Call void @test.useV1Int(%4)
  %5 := CallBuiltin test.V1<Int>* myte_alloc(1)
  Store byte %5, 1
  Call void @test.useV1Int(%5)
  Ret
}

type test.V2 {byte, byte[23]}

type test.V2::Tuple2 {byte, byte[3], int, bool, byte[7], test.V1<Int>*}

type test.V2::Record2 {byte, byte[3], int, bool, byte[7], test.V1<Int>*}

type test.V2::Record3 {byte, byte, byte[2], int, byte[16]}

func void @test.testTupleConstructors() {
  %6 := CallBuiltin test.V1<Bool>::Tuple1* myte_alloc(1)
  Store byte %6, 2
  %7 := GetPointer bool, test.V1<Bool>::Tuple1* %6.1
  Store bool %7, true
  Call void @test.useV1Bool(%6)
  %8 := CallBuiltin test.V1<Int>::Tuple1* myte_alloc(1)
  Store byte %8, 2
  %9 := GetPointer int, test.V1<Int>::Tuple1* %8.2
  Store int %9, 7
  %10 := CallBuiltin test.V2::Tuple2* myte_alloc(1)
  Store byte %10, 0
  %11 := GetPointer int, test.V2::Tuple2* %10.2
  Store int %11, 3
  %12 := GetPointer bool, test.V2::Tuple2* %10.3
  Store bool %12, false
  %13 := GetPointer test.V1<Int>*, test.V2::Tuple2* %10.5
  Store test.V1<Int>* %13, %8
  Ret
}

func void @test.testRecordConstructors() {
  %14 := CallBuiltin test.V1<Bool>::Record1* myte_alloc(1)
  Store byte %14, 3
  %15 := GetPointer bool, test.V1<Bool>::Record1* %14.1
  Store bool %15, true
  Call void @test.useV1Bool(%14)
  %16 := CallBuiltin test.V1<Int>::Record1* myte_alloc(1)
  Store byte %16, 3
  %17 := GetPointer int, test.V1<Int>::Record1* %16.2
  Store int %17, 7
  %18 := CallBuiltin test.V2::Record2* myte_alloc(1)
  Store byte %18, 1
  %19 := GetPointer int, test.V2::Record2* %18.2
  Store int %19, 3
  %20 := GetPointer bool, test.V2::Record2* %18.3
  Store bool %20, false
  %21 := GetPointer test.V1<Int>*, test.V2::Record2* %18.5
  Store test.V1<Int>* %21, %16
  %22 := CallBuiltin test.V2::Record3* myte_alloc(1)
  Store byte %22, 2
  %23 := GetPointer byte, test.V2::Record3* %22.1
  Store byte %23, 4
  %24 := GetPointer int, test.V2::Record3* %22.3
  Store int %24, 5
  Ret
}

func void @test.use<Function>(fn %25) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.testEnumConstructors)
  Call void @test.use<Function>(@test.testTupleConstructors)
  Call void @test.use<Function>(@test.testRecordConstructors)
  Ret 0
}