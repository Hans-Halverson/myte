module test

// Instantiation and layout of non-generic variants
type Opt1 =
  | None1
  | Some1 (Int)

fun useOpt1(o: Opt1) {}

// Instantiation and layout of generic variants
type Opt2<T> =
  | None2
  | Some2 (T)

fun useOpt2(o1: Opt2<Int>, o2: Opt2<Bool>, o3: Opt2<Opt2<String>>) {}

// Padding inserted between elements and at end
type V1 =
  | V1Tup1 (Byte, Int, Opt1)
  | V1Tup2 (Byte, Byte, Byte, Int, Opt1)
  | V2Rec1 { foo: Opt1, bar: Int, baz: Byte, bazz: Opt2<Int> }
  // Padding consolidated at end
  | V2Rec2 { foo: Byte, bar: Int, baz: Byte, bazz: Int }

// Pointer and non-pointer elements
type V2 =
  | V21
  | V22 (Byte)
  | V23 (String)
  | V24 (Byte, String)

// Only pointer elements
type V3 =
  | V31
  | V32 (String)
  | V33 (String, String)

// No pointers, non-pointer elements do not need to be aligned to pointers
type V4 =
  | V41
  | V42 (Byte)
  | V43 (Byte, Bool)

fun useVs(v1: V1, v2: V2, v3: V3, v4: V4) {}

fun use<T>(x: T) {}

fun main() {
  use(useOpt1);
  use(useOpt2);
  use(useVs);
}