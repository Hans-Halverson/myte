type test.V1 {byte, byte[11]}

type test.V1::Tuple1 {byte, byte[3], int, int}

type test.V1::Record1 {byte, byte[3], int, int}

func void @test.testIfStatementNoAltern(test.V1* %0) {
  Call void @test.use<Int>(1)
  %1 := Cast test.V1* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @1
label @0:
  %4 := Cast test.V1* %0 to test.V1::Tuple1*
  %5 := GetPointer int, test.V1::Tuple1* %4.2
  %6 := Load int %5
  %7 := Cast test.V1* %0 to test.V1::Tuple1*
  %8 := GetPointer int, test.V1::Tuple1* %7.3
  %9 := Load int %8
  Call void @test.use<Int>(%6)
  Call void @test.use<Int>(%9)
  continue @1
label @1:
  Call void @test.use<Int>(2)
  Ret
}

func void @test.testIfStatementWithAltern(test.V1* %0) {
  Call void @test.use<Int>(1)
  %1 := Cast test.V1* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @1
label @0:
  %4 := Cast test.V1* %0 to test.V1::Tuple1*
  %5 := GetPointer int, test.V1::Tuple1* %4.2
  %6 := Load int %5
  %7 := Cast test.V1* %0 to test.V1::Tuple1*
  %8 := GetPointer int, test.V1::Tuple1* %7.3
  %9 := Load int %8
  Call void @test.use<Int>(%6)
  Call void @test.use<Int>(%9)
  continue @2
label @1:
  Call void @test.use<Int>(2)
  continue @2
label @2:
  Call void @test.use<Int>(3)
  Ret
}

func void @test.testIfStatementWithAlternMatch1(test.V1* %0) {
  Call void @test.use<Int>(1)
  %1 := Cast test.V1* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @1
label @0:
  %4 := Cast test.V1* %0 to test.V1::Tuple1*
  %5 := GetPointer int, test.V1::Tuple1* %4.2
  %6 := Load int %5
  %7 := Cast test.V1* %0 to test.V1::Tuple1*
  %8 := GetPointer int, test.V1::Tuple1* %7.3
  %9 := Load int %8
  Call void @test.use<Int>(%6)
  Call void @test.use<Int>(%9)
  continue @3
label @1:
  %10 := Cast test.V1* %0 to byte*
  %11 := Load byte %10
  %12 := Eq byte %11, 1
  branch %12, @2, @3
label @2:
  %13 := Cast test.V1* %0 to test.V1::Record1*
  %14 := GetPointer int, test.V1::Record1* %13.2
  %15 := Load int %14
  %16 := Cast test.V1* %0 to test.V1::Record1*
  %17 := GetPointer int, test.V1::Record1* %16.3
  %18 := Load int %17
  Call void @test.use<Int>(%15)
  Call void @test.use<Int>(%18)
  continue @3
label @3:
  Call void @test.use<Int>(2)
  Ret
}

func void @test.testIfStatementWithAlternMatch2(test.V1* %0) {
  Call void @test.use<Int>(1)
  %1 := Cast test.V1* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @1
label @0:
  %4 := Cast test.V1* %0 to test.V1::Tuple1*
  %5 := GetPointer int, test.V1::Tuple1* %4.2
  %6 := Load int %5
  %7 := Cast test.V1* %0 to test.V1::Tuple1*
  %8 := GetPointer int, test.V1::Tuple1* %7.3
  %9 := Load int %8
  Call void @test.use<Int>(%6)
  Call void @test.use<Int>(%9)
  continue @4
label @1:
  %10 := Cast test.V1* %0 to byte*
  %11 := Load byte %10
  %12 := Eq byte %11, 1
  branch %12, @2, @3
label @2:
  %13 := Cast test.V1* %0 to test.V1::Record1*
  %14 := GetPointer int, test.V1::Record1* %13.2
  %15 := Load int %14
  %16 := Cast test.V1* %0 to test.V1::Record1*
  %17 := GetPointer int, test.V1::Record1* %16.3
  %18 := Load int %17
  Call void @test.use<Int>(%15)
  Call void @test.use<Int>(%18)
  continue @4
label @3:
  Call void @test.use<Int>(2)
  continue @4
label @4:
  Call void @test.use<Int>(3)
  Ret
}

func void @test.testEvaluateTest(int %0, int %1) {
  %2 := Add int %0, %1
  %3 := ZExt int %2 to long
  %4 := Lt long %3, 4294967296
  branch %4, @0, @1
label @0:
  %5 := Trunc long %3 to int
  Call void @test.use<Int>(%5)
  continue @1
label @1:
  Ret
}

func void @test.testIfExpression(test.V1* %0, int %1) {
  Call void @test.use<Int>(1)
  %2 := Cast test.V1* %0 to byte*
  %3 := Load byte %2
  %4 := Eq byte %3, 0
  branch %4, @0, @1
label @0:
  %5 := Cast test.V1* %0 to test.V1::Tuple1*
  %6 := GetPointer int, test.V1::Tuple1* %5.2
  %7 := Load int %6
  %8 := Cast test.V1* %0 to test.V1::Tuple1*
  %9 := GetPointer int, test.V1::Tuple1* %8.3
  %10 := Load int %9
  %11 := Add int %7, %10
  continue @2
label @1:
  %12 := Add int %1, 10
  continue @2
label @2:
  %13 := Phi int @1:%12, @0:%11
  Call void @test.use<Int>(%13)
  Ret
}

func void @test.testWhile(test.V1* %0) {
  Call void @test.use<Int>(1)
  continue @0
label @0:
  %1 := Cast test.V1* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @1, @2
label @1:
  %4 := Cast test.V1* %0 to test.V1::Tuple1*
  %5 := GetPointer int, test.V1::Tuple1* %4.2
  %6 := Load int %5
  %7 := Cast test.V1* %0 to test.V1::Tuple1*
  %8 := GetPointer int, test.V1::Tuple1* %7.3
  %9 := Load int %8
  Call void @test.use<Int>(%6)
  Call void @test.use<Int>(%9)
  continue @0
label @2:
  Call void @test.use<Int>(2)
  Ret
}

func void @test.use<Int>(int %0) {
  Ret
}

func int @test.main() {
  Ret 0
}