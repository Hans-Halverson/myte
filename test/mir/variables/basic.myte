module test

fun use<T>(x: T) {}

val x: Int = 1

fun testVariableUse(y: Int, z: Unit) {
  x + 2 * y;
  z;
}

fun testVariableDeclaration() {
  val x: Int = x;
  val y: Int = 4 * 34;

  use(x);
  use(y);
}

type ZeroSize (Unit)

fun getUnit() = ()

fun id<T>(x: T): T = x

fun testZeroSizeVariableDeclaration() {
  // Completely eliminated
  val x: ZeroSize = ZeroSize (());
  use(x);

  use(1);

  // Eliminated but calls remains
  val x: ZeroSize = id(ZeroSize(getUnit()));
  use(x);
}

fun main() {
  use(testVariableUse);
  use(testVariableDeclaration);
  use(testZeroSizeVariableDeclaration);
}