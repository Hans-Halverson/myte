type _object$test.Trait {byte*, fn[2]*}

type _object$test.Type$test.Trait {test.Type*, fn[2]*}

type test.Type {int}

global fn[2] @_vtable$test.Type$test.Trait = [@test.Type.bar, @test.Type.foo]

func int @test.Type.foo(test.Type* %0) {
  Ret 1
}

func std.string.String* @test.Type.bar(test.Type* %0, int %1, bool %2) {
  %3 := CallBuiltin std.string.String* myte_alloc(1)
  %4 := GetPointer byte*, std.string.String* %3.0
  Store byte* %4, 0
  %5 := GetPointer int, std.string.String* %3.1
  Store int %5, 0
  %6 := GetPointer int, std.string.String* %3.2
  Store int %6, 0
  Ret %3
}

func void @test.callSimpleMethod(_object$test.Trait* %0) {
  %1 := GetPointer byte*, _object$test.Trait* %0.0
  %2 := Load byte* %1
  %3 := GetPointer fn[2]*, _object$test.Trait* %0.1
  %4 := Load fn[2]* %3
  %5 := GetPointer fn, fn* %4[int 1]
  %6 := Load fn %5
  %7 := Call int %6(%2)
  Ret
}

func void @test.callMethodWithArgs(_object$test.Trait* %0) {
  %1 := GetPointer byte*, _object$test.Trait* %0.0
  %2 := Load byte* %1
  %3 := GetPointer fn[2]*, _object$test.Trait* %0.1
  %4 := Load fn[2]* %3
  %5 := GetPointer fn, fn* %4[int 0]
  %6 := Load fn %5
  %7 := Call std.string.String* %6(%2, 1, true)
  Ret
}

func void @test.test(test.Type* %0) {
  %1 := CallBuiltin _object$test.Type$test.Trait* myte_alloc(1)
  %2 := GetPointer test.Type*, _object$test.Type$test.Trait* %1.0
  Store test.Type* %2, %0
  %3 := GetPointer fn[2]*, _object$test.Type$test.Trait* %1.1
  Store fn[2]* %3, @_vtable$test.Type$test.Trait
  Call void @test.callSimpleMethod(%1)
  Call void @test.callMethodWithArgs(%1)
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.test)
  Ret 0
}