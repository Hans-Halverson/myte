type _object$test.Trait {unit*, fn[1]*}

type _object$test.ConcreteType1$test.Trait<Int> {test.ConcreteType1*, fn[1]*}

type test.ConcreteType1 {unit}

global fn[1] @_vtable$test.ConcreteType1$test.Trait<Int> = [@test.ConcreteType1.method]

func std.option.Option<Int>* @test.ConcreteType1.method(test.ConcreteType1* %0, int %1) {
  %2 := CallBuiltin std.option.Option<Int>::Some* myte_alloc(1)
  Store byte %2, 1
  %3 := GetPointer int, std.option.Option<Int>::Some* %2.2
  Store int %3, %1
  Ret %2
}

type _object$test.ConcreteType2$test.Trait<Bool> {test.ConcreteType2*, fn[1]*}

type test.ConcreteType2 {unit}

global fn[1] @_vtable$test.ConcreteType2$test.Trait<Bool> = [@test.ConcreteType2.method]

func std.option.Option<Bool>* @test.ConcreteType2.method(test.ConcreteType2* %4, bool %5) {
  %6 := CallBuiltin std.option.Option<Bool>::Some* myte_alloc(1)
  Store byte %6, 1
  %7 := GetPointer bool, std.option.Option<Bool>::Some* %6.1
  Store bool %7, %5
  Ret %6
}

type _object$test.GenericType<Int>$test.Trait<Int> {test.GenericType<Int>*, fn[1]*}

type _object$test.GenericType<Long>$test.Trait<Long> {test.GenericType<Long>*, fn[1]*}

type _object$test.GenericType<Unit>$test.Trait<Unit> {test.GenericType<Unit>*, fn[1]*}

type test.GenericType<Int> {int}

type test.GenericType<Long> {long}

type test.GenericType<Unit> {unit}

global fn[1] @_vtable$test.GenericType<Int>$test.Trait<Int> = [@test.GenericType.method<Int>]

global fn[1] @_vtable$test.GenericType<Long>$test.Trait<Long> = [@test.GenericType.method<Long>]

global fn[1] @_vtable$test.GenericType<Unit>$test.Trait<Unit> = [@test.GenericType.method<Unit>]

func std.option.Option<Int>* @test.GenericType.method<Int>(test.GenericType<Int>* %8, int %9) {
  %10 := CallBuiltin std.option.Option<Int>::Some* myte_alloc(1)
  Store byte %10, 1
  %11 := GetPointer int, std.option.Option<Int>::Some* %10.2
  Store int %11, %9
  Ret %10
}

func std.option.Option<Long>* @test.GenericType.method<Long>(test.GenericType<Long>* %12, long %13) {
  %14 := CallBuiltin std.option.Option<Long>::Some* myte_alloc(1)
  Store byte %14, 1
  %15 := GetPointer long, std.option.Option<Long>::Some* %14.2
  Store long %15, %13
  Ret %14
}

func std.option.Option<Unit>* @test.GenericType.method<Unit>(test.GenericType<Unit>* %16, unit %17) {
  %18 := CallBuiltin std.option.Option<Unit>::Some* myte_alloc(1)
  Store byte %18, 1
  %19 := GetPointer unit, std.option.Option<Unit>::Some* %18.1
  Store unit %19, %17
  Ret %18
}

func std.option.Option<Bool>* @test.callMethod<Bool>(_object$test.Trait* %20, bool %21) {
  %22 := GetPointer unit*, _object$test.Trait* %20.0
  %23 := Load unit* %22
  %24 := GetPointer fn[1]*, _object$test.Trait* %20.1
  %25 := Load fn[1]* %24
  %26 := GetPointer fn, fn* %25[int 0]
  %27 := Load fn %26
  %28 := Call std.option.Option<Bool>* %27(%23, %21)
  Ret %28
}

func std.option.Option<Int>* @test.callMethod<Int>(_object$test.Trait* %29, int %30) {
  %31 := GetPointer unit*, _object$test.Trait* %29.0
  %32 := Load unit* %31
  %33 := GetPointer fn[1]*, _object$test.Trait* %29.1
  %34 := Load fn[1]* %33
  %35 := GetPointer fn, fn* %34[int 0]
  %36 := Load fn %35
  %37 := Call std.option.Option<Int>* %36(%32, %30)
  Ret %37
}

func std.option.Option<Long>* @test.callMethod<Long>(_object$test.Trait* %38, long %39) {
  %40 := GetPointer unit*, _object$test.Trait* %38.0
  %41 := Load unit* %40
  %42 := GetPointer fn[1]*, _object$test.Trait* %38.1
  %43 := Load fn[1]* %42
  %44 := GetPointer fn, fn* %43[int 0]
  %45 := Load fn %44
  %46 := Call std.option.Option<Long>* %45(%41, %39)
  Ret %46
}

func std.option.Option<Unit>* @test.callMethod<Unit>(_object$test.Trait* %47, unit %48) {
  %49 := GetPointer unit*, _object$test.Trait* %47.0
  %50 := Load unit* %49
  %51 := GetPointer fn[1]*, _object$test.Trait* %47.1
  %52 := Load fn[1]* %51
  %53 := GetPointer fn, fn* %52[int 0]
  %54 := Load fn %53
  %55 := Call std.option.Option<Unit>* %54(%50, %48)
  Ret %55
}

func unit @test.testConcreteTypes() {
  %56 := CallBuiltin test.ConcreteType1* myte_alloc(1)
  %57 := GetPointer unit, test.ConcreteType1* %56.0
  Store unit %57, ()
  %58 := CallBuiltin _object$test.ConcreteType1$test.Trait<Int>* myte_alloc(1)
  %59 := GetPointer test.ConcreteType1*, _object$test.ConcreteType1$test.Trait<Int>* %58.0
  Store test.ConcreteType1* %59, %56
  %60 := GetPointer fn[1]*, _object$test.ConcreteType1$test.Trait<Int>* %58.1
  Store fn[1]* %60, @_vtable$test.ConcreteType1$test.Trait<Int>
  %61 := Call std.option.Option<Int>* @test.callMethod<Int>(%58, 1)
  %62 := CallBuiltin test.ConcreteType2* myte_alloc(1)
  %63 := GetPointer unit, test.ConcreteType2* %62.0
  Store unit %63, ()
  %64 := CallBuiltin _object$test.ConcreteType2$test.Trait<Bool>* myte_alloc(1)
  %65 := GetPointer test.ConcreteType2*, _object$test.ConcreteType2$test.Trait<Bool>* %64.0
  Store test.ConcreteType2* %65, %62
  %66 := GetPointer fn[1]*, _object$test.ConcreteType2$test.Trait<Bool>* %64.1
  Store fn[1]* %66, @_vtable$test.ConcreteType2$test.Trait<Bool>
  %67 := Call std.option.Option<Bool>* @test.callMethod<Bool>(%64, true)
  Ret
}

func unit @test.testGenericType() {
  %68 := CallBuiltin test.GenericType<Int>* myte_alloc(1)
  %69 := GetPointer int, test.GenericType<Int>* %68.0
  Store int %69, 1
  %70 := CallBuiltin _object$test.GenericType<Int>$test.Trait<Int>* myte_alloc(1)
  %71 := GetPointer test.GenericType<Int>*, _object$test.GenericType<Int>$test.Trait<Int>* %70.0
  Store test.GenericType<Int>* %71, %68
  %72 := GetPointer fn[1]*, _object$test.GenericType<Int>$test.Trait<Int>* %70.1
  Store fn[1]* %72, @_vtable$test.GenericType<Int>$test.Trait<Int>
  %73 := Call std.option.Option<Int>* @test.callMethod<Int>(%70, 1)
  %74 := CallBuiltin test.GenericType<Unit>* myte_alloc(1)
  %75 := GetPointer unit, test.GenericType<Unit>* %74.0
  Store unit %75, ()
  %76 := CallBuiltin _object$test.GenericType<Unit>$test.Trait<Unit>* myte_alloc(1)
  %77 := GetPointer test.GenericType<Unit>*, _object$test.GenericType<Unit>$test.Trait<Unit>* %76.0
  Store test.GenericType<Unit>* %77, %74
  %78 := GetPointer fn[1]*, _object$test.GenericType<Unit>$test.Trait<Unit>* %76.1
  Store fn[1]* %78, @_vtable$test.GenericType<Unit>$test.Trait<Unit>
  %79 := Call std.option.Option<Unit>* @test.callMethod<Unit>(%76, ())
  %80 := CallBuiltin test.GenericType<Long>* myte_alloc(1)
  %81 := GetPointer long, test.GenericType<Long>* %80.0
  Store long %81, 1
  %82 := CallBuiltin _object$test.GenericType<Long>$test.Trait<Long>* myte_alloc(1)
  %83 := GetPointer test.GenericType<Long>*, _object$test.GenericType<Long>$test.Trait<Long>* %82.0
  Store test.GenericType<Long>* %83, %80
  %84 := GetPointer fn[1]*, _object$test.GenericType<Long>$test.Trait<Long>* %82.1
  Store fn[1]* %84, @_vtable$test.GenericType<Long>$test.Trait<Long>
  %85 := Call std.option.Option<Long>* @test.callMethod<Long>(%82, 1)
  Ret
}

func unit @test.use<Function>(fn %86) {
  Ret
}

func int @test.main() {
  %87 := Call unit @test.use<Function>(@test.testConcreteTypes)
  %88 := Call unit @test.use<Function>(@test.testGenericType)
  Ret 0
}