type _ZeroSize {}

type _object$test.Trait {byte*, fn[1]*}

type _object$test.ConcreteType1$test.Trait<Int> {_ZeroSize*, fn[1]*}

global fn[1] @_vtable$test.ConcreteType1$test.Trait<Int> = [@test.ConcreteType1.method]

func std.option.Option<Int>* @test.ConcreteType1.method(_ZeroSize* %0, int %1) {
  %2 := CallBuiltin std.option.Option<Int>::Some* myte_alloc(1)
  Store byte %2, 1
  %3 := GetPointer int, std.option.Option<Int>::Some* %2.2
  Store int %3, %1
  Ret %2
}

type _object$test.ConcreteType2$test.Trait<Bool> {_ZeroSize*, fn[1]*}

global fn[1] @_vtable$test.ConcreteType2$test.Trait<Bool> = [@test.ConcreteType2.method]

func std.option.Option<Bool>* @test.ConcreteType2.method(_ZeroSize* %4, bool %5) {
  %6 := CallBuiltin std.option.Option<Bool>::Some* myte_alloc(1)
  Store byte %6, 1
  %7 := GetPointer bool, std.option.Option<Bool>::Some* %6.1
  Store bool %7, %5
  Ret %6
}

type _object$test.GenericType<Int>$test.Trait<Int> {test.GenericType<Int>*, fn[1]*}

type _object$test.GenericType<Long>$test.Trait<Long> {test.GenericType<Long>*, fn[1]*}

type _object$test.GenericType<Unit>$test.Trait<Unit> {_ZeroSize*, fn[1]*}

type test.GenericType<Int> {int}

type test.GenericType<Long> {long}

global fn[1] @_vtable$test.GenericType<Int>$test.Trait<Int> = [@test.GenericType.method<Int>]

global fn[1] @_vtable$test.GenericType<Long>$test.Trait<Long> = [@test.GenericType.method<Long>]

global fn[1] @_vtable$test.GenericType<Unit>$test.Trait<Unit> = [@test.GenericType.method<Unit>]

func std.option.Option<Int>* @test.GenericType.method<Int>(test.GenericType<Int>* %8, int %9) {
  %10 := CallBuiltin std.option.Option<Int>::Some* myte_alloc(1)
  Store byte %10, 1
  %11 := GetPointer int, std.option.Option<Int>::Some* %10.2
  Store int %11, %9
  Ret %10
}

func std.option.Option<Long>* @test.GenericType.method<Long>(test.GenericType<Long>* %12, long %13) {
  %14 := CallBuiltin std.option.Option<Long>::Some* myte_alloc(1)
  Store byte %14, 1
  %15 := GetPointer long, std.option.Option<Long>::Some* %14.2
  Store long %15, %13
  Ret %14
}

func std.option.Option<Unit>* @test.GenericType.method<Unit>(_ZeroSize* %16) {
  %17 := CallBuiltin std.option.Option<Unit>::Some* myte_alloc(1)
  Store byte %17, 1
  Ret %17
}

func std.option.Option<Bool>* @test.callMethod<Bool>(_object$test.Trait* %18, bool %19) {
  %20 := GetPointer byte*, _object$test.Trait* %18.0
  %21 := Load byte* %20
  %22 := GetPointer fn[1]*, _object$test.Trait* %18.1
  %23 := Load fn[1]* %22
  %24 := GetPointer fn, fn* %23[int 0]
  %25 := Load fn %24
  %26 := Call std.option.Option<Bool>* %25(%21, %19)
  Ret %26
}

func std.option.Option<Int>* @test.callMethod<Int>(_object$test.Trait* %27, int %28) {
  %29 := GetPointer byte*, _object$test.Trait* %27.0
  %30 := Load byte* %29
  %31 := GetPointer fn[1]*, _object$test.Trait* %27.1
  %32 := Load fn[1]* %31
  %33 := GetPointer fn, fn* %32[int 0]
  %34 := Load fn %33
  %35 := Call std.option.Option<Int>* %34(%30, %28)
  Ret %35
}

func std.option.Option<Long>* @test.callMethod<Long>(_object$test.Trait* %36, long %37) {
  %38 := GetPointer byte*, _object$test.Trait* %36.0
  %39 := Load byte* %38
  %40 := GetPointer fn[1]*, _object$test.Trait* %36.1
  %41 := Load fn[1]* %40
  %42 := GetPointer fn, fn* %41[int 0]
  %43 := Load fn %42
  %44 := Call std.option.Option<Long>* %43(%39, %37)
  Ret %44
}

func std.option.Option<Unit>* @test.callMethod<Unit>(_object$test.Trait* %45) {
  %46 := GetPointer byte*, _object$test.Trait* %45.0
  %47 := Load byte* %46
  %48 := GetPointer fn[1]*, _object$test.Trait* %45.1
  %49 := Load fn[1]* %48
  %50 := GetPointer fn, fn* %49[int 0]
  %51 := Load fn %50
  %52 := Call std.option.Option<Unit>* %51(%47)
  Ret %52
}

func void @test.testConcreteTypes() {
  %53 := CallBuiltin _object$test.ConcreteType1$test.Trait<Int>* myte_alloc(1)
  %54 := GetPointer fn[1]*, _object$test.ConcreteType1$test.Trait<Int>* %53.1
  Store fn[1]* %54, @_vtable$test.ConcreteType1$test.Trait<Int>
  %55 := Call std.option.Option<Int>* @test.callMethod<Int>(%53, 1)
  %56 := CallBuiltin _object$test.ConcreteType2$test.Trait<Bool>* myte_alloc(1)
  %57 := GetPointer fn[1]*, _object$test.ConcreteType2$test.Trait<Bool>* %56.1
  Store fn[1]* %57, @_vtable$test.ConcreteType2$test.Trait<Bool>
  %58 := Call std.option.Option<Bool>* @test.callMethod<Bool>(%56, true)
  Ret
}

func void @test.testGenericType() {
  %59 := CallBuiltin test.GenericType<Int>* myte_alloc(1)
  %60 := GetPointer int, test.GenericType<Int>* %59.0
  Store int %60, 1
  %61 := CallBuiltin _object$test.GenericType<Int>$test.Trait<Int>* myte_alloc(1)
  %62 := GetPointer test.GenericType<Int>*, _object$test.GenericType<Int>$test.Trait<Int>* %61.0
  Store test.GenericType<Int>* %62, %59
  %63 := GetPointer fn[1]*, _object$test.GenericType<Int>$test.Trait<Int>* %61.1
  Store fn[1]* %63, @_vtable$test.GenericType<Int>$test.Trait<Int>
  %64 := Call std.option.Option<Int>* @test.callMethod<Int>(%61, 1)
  %65 := CallBuiltin _object$test.GenericType<Unit>$test.Trait<Unit>* myte_alloc(1)
  %66 := GetPointer fn[1]*, _object$test.GenericType<Unit>$test.Trait<Unit>* %65.1
  Store fn[1]* %66, @_vtable$test.GenericType<Unit>$test.Trait<Unit>
  %67 := Call std.option.Option<Unit>* @test.callMethod<Unit>(%65)
  %68 := CallBuiltin test.GenericType<Long>* myte_alloc(1)
  %69 := GetPointer long, test.GenericType<Long>* %68.0
  Store long %69, 1
  %70 := CallBuiltin _object$test.GenericType<Long>$test.Trait<Long>* myte_alloc(1)
  %71 := GetPointer test.GenericType<Long>*, _object$test.GenericType<Long>$test.Trait<Long>* %70.0
  Store test.GenericType<Long>* %71, %68
  %72 := GetPointer fn[1]*, _object$test.GenericType<Long>$test.Trait<Long>* %70.1
  Store fn[1]* %72, @_vtable$test.GenericType<Long>$test.Trait<Long>
  %73 := Call std.option.Option<Long>* @test.callMethod<Long>(%70, 1)
  Ret
}

func void @test.use<Function>(fn %74) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.testConcreteTypes)
  Call void @test.use<Function>(@test.testGenericType)
  Ret 0
}