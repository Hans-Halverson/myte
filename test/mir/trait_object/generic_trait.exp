type _ZeroSize {}

type _object$test.Trait {byte*, fn[1]*}

type _object$test.ConcreteType1$test.Trait<Int> {_ZeroSize*, fn[1]*}

global fn[1] @_vtable$test.ConcreteType1$test.Trait<Int> = [@test.ConcreteType1.method]

func std.option.Option<Int>* @test.ConcreteType1.method(_ZeroSize* %0, int %1) {
  %2 := CallBuiltin std.option.Option<Int>::Some* myte_alloc(1)
  Store byte %2, 1
  %3 := GetPointer int, std.option.Option<Int>::Some* %2.2
  Store int %3, %1
  Ret %2
}

type _object$test.ConcreteType2$test.Trait<Bool> {_ZeroSize*, fn[1]*}

global fn[1] @_vtable$test.ConcreteType2$test.Trait<Bool> = [@test.ConcreteType2.method]

func std.option.Option<Bool>* @test.ConcreteType2.method(_ZeroSize* %0, long %1) {
  %2 := CallBuiltin std.option.Option<Bool>::Some* myte_alloc(1)
  Store byte %2, 1
  %3 := GetPointer long, std.option.Option<Bool>::Some* %2.2
  Store long %3, %1
  Ret %2
}

type _object$test.GenericType<Int>$test.Trait<Int> {test.GenericType<Int>*, fn[1]*}

type _object$test.GenericType<Long>$test.Trait<Long> {test.GenericType<Long>*, fn[1]*}

type _object$test.GenericType<Unit>$test.Trait<Unit> {_ZeroSize*, fn[1]*}

type test.GenericType<Int> {int}

type test.GenericType<Long> {long}

global fn[1] @_vtable$test.GenericType<Int>$test.Trait<Int> = [@test.GenericType.method<Int>]

global fn[1] @_vtable$test.GenericType<Long>$test.Trait<Long> = [@test.GenericType.method<Long>]

global fn[1] @_vtable$test.GenericType<Unit>$test.Trait<Unit> = [@test.GenericType.method<Unit>]

func std.option.Option<Int>* @test.GenericType.method<Int>(test.GenericType<Int>* %0, int %1) {
  %2 := CallBuiltin std.option.Option<Int>::Some* myte_alloc(1)
  Store byte %2, 1
  %3 := GetPointer int, std.option.Option<Int>::Some* %2.2
  Store int %3, %1
  Ret %2
}

func std.option.Option<Long>* @test.GenericType.method<Long>(test.GenericType<Long>* %0, long %1) {
  %2 := CallBuiltin std.option.Option<Long>::Some* myte_alloc(1)
  Store byte %2, 1
  %3 := GetPointer long, std.option.Option<Long>::Some* %2.2
  Store long %3, %1
  Ret %2
}

func std.option.Option<Unit>* @test.GenericType.method<Unit>(_ZeroSize* %0) {
  %1 := CallBuiltin std.option.Option<Unit>::Some* myte_alloc(1)
  Store byte %1, 1
  Ret %1
}

func std.option.Option<Bool>* @test.callMethod<Bool>(_object$test.Trait* %0, long %1) {
  %2 := GetPointer byte*, _object$test.Trait* %0.0
  %3 := Load byte* %2
  %4 := GetPointer fn[1]*, _object$test.Trait* %0.1
  %5 := Load fn[1]* %4
  %6 := GetPointer fn, fn* %5[int 0]
  %7 := Load fn %6
  %8 := Call std.option.Option<Bool>* %7(%3, %1)
  Ret %8
}

func std.option.Option<Int>* @test.callMethod<Int>(_object$test.Trait* %0, int %1) {
  %2 := GetPointer byte*, _object$test.Trait* %0.0
  %3 := Load byte* %2
  %4 := GetPointer fn[1]*, _object$test.Trait* %0.1
  %5 := Load fn[1]* %4
  %6 := GetPointer fn, fn* %5[int 0]
  %7 := Load fn %6
  %8 := Call std.option.Option<Int>* %7(%3, %1)
  Ret %8
}

func std.option.Option<Long>* @test.callMethod<Long>(_object$test.Trait* %0, long %1) {
  %2 := GetPointer byte*, _object$test.Trait* %0.0
  %3 := Load byte* %2
  %4 := GetPointer fn[1]*, _object$test.Trait* %0.1
  %5 := Load fn[1]* %4
  %6 := GetPointer fn, fn* %5[int 0]
  %7 := Load fn %6
  %8 := Call std.option.Option<Long>* %7(%3, %1)
  Ret %8
}

func std.option.Option<Unit>* @test.callMethod<Unit>(_object$test.Trait* %0) {
  %1 := GetPointer byte*, _object$test.Trait* %0.0
  %2 := Load byte* %1
  %3 := GetPointer fn[1]*, _object$test.Trait* %0.1
  %4 := Load fn[1]* %3
  %5 := GetPointer fn, fn* %4[int 0]
  %6 := Load fn %5
  %7 := Call std.option.Option<Unit>* %6(%2)
  Ret %7
}

func void @test.testConcreteTypes() {
  %0 := CallBuiltin _object$test.ConcreteType1$test.Trait<Int>* myte_alloc(1)
  %1 := GetPointer fn[1]*, _object$test.ConcreteType1$test.Trait<Int>* %0.1
  Store fn[1]* %1, @_vtable$test.ConcreteType1$test.Trait<Int>
  %2 := Call std.option.Option<Int>* @test.callMethod<Int>(%0, 1)
  %3 := CallBuiltin _object$test.ConcreteType2$test.Trait<Bool>* myte_alloc(1)
  %4 := GetPointer fn[1]*, _object$test.ConcreteType2$test.Trait<Bool>* %3.1
  Store fn[1]* %4, @_vtable$test.ConcreteType2$test.Trait<Bool>
  %5 := Call std.option.Option<Bool>* @test.callMethod<Bool>(%3, 3)
  Ret
}

func void @test.testGenericType() {
  %0 := CallBuiltin test.GenericType<Int>* myte_alloc(1)
  %1 := GetPointer int, test.GenericType<Int>* %0.0
  Store int %1, 1
  %2 := CallBuiltin _object$test.GenericType<Int>$test.Trait<Int>* myte_alloc(1)
  %3 := GetPointer test.GenericType<Int>*, _object$test.GenericType<Int>$test.Trait<Int>* %2.0
  Store test.GenericType<Int>* %3, %0
  %4 := GetPointer fn[1]*, _object$test.GenericType<Int>$test.Trait<Int>* %2.1
  Store fn[1]* %4, @_vtable$test.GenericType<Int>$test.Trait<Int>
  %5 := Call std.option.Option<Int>* @test.callMethod<Int>(%2, 1)
  %6 := CallBuiltin _object$test.GenericType<Unit>$test.Trait<Unit>* myte_alloc(1)
  %7 := GetPointer fn[1]*, _object$test.GenericType<Unit>$test.Trait<Unit>* %6.1
  Store fn[1]* %7, @_vtable$test.GenericType<Unit>$test.Trait<Unit>
  %8 := Call std.option.Option<Unit>* @test.callMethod<Unit>(%6)
  %9 := CallBuiltin test.GenericType<Long>* myte_alloc(1)
  %10 := GetPointer long, test.GenericType<Long>* %9.0
  Store long %10, 1
  %11 := CallBuiltin _object$test.GenericType<Long>$test.Trait<Long>* myte_alloc(1)
  %12 := GetPointer test.GenericType<Long>*, _object$test.GenericType<Long>$test.Trait<Long>* %11.0
  Store test.GenericType<Long>* %12, %9
  %13 := GetPointer fn[1]*, _object$test.GenericType<Long>$test.Trait<Long>* %11.1
  Store fn[1]* %13, @_vtable$test.GenericType<Long>$test.Trait<Long>
  %14 := Call std.option.Option<Long>* @test.callMethod<Long>(%11, 1)
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.testConcreteTypes)
  Call void @test.use<Function>(@test.testGenericType)
  Ret 0
}