type test.Rec1 {byte, byte[3], int, long}

func void @test.singleStore() {
  Call void @test.use<Int>(1)
  Call void @test.use<Int>(1)
  Call void @test.use<Int>(1)
  Call void @test.use<Long>(2)
  Call void @test.use<Byte>(3)
  Ret
}

func void @test.multipleStores() {
  Call void @test.use<Int>(1)
  Call void @test.use<Int>(4)
  branch true, @0, @1
label @0:
  Call void @test.use<Int>(5)
  continue @2
label @1:
  Call void @test.use<Int>(6)
  continue @2
label @2:
  Ret
}

func void @test.testInsertPhis() {
  Call void @test.use<Int>(1)
  branch true, @0, @1
label @0:
  continue @1
label @1:
  %0 := Phi int @test.testInsertPhis:1, @0:4
  Call void @test.use<Int>(%0)
  Ret
}

func void @test.use<Byte>(byte %0) {
  Ret
}

func void @test.use<Int>(int %0) {
  Ret
}

func void @test.use<Long>(long %0) {
  Ret
}

func int @test.main() {
  Ret 0
}