func void @test.test1() {
  %0 := Eq long 3, 3
  branch %0, @0, @3
label @0:
  %1 := Eq long 1, 3
  branch %1, @1, @2
label @1:
  continue @2
label @2:
  %2 := Phi int @0:1, @1:3
  %3 := Phi int @0:2, @1:4
  continue @6
label @3:
  %4 := Eq long 1, 3
  branch %4, @4, @5
label @4:
  continue @5
label @5:
  %5 := Phi int @3:2, @4:5
  continue @6
label @6:
  %6 := Phi int @2:%2, @5:1
  %7 := Phi int @2:%3, @5:%5
  %8 := Neg int %6
  %9 := Neg int %7
  Ret
}

func void @test.test2() {
  %0 := Eq long 3, 3
  branch %0, @0, @3
label @0:
  %1 := Eq long 1, 3
  branch %1, @1, @2
label @1:
  continue @2
label @2:
  %2 := Phi int @0:1, @1:3
  %3 := Phi int @0:2, @1:4
  %4 := Neg int %3
  continue @6
label @3:
  %5 := Eq long 1, 3
  branch %5, @4, @5
label @4:
  continue @5
label @5:
  %6 := Phi int @3:2, @4:5
  continue @6
label @6:
  %7 := Phi int @2:%2, @5:1
  %8 := Phi int @2:%3, @5:%6
  %9 := Neg int %7
  %10 := Neg int %8
  Ret
}

func void @test.test3() {
  %0 := Eq long 3, 3
  branch %0, @0, @3
label @0:
  %1 := Eq long 1, 3
  branch %1, @1, @2
label @1:
  continue @2
label @2:
  %2 := Phi int @0:1, @1:3
  %3 := Phi int @0:2, @1:4
  continue @6
label @3:
  %4 := Eq long 1, 3
  branch %4, @4, @5
label @4:
  continue @5
label @5:
  %5 := Phi int @3:2, @4:5
  %6 := Neg int %5
  continue @6
label @6:
  %7 := Phi int @2:%2, @5:1
  %8 := Phi int @2:%3, @5:%5
  %9 := Neg int %7
  %10 := Neg int %8
  Ret
}

func void @test.test4() {
  %0 := Eq long 3, 3
  branch %0, @0, @3
label @0:
  %1 := Eq long 1, 3
  branch %1, @1, @2
label @1:
  continue @2
label @2:
  %2 := Phi int @0:1, @1:3
  %3 := Phi int @0:2, @1:4
  %4 := Neg int %3
  continue @6
label @3:
  %5 := Eq long 1, 3
  branch %5, @4, @5
label @4:
  continue @5
label @5:
  %6 := Phi int @3:2, @4:5
  %7 := Neg int %6
  continue @6
label @6:
  %8 := Phi int @2:%2, @5:1
  %9 := Phi int @2:%3, @5:%6
  %10 := Neg int %8
  %11 := Neg int %9
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.test1)
  Call void @test.use<Function>(@test.test2)
  Call void @test.use<Function>(@test.test3)
  Call void @test.use<Function>(@test.test4)
  Ret 0
}