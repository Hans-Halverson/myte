func unit @test.inexhaustiveContinue() {
  continue @0
label @0:
  %0 := Phi int @test.inexhaustiveContinue:1, @2:3, @3:4
  branch false, @1, @4
label @1:
  %1 := Gt int %0, 2
  branch %1, @2, @3
label @2:
  continue @0
label @3:
  continue @0
label @4:
  %2 := Neg int %0
  Ret
}

func unit @test.inexhaustiveBreak() {
  continue @5
label @5:
  %3 := Phi int @test.inexhaustiveBreak:1, @7:4
  branch false, @6, @9
label @6:
  %4 := Gt int %3, 2
  branch %4, @8, @7
label @7:
  continue @5
label @8:
  continue @9
label @9:
  %5 := Phi int @5:%3, @8:3
  %6 := Neg int %5
  Ret
}

func unit @test.exhaustiveContinues() {
  continue @10
label @10:
  %7 := Phi int @test.exhaustiveContinues:1, @12:2, @13:3
  branch false, @11, @14
label @11:
  %8 := Gt int %7, 1
  branch %8, @12, @13
label @12:
  continue @10
label @13:
  continue @10
label @14:
  %9 := Neg int %7
  Ret
}

func unit @test.exhaustiveBreaks() {
  branch false, @15, @18
label @15:
  %10 := Gt int 1, 1
  branch %10, @16, @17
label @16:
  continue @18
label @17:
  continue @18
label @18:
  %11 := Phi int @test.exhaustiveBreaks:1, @16:2, @17:3
  %12 := Neg int %11
  Ret
}

func unit @test.inexhaustiveBreakAndContinue() {
  continue @19
label @19:
  %13 := Phi int @test.inexhaustiveBreakAndContinue:1, @23:4, @22:3
  branch false, @20, @25
label @20:
  %14 := Gt int %13, 1
  branch %14, @24, @21
label @21:
  branch true, @22, @23
label @22:
  continue @19
label @23:
  continue @19
label @24:
  continue @25
label @25:
  %15 := Phi int @19:%13, @24:2
  %16 := Neg int %15
  Ret
}

func unit @test.exhaustiveBreakAndContinue() {
  continue @26
label @26:
  %17 := Phi int @test.exhaustiveBreakAndContinue:1, @28:3
  branch false, @27, @30
label @27:
  %18 := Gt int %17, 1
  branch %18, @29, @28
label @28:
  continue @26
label @29:
  continue @30
label @30:
  %19 := Phi int @26:%17, @29:2
  %20 := Neg int %19
  Ret
}

func int @test.main() {
  Ret 0
}