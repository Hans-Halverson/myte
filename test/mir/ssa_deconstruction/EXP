func unit @_init() {
  Ret
}

func int @move_in_previous_block.main() {
  branch true, @0, @1
label @0:
  %0 := Mov int 2
  continue @2
label @1:
  %0 := Mov int 3
  continue @2
label @2:
  %1 := Neg int %0
  Ret 0
}

func unit @move_in_previous_block.multiple() {
  branch true, @3, @4
label @3:
  %2 := Mov int 3
  %3 := Mov int 4
  continue @5
label @4:
  %2 := Mov int 5
  %3 := Mov int 6
  continue @5
label @5:
  %4 := Add int %2, %3
  Ret
}

func unit @split_incoming_edge.inexhaustiveIf() {
  branch true, @6, @7
label @6:
  %5 := Mov int 2
  continue @8
label @7:
  %5 := Mov int 1
  continue @8
label @8:
  %6 := Neg int %5
  Ret
}

func unit @split_incoming_edge.loop() {
  %7 := Mov int 1
  continue @9
label @9:
  branch true, @10, @13
label @10:
  %8 := Neg int %7
  branch false, @11, @12
label @11:
  %7 := Mov int 2
  continue @9
label @12:
  %9 := Mov int 3
  continue @14
label @13:
  %9 := Mov int %7
  continue @14
label @14:
  %10 := Neg int %9
  Ret
}

func unit @split_incoming_edge.multiple() {
  branch true, @15, @16
label @15:
  %11 := Mov int 3
  %12 := Mov int 4
  continue @17
label @16:
  %11 := Mov int 1
  %12 := Mov int 2
  continue @17
label @17:
  %13 := Add int %11, %12
  Ret
}