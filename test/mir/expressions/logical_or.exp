func long @test.testConstants1() {
  %0 := Eq long 3, 3
  Ret 3
}

func long @test.testConstants2() {
  %0 := Eq long 3, 3
  branch %0, @0, @1
label @0:
  continue @1
label @1:
  %1 := Phi long @test.testConstants2:1, @0:3
  Ret %1
}

func long @test.testConstants3() {
  %0 := Eq long 1, 3
  Ret 3
}

func long @test.testConstants4() {
  %0 := Eq long 1, 3
  branch %0, @0, @1
label @0:
  continue @1
label @1:
  %1 := Phi long @test.testConstants4:1, @0:3
  Ret %1
}

func long @test.testConstant1(long %0) {
  %1 := Eq long %0, 3
  Ret 3
}

func long @test.testConstant2(long %0) {
  %1 := Eq long %0, 3
  branch %1, @0, @1
label @0:
  continue @1
label @1:
  %2 := Phi long @test.testConstant2:1, @0:3
  Ret %2
}

func long @test.testConstant3(long %0) {
  %1 := Eq long 3, 3
  branch %1, @0, @1
label @0:
  continue @1
label @1:
  %2 := Phi long @test.testConstant3:%0, @0:3
  Ret %2
}

func long @test.testConstant4(long %0) {
  %1 := Eq long 1, 3
  branch %1, @0, @1
label @0:
  continue @1
label @1:
  %2 := Phi long @test.testConstant4:%0, @0:3
  Ret %2
}

func long @test.testVariables(long %0, long %1) {
  %2 := Eq long %0, 3
  branch %2, @0, @1
label @0:
  continue @1
label @1:
  %3 := Phi long @test.testVariables:%1, @0:3
  Ret %3
}

func void @test.use<Function>(fn %0) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.testConstants1)
  Call void @test.use<Function>(@test.testConstants2)
  Call void @test.use<Function>(@test.testConstants3)
  Call void @test.use<Function>(@test.testConstants4)
  Call void @test.use<Function>(@test.testConstant1)
  Call void @test.use<Function>(@test.testConstant2)
  Call void @test.use<Function>(@test.testConstant3)
  Call void @test.use<Function>(@test.testConstant4)
  Call void @test.use<Function>(@test.testVariables)
  Ret 0
}