func void @test.ints() {
  %0 := Add int 1, 2
  %1 := Sub int 1, 2
  %2 := Mul int 1, 2
  %3 := Div int 1, 2
  %4 := Rem int 1, 2
  %5 := And int, 1 2
  %6 := Or int, 1 2
  %7 := Xor int, 1 2
  %8 := Shl int, 1 2
  %9 := Shr int, 1 2
  %10 := Shrl int, 1 2
  %11 := Lt int 1, 2
  %12 := LtEq int 1, 2
  %13 := Gt int 1, 2
  %14 := GtEq int 1, 2
  Ret
}

func void @test.bytes(byte %0, byte %1) {
  %2 := Add byte %0, %1
  %3 := Sub byte %0, %1
  %4 := Mul byte %0, %1
  %5 := Div byte %0, %1
  %6 := Rem byte %0, %1
  %7 := And byte, %0 %1
  %8 := Or byte, %0 %1
  %9 := Xor byte, %0 %1
  %10 := Shl byte, %0 %1
  %11 := Shr byte, %0 %1
  %12 := Shrl byte, %0 %1
  %13 := Lt byte %0, %1
  %14 := LtEq byte %0, %1
  %15 := Gt byte %0, %1
  %16 := GtEq byte %0, %1
  Ret
}

func void @test.longs(long %0, long %1) {
  %2 := Add long %0, %1
  %3 := Sub long %0, %1
  %4 := Mul long %0, %1
  %5 := Div long %0, %1
  %6 := Rem long %0, %1
  %7 := And long, %0 %1
  %8 := Or long, %0 %1
  %9 := Xor long, %0 %1
  %10 := Shl long, %0 %1
  %11 := Shr long, %0 %1
  %12 := Shrl long, %0 %1
  %13 := Lt long %0, %1
  %14 := LtEq long %0, %1
  %15 := Gt long %0, %1
  %16 := GtEq long %0, %1
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.ints)
  Call void @test.use<Function>(@test.bytes)
  Call void @test.use<Function>(@test.longs)
  Ret 0
}