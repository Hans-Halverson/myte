func unit @test.ints() {
  %0 := Add int 1, 2
  %1 := Sub int 1, 2
  %2 := Mul int 1, 2
  %3 := Div int 1, 2
  %4 := Rem int 1, 2
  %5 := BitAnd int, 1 2
  %6 := BitOr int, 1 2
  %7 := BitXor int, 1 2
  %8 := Shl int, 1 2
  %9 := Shr int, 1 2
  %10 := Shrl int, 1 2
  %11 := Lt int 1, 2
  %12 := LtEq int 1, 2
  %13 := Gt int 1, 2
  %14 := GtEq int 1, 2
  Ret
}

func unit @test.bytes(byte %15, byte %16) {
  %17 := Add byte %15, %16
  %18 := Sub byte %15, %16
  %19 := Mul byte %15, %16
  %20 := Div byte %15, %16
  %21 := Rem byte %15, %16
  %22 := BitAnd byte, %15 %16
  %23 := BitOr byte, %15 %16
  %24 := BitXor byte, %15 %16
  %25 := Shl byte, %15 %16
  %26 := Shr byte, %15 %16
  %27 := Shrl byte, %15 %16
  %28 := Lt byte %15, %16
  %29 := LtEq byte %15, %16
  %30 := Gt byte %15, %16
  %31 := GtEq byte %15, %16
  Ret
}

func unit @test.longs(long %32, long %33) {
  %34 := Add long %32, %33
  %35 := Sub long %32, %33
  %36 := Mul long %32, %33
  %37 := Div long %32, %33
  %38 := Rem long %32, %33
  %39 := BitAnd long, %32 %33
  %40 := BitOr long, %32 %33
  %41 := BitXor long, %32 %33
  %42 := Shl long, %32 %33
  %43 := Shr long, %32 %33
  %44 := Shrl long, %32 %33
  %45 := Lt long %32, %33
  %46 := LtEq long %32, %33
  %47 := Gt long %32, %33
  %48 := GtEq long %32, %33
  Ret
}

func int @test.main() {
  Ret 0
}