func bool @test.bool() {
  Ret true
}

func int @test.testSimpleTernary() {
  %0 := Call bool @test.bool()
  branch %0, @0, @1
label @0:
  continue @2
label @1:
  continue @2
label @2:
  %1 := Phi int @0:1, @1:2
  Ret %1
}

func int @test.testTernaryWithExpressions(int %2, int %3) {
  %4 := Call bool @test.bool()
  branch %4, @3, @4
label @3:
  %5 := Add int %2, %3
  continue @5
label @4:
  %6 := Mul int %2, %3
  %7 := Add int %6, %2
  continue @5
label @5:
  %8 := Phi int @3:%5, @4:%7
  Ret %8
}

func int @test.testNestedTernary() {
  %9 := Call bool @test.bool()
  branch %9, @6, @10
label @6:
  %10 := Call bool @test.bool()
  branch %10, @7, @8
label @7:
  continue @9
label @8:
  continue @9
label @9:
  %11 := Phi int @7:1, @8:2
  continue @14
label @10:
  %12 := Call bool @test.bool()
  branch %12, @11, @12
label @11:
  continue @13
label @12:
  continue @13
label @13:
  %13 := Phi int @11:3, @12:4
  continue @14
label @14:
  %14 := Phi int @9:%11, @13:%13
  Ret %14
}

func int @test.main() {
  Ret 0
}