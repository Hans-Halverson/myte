func std.result.Result<Int,Bool>* @test.testUnwrapResult(std.result.Result<Int,Bool>* %0) {
  %1 := Cast std.result.Result<Int,Bool>* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @1
label @0:
  %4 := Cast std.result.Result<Int,Bool>* %0 to std.result.Result<Int,Bool>::Ok*
  %5 := GetPointer int, std.result.Result<Int,Bool>::Ok* %4.2
  %6 := Load int %5
  Call void @test.use<Int>(%6)
  %7 := Call std.result.Result<Int,Bool>::Ok* myte.builtin.alloc(1)
  %8 := Cast std.result.Result<Int,Bool>::Ok* %7 to byte*
  Store byte %8, 0
  %9 := GetPointer int, std.result.Result<Int,Bool>::Ok* %7.2
  Store int %9, 1
  Ret %7
label @1:
  %10 := Cast std.result.Result<Int,Bool>* %0 to std.result.Result<Int,Bool>::Error*
  %11 := GetPointer bool, std.result.Result<Int,Bool>::Error* %10.1
  %12 := Load bool %11
  %13 := Call std.result.Result<Int,Bool>::Error* myte.builtin.alloc(1)
  %14 := Cast std.result.Result<Int,Bool>::Error* %13 to byte*
  Store byte %14, 1
  %15 := GetPointer bool, std.result.Result<Int,Bool>::Error* %13.1
  Store bool %15, %12
  Ret %13
}

func std.result.Result<Long,Bool>* @test.testUnwrapResultDifferentType(std.result.Result<Int,Bool>* %0) {
  %1 := Cast std.result.Result<Int,Bool>* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @1
label @0:
  %4 := Cast std.result.Result<Int,Bool>* %0 to std.result.Result<Int,Bool>::Ok*
  %5 := GetPointer int, std.result.Result<Int,Bool>::Ok* %4.2
  %6 := Load int %5
  Call void @test.use<Int>(%6)
  %7 := Call std.result.Result<Long,Bool>::Ok* myte.builtin.alloc(1)
  %8 := Cast std.result.Result<Long,Bool>::Ok* %7 to byte*
  Store byte %8, 0
  %9 := GetPointer long, std.result.Result<Long,Bool>::Ok* %7.2
  Store long %9, 1
  Ret %7
label @1:
  %10 := Cast std.result.Result<Int,Bool>* %0 to std.result.Result<Int,Bool>::Error*
  %11 := GetPointer bool, std.result.Result<Int,Bool>::Error* %10.1
  %12 := Load bool %11
  %13 := Call std.result.Result<Long,Bool>::Error* myte.builtin.alloc(1)
  %14 := Cast std.result.Result<Long,Bool>::Error* %13 to byte*
  Store byte %14, 1
  %15 := GetPointer bool, std.result.Result<Long,Bool>::Error* %13.1
  Store bool %15, %12
  Ret %13
}

func std.result.Result<Int,Bool>* @test.testDoubleUnwrap(std.result.Result<Result<Int,Bool>,Bool>* %0) {
  %1 := Cast std.result.Result<Result<Int,Bool>,Bool>* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @3
label @0:
  %4 := Cast std.result.Result<Result<Int,Bool>,Bool>* %0 to std.result.Result<Result<Int,Bool>,Bool>::Ok*
  %5 := GetPointer std.result.Result<Int,Bool>*, std.result.Result<Result<Int,Bool>,Bool>::Ok* %4.2
  %6 := Load std.result.Result<Int,Bool>* %5
  %7 := Cast std.result.Result<Int,Bool>* %6 to byte*
  %8 := Load byte %7
  %9 := Eq byte %8, 0
  branch %9, @1, @2
label @1:
  %10 := Cast std.result.Result<Int,Bool>* %6 to std.result.Result<Int,Bool>::Ok*
  %11 := GetPointer int, std.result.Result<Int,Bool>::Ok* %10.2
  %12 := Load int %11
  Call void @test.use<Int>(%12)
  %13 := Call std.result.Result<Int,Bool>::Ok* myte.builtin.alloc(1)
  %14 := Cast std.result.Result<Int,Bool>::Ok* %13 to byte*
  Store byte %14, 0
  %15 := GetPointer int, std.result.Result<Int,Bool>::Ok* %13.2
  Store int %15, 1
  Ret %13
label @2:
  %16 := Cast std.result.Result<Int,Bool>* %6 to std.result.Result<Int,Bool>::Error*
  %17 := GetPointer bool, std.result.Result<Int,Bool>::Error* %16.1
  %18 := Load bool %17
  %19 := Call std.result.Result<Int,Bool>::Error* myte.builtin.alloc(1)
  %20 := Cast std.result.Result<Int,Bool>::Error* %19 to byte*
  Store byte %20, 1
  %21 := GetPointer bool, std.result.Result<Int,Bool>::Error* %19.1
  Store bool %21, %18
  Ret %19
label @3:
  %22 := Cast std.result.Result<Result<Int,Bool>,Bool>* %0 to std.result.Result<Result<Int,Bool>,Bool>::Error*
  %23 := GetPointer bool, std.result.Result<Result<Int,Bool>,Bool>::Error* %22.1
  %24 := Load bool %23
  %25 := Call std.result.Result<Int,Bool>::Error* myte.builtin.alloc(1)
  %26 := Cast std.result.Result<Int,Bool>::Error* %25 to byte*
  Store byte %26, 1
  %27 := GetPointer bool, std.result.Result<Int,Bool>::Error* %25.1
  Store bool %27, %24
  Ret %25
}

func std.result.Result<Int,Bool>* @test.testZeroSizeOkUnwrap(std.result.Result<test.ZeroSize,Bool>* %0) {
  %1 := Cast std.result.Result<test.ZeroSize,Bool>* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @1
label @0:
  Call void @test.use<test.ZeroSize>()
  %4 := Call std.result.Result<Int,Bool>::Ok* myte.builtin.alloc(1)
  %5 := Cast std.result.Result<Int,Bool>::Ok* %4 to byte*
  Store byte %5, 0
  %6 := GetPointer int, std.result.Result<Int,Bool>::Ok* %4.2
  Store int %6, 1
  Ret %4
label @1:
  %7 := Cast std.result.Result<test.ZeroSize,Bool>* %0 to std.result.Result<test.ZeroSize,Bool>::Error*
  %8 := GetPointer bool, std.result.Result<test.ZeroSize,Bool>::Error* %7.1
  %9 := Load bool %8
  %10 := Call std.result.Result<Int,Bool>::Error* myte.builtin.alloc(1)
  %11 := Cast std.result.Result<Int,Bool>::Error* %10 to byte*
  Store byte %11, 1
  %12 := GetPointer bool, std.result.Result<Int,Bool>::Error* %10.1
  Store bool %12, %9
  Ret %10
}

func std.result.Result<Int,test.ZeroSize>* @test.testZeroSizeResultUnwrap(std.result.Result<Bool,test.ZeroSize>* %0) {
  %1 := Cast std.result.Result<Bool,test.ZeroSize>* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @1
label @0:
  %4 := Cast std.result.Result<Bool,test.ZeroSize>* %0 to std.result.Result<Bool,test.ZeroSize>::Ok*
  %5 := GetPointer bool, std.result.Result<Bool,test.ZeroSize>::Ok* %4.1
  %6 := Load bool %5
  Call void @test.use<Bool>(%6)
  %7 := Call std.result.Result<Int,test.ZeroSize>::Ok* myte.builtin.alloc(1)
  %8 := Cast std.result.Result<Int,test.ZeroSize>::Ok* %7 to byte*
  Store byte %8, 0
  %9 := GetPointer int, std.result.Result<Int,test.ZeroSize>::Ok* %7.2
  Store int %9, 1
  Ret %7
label @1:
  %10 := Call std.result.Result<Int,test.ZeroSize>::Error* myte.builtin.alloc(1)
  %11 := Cast std.result.Result<Int,test.ZeroSize>::Error* %10 to byte*
  Store byte %11, 1
  Ret %10
}

func std.result.Result<Int,test.ZeroSize>* @test.testZeroSizeOkAndResultUnwrap(std.result.Result<test.ZeroSize,test.ZeroSize>* %0) {
  %1 := Cast std.result.Result<test.ZeroSize,test.ZeroSize>* %0 to byte*
  %2 := Load byte %1
  %3 := Eq byte %2, 0
  branch %3, @0, @1
label @0:
  Call void @test.use<test.ZeroSize>()
  %4 := Call std.result.Result<Int,test.ZeroSize>::Ok* myte.builtin.alloc(1)
  %5 := Cast std.result.Result<Int,test.ZeroSize>::Ok* %4 to byte*
  Store byte %5, 0
  %6 := GetPointer int, std.result.Result<Int,test.ZeroSize>::Ok* %4.2
  Store int %6, 1
  Ret %4
label @1:
  %7 := Call std.result.Result<Int,test.ZeroSize>::Error* myte.builtin.alloc(1)
  %8 := Cast std.result.Result<Int,test.ZeroSize>::Error* %7 to byte*
  Store byte %8, 1
  Ret %7
}

func void @test.use<Bool>(bool %0) {
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func void @test.use<Int>(int %0) {
  Ret
}

func void @test.use<test.ZeroSize>() {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.testUnwrapResult)
  Call void @test.use<Function>(@test.testUnwrapResultDifferentType)
  Call void @test.use<Function>(@test.testDoubleUnwrap)
  Call void @test.use<Function>(@test.testZeroSizeOkUnwrap)
  Call void @test.use<Function>(@test.testZeroSizeResultUnwrap)
  Call void @test.use<Function>(@test.testZeroSizeOkAndResultUnwrap)
  Ret 0
}