func std.result.Result<Int,Bool>* @test.testUnwrapResult(std.result.Result<Int,Bool>* %0) {
  %1 := Load byte %0
  %2 := Eq byte %1, 0
  branch %2, @0, @1
label @0:
  %3 := GetPointer int, std.result.Result<Int,Bool>::Ok* %0.2
  %4 := Load int %3
  Call void @test.use<Int>(%4)
  %5 := Call std.result.Result<Int,Bool>::Ok* myte.builtin.alloc(1)
  Store byte %5, 0
  %6 := GetPointer int, std.result.Result<Int,Bool>::Ok* %5.2
  Store int %6, 1
  Ret %5
label @1:
  %7 := GetPointer bool, std.result.Result<Int,Bool>::Error* %0.1
  %8 := Load bool %7
  %9 := Call std.result.Result<Int,Bool>::Error* myte.builtin.alloc(1)
  Store byte %9, 1
  %10 := GetPointer bool, std.result.Result<Int,Bool>::Error* %9.1
  Store bool %10, %8
  Ret %9
}

func std.result.Result<Long,Bool>* @test.testUnwrapResultDifferentType(std.result.Result<Int,Bool>* %0) {
  %1 := Load byte %0
  %2 := Eq byte %1, 0
  branch %2, @0, @1
label @0:
  %3 := GetPointer int, std.result.Result<Int,Bool>::Ok* %0.2
  %4 := Load int %3
  Call void @test.use<Int>(%4)
  %5 := Call std.result.Result<Long,Bool>::Ok* myte.builtin.alloc(1)
  Store byte %5, 0
  %6 := GetPointer long, std.result.Result<Long,Bool>::Ok* %5.2
  Store long %6, 1
  Ret %5
label @1:
  %7 := GetPointer bool, std.result.Result<Int,Bool>::Error* %0.1
  %8 := Load bool %7
  %9 := Call std.result.Result<Long,Bool>::Error* myte.builtin.alloc(1)
  Store byte %9, 1
  %10 := GetPointer bool, std.result.Result<Long,Bool>::Error* %9.1
  Store bool %10, %8
  Ret %9
}

func std.result.Result<Int,Bool>* @test.testDoubleUnwrap(std.result.Result<Result<Int,Bool>,Bool>* %0) {
  %1 := Load byte %0
  %2 := Eq byte %1, 0
  branch %2, @0, @3
label @0:
  %3 := GetPointer std.result.Result<Int,Bool>*, std.result.Result<Result<Int,Bool>,Bool>::Ok* %0.2
  %4 := Load std.result.Result<Int,Bool>* %3
  %5 := Load byte %4
  %6 := Eq byte %5, 0
  branch %6, @1, @2
label @1:
  %7 := GetPointer int, std.result.Result<Int,Bool>::Ok* %4.2
  %8 := Load int %7
  Call void @test.use<Int>(%8)
  %9 := Call std.result.Result<Int,Bool>::Ok* myte.builtin.alloc(1)
  Store byte %9, 0
  %10 := GetPointer int, std.result.Result<Int,Bool>::Ok* %9.2
  Store int %10, 1
  Ret %9
label @2:
  %11 := GetPointer bool, std.result.Result<Int,Bool>::Error* %4.1
  %12 := Load bool %11
  %13 := Call std.result.Result<Int,Bool>::Error* myte.builtin.alloc(1)
  Store byte %13, 1
  %14 := GetPointer bool, std.result.Result<Int,Bool>::Error* %13.1
  Store bool %14, %12
  Ret %13
label @3:
  %15 := GetPointer bool, std.result.Result<Result<Int,Bool>,Bool>::Error* %0.1
  %16 := Load bool %15
  %17 := Call std.result.Result<Int,Bool>::Error* myte.builtin.alloc(1)
  Store byte %17, 1
  %18 := GetPointer bool, std.result.Result<Int,Bool>::Error* %17.1
  Store bool %18, %16
  Ret %17
}

func std.result.Result<Int,Bool>* @test.testZeroSizeOkUnwrap(std.result.Result<test.ZeroSize,Bool>* %0) {
  %1 := Load byte %0
  %2 := Eq byte %1, 0
  branch %2, @0, @1
label @0:
  Call void @test.use<test.ZeroSize>()
  %3 := Call std.result.Result<Int,Bool>::Ok* myte.builtin.alloc(1)
  Store byte %3, 0
  %4 := GetPointer int, std.result.Result<Int,Bool>::Ok* %3.2
  Store int %4, 1
  Ret %3
label @1:
  %5 := GetPointer bool, std.result.Result<test.ZeroSize,Bool>::Error* %0.1
  %6 := Load bool %5
  %7 := Call std.result.Result<Int,Bool>::Error* myte.builtin.alloc(1)
  Store byte %7, 1
  %8 := GetPointer bool, std.result.Result<Int,Bool>::Error* %7.1
  Store bool %8, %6
  Ret %7
}

func std.result.Result<Int,test.ZeroSize>* @test.testZeroSizeResultUnwrap(std.result.Result<Bool,test.ZeroSize>* %0) {
  %1 := Load byte %0
  %2 := Eq byte %1, 0
  branch %2, @0, @1
label @0:
  %3 := GetPointer bool, std.result.Result<Bool,test.ZeroSize>::Ok* %0.1
  %4 := Load bool %3
  Call void @test.use<Bool>(%4)
  %5 := Call std.result.Result<Int,test.ZeroSize>::Ok* myte.builtin.alloc(1)
  Store byte %5, 0
  %6 := GetPointer int, std.result.Result<Int,test.ZeroSize>::Ok* %5.2
  Store int %6, 1
  Ret %5
label @1:
  %7 := Call std.result.Result<Int,test.ZeroSize>::Error* myte.builtin.alloc(1)
  Store byte %7, 1
  Ret %7
}

func std.result.Result<Int,test.ZeroSize>* @test.testZeroSizeOkAndResultUnwrap(std.result.Result<test.ZeroSize,test.ZeroSize>* %0) {
  %1 := Load byte %0
  %2 := Eq byte %1, 0
  branch %2, @0, @1
label @0:
  Call void @test.use<test.ZeroSize>()
  %3 := Call std.result.Result<Int,test.ZeroSize>::Ok* myte.builtin.alloc(1)
  Store byte %3, 0
  %4 := GetPointer int, std.result.Result<Int,test.ZeroSize>::Ok* %3.2
  Store int %4, 1
  Ret %3
label @1:
  %5 := Call std.result.Result<Int,test.ZeroSize>::Error* myte.builtin.alloc(1)
  Store byte %5, 1
  Ret %5
}

func void @test.use<Bool>(bool %0) {
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func void @test.use<Int>(int %0) {
  Ret
}

func void @test.use<test.ZeroSize>() {
  Ret
}

func int @test.main() {
  Call void @test.use<Function>(@test.testUnwrapResult)
  Call void @test.use<Function>(@test.testUnwrapResultDifferentType)
  Call void @test.use<Function>(@test.testDoubleUnwrap)
  Call void @test.use<Function>(@test.testZeroSizeOkUnwrap)
  Call void @test.use<Function>(@test.testZeroSizeResultUnwrap)
  Call void @test.use<Function>(@test.testZeroSizeOkAndResultUnwrap)
  Ret 0
}