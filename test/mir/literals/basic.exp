func void @_init() {
  %0 := Call std.string.String* myte.builtin.alloc(1)
  %1 := GetPointer byte*, std.string.String* %0.2
  Store byte* %1, @.S0
  %2 := GetPointer int, std.string.String* %0.0
  Store int %2, 4
  %3 := GetPointer int, std.string.String* %0.1
  Store int %3, 4
  Store std.string.String* @test.z, %0
  Ret
}

func void @test.use<Bool>(bool %0) {
  Ret
}

func void @test.use<Byte>(byte %0) {
  Ret
}

func void @test.use<Function>(fn %0) {
  Ret
}

func void @test.use<Int>(int %0) {
  Ret
}

func void @test.use<Long>(long %0) {
  Ret
}

func void @test.use<String>(std.string.String* %0) {
  Ret
}

func void @test.use<Unit>() {
  Ret
}

global int @test.y1 = 500

global byte @test.y2 = 1

global long @test.y3 = 2147483648

global int @test.c1 = 97

global byte @test.c2 = 97

global long @test.c3 = 97

global std.string.String* @test.z = uninitialized

global byte[4] @.S0 = "test"

global bool @test.a1 = true

func int @test.main() {
  Call void @test.use<Int>(0)
  Call void @test.use<Int>(2147483647)
  Call void @test.use<Long>(2147483648)
  %0 := Add int 2, 4
  %1 := Add int %0, 6
  Call void @test.use<Int>(%1)
  %2 := Add long 2, 2147483648
  %3 := Add long %2, 6
  Call void @test.use<Long>(%3)
  Call void @test.use<Function>(@test.useAll)
  Ret 0
}

func void @test.useAll() {
  Call void @test.use<Unit>()
  %0 := Load int @test.y1
  Call void @test.use<Int>(%0)
  %1 := Load byte @test.y2
  Call void @test.use<Byte>(%1)
  %2 := Load long @test.y3
  Call void @test.use<Long>(%2)
  %3 := Load int @test.c1
  Call void @test.use<Int>(%3)
  %4 := Load byte @test.c2
  Call void @test.use<Byte>(%4)
  %5 := Load long @test.c3
  Call void @test.use<Long>(%5)
  %6 := Load std.string.String* @test.z
  Call void @test.use<String>(%6)
  %7 := Load bool @test.a1
  Call void @test.use<Bool>(%7)
  Ret
}