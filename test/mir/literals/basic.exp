func void @_init() {
  %0 := CallBuiltin std.string.String* myte_alloc(1)
  %1 := GetPointer byte*, std.string.String* %0.0
  Store byte* %1, @.S0
  %2 := GetPointer int, std.string.String* %0.1
  Store int %2, 4
  %3 := GetPointer int, std.string.String* %0.2
  Store int %3, 4
  Store std.string.String* @test.z, %0
  Ret
}

func void @test.use<Bool>(bool %4) {
  Ret
}

func void @test.use<Byte>(byte %5) {
  Ret
}

func void @test.use<Function>(fn %6) {
  Ret
}

func void @test.use<Int>(int %7) {
  Ret
}

func void @test.use<Long>(long %8) {
  Ret
}

func void @test.use<String>(std.string.String* %9) {
  Ret
}

func void @test.use<Unit>() {
  Ret
}

global int @test.y1 = 500

global byte @test.y2 = 1

global long @test.y3 = 2147483648

global int @test.c1 = 97

global byte @test.c2 = 97

global long @test.c3 = 97

global std.string.String* @test.z = uninitialized

global byte[4] @.S0 = "test"

global bool @test.a1 = true

func int @test.main() {
  Call void @test.use<Int>(0)
  Call void @test.use<Int>(2147483647)
  Call void @test.use<Long>(2147483648)
  %10 := Add int 2, 4
  %11 := Add int %10, 6
  Call void @test.use<Int>(%11)
  %12 := Add long 2, 2147483648
  %13 := Add long %12, 6
  Call void @test.use<Long>(%13)
  Call void @test.use<Function>(@test.useAll)
  Ret 0
}

func void @test.useAll() {
  Call void @test.use<Unit>()
  %14 := Load int @test.y1
  Call void @test.use<Int>(%14)
  %15 := Load byte @test.y2
  Call void @test.use<Byte>(%15)
  %16 := Load long @test.y3
  Call void @test.use<Long>(%16)
  %17 := Load int @test.c1
  Call void @test.use<Int>(%17)
  %18 := Load byte @test.c2
  Call void @test.use<Byte>(%18)
  %19 := Load long @test.c3
  Call void @test.use<Long>(%19)
  %20 := Load std.string.String* @test.z
  Call void @test.use<String>(%20)
  %21 := Load bool @test.a1
  Call void @test.use<Bool>(%21)
  Ret
}